{
	"id": "e20bf0677616628bdd4b00a95e1c0156",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC1155MixedFungible.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./ERC1155.sol\";\n\n/**\n    @dev Extension to ERC1155 for Mixed Fungible and Non-Fungible Items support\n    The main benefit is sharing of common type information, just like you do when\n    creating a fungible id.\n*/\ncontract ERC1155MixedFungible is ERC1155 {\n\n    // Use a split bit implementation.\n    // Store the type in the upper 128 bits..\n    uint256 constant TYPE_MASK = uint256(uint128(~0)) << 128;\n\n    // ..and the non-fungible index in the lower 128\n    uint256 constant NF_INDEX_MASK = uint128(~0);\n\n    // The top bit is a flag to tell if this is a NFI.\n    uint256 constant TYPE_NF_BIT = 1 << 255;\n\n    mapping (uint256 => address) nfOwners;\n\n    // Only to make code clearer. Should not be functions\n    function isNonFungible(uint256 _id) public pure returns(bool) {\n        return _id & TYPE_NF_BIT == TYPE_NF_BIT;\n    }\n    function isFungible(uint256 _id) public pure returns(bool) {\n        return _id & TYPE_NF_BIT == 0;\n    }\n    function getNonFungibleIndex(uint256 _id) public pure returns(uint256) {\n        return _id & NF_INDEX_MASK;\n    }\n    function getNonFungibleBaseType(uint256 _id) public pure returns(uint256) {\n        return _id & TYPE_MASK;\n    }\n    function isNonFungibleBaseType(uint256 _id) public pure returns(bool) {\n        // A base type has the NF bit but does not have an index.\n        return (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK == 0);\n    }\n    function isNonFungibleItem(uint256 _id) public pure returns(bool) {\n        // A base type has the NF bit but does has an index.\n        return (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK != 0);\n    }\n    function ownerOf(uint256 _id) public view returns (address) {\n        return nfOwners[_id];\n    }\n\n    // override\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {\n\n        require(_to != address(0x0), \"cannot send to zero address\");\n        require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\");\n\n        if (isNonFungible(_id)) {\n            require(nfOwners[_id] == _from);\n            nfOwners[_id] = _to;\n            // You could keep balance of NF type in base type id like so:\n            // uint256 baseType = getNonFungibleBaseType(_id);\n            // balances[baseType][_from] = balances[baseType][_from].sub(_value);\n            // balances[baseType][_to]   = balances[baseType][_to].add(_value);\n        } else {\n            balances[_id][_from] = balances[_id][_from].sub(_value);\n            balances[_id][_to]   = balances[_id][_to].add(_value);\n        }\n\n        emit TransferSingle(msg.sender, _from, _to, _id, _value);\n\n        if (_to.isContract()) {\n            _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data);\n        }\n    }\n\n    // override\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {\n\n        require(_to != address(0x0), \"cannot send to zero address\");\n        require(_ids.length == _values.length, \"Array length must match\");\n\n        // Only supporting a global operator approval allows us to do only 1 check and not to touch storage to handle allowances.\n        require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\");\n\n        for (uint256 i = 0; i < _ids.length; ++i) {\n            // Cache value to local variable to reduce read costs.\n            uint256 id = _ids[i];\n            uint256 value = _values[i];\n\n            if (isNonFungible(id)) {\n                require(nfOwners[id] == _from);\n                nfOwners[id] = _to;\n            } else {\n                balances[id][_from] = balances[id][_from].sub(value);\n                balances[id][_to]   = value.add(balances[id][_to]);\n            }\n        }\n\n        emit TransferBatch(msg.sender, _from, _to, _ids, _values);\n\n        if (_to.isContract()) {\n            _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data);\n        }\n    }\n\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256) {\n        if (isNonFungibleItem(_id))\n            return nfOwners[_id] == _owner ? 1 : 0;\n        return balances[_id][_owner];\n    }\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {\n\n        require(_owners.length == _ids.length);\n\n        uint256[] memory balances_ = new uint256[](_owners.length);\n\n        for (uint256 i = 0; i < _owners.length; ++i) {\n            uint256 id = _ids[i];\n            if (isNonFungibleItem(id)) {\n                balances_[i] = nfOwners[id] == _owners[i] ? 1 : 0;\n            } else {\n            \tbalances_[i] = balances[id][_owners[i]];\n            }\n        }\n\n        return balances_;\n    }\n}\n"
			},
			"contracts/ERC1155.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\nimport \"./Common.sol\";\nimport \"./IERC1155TokenReceiver.sol\";\nimport \"./IERC1155.sol\";\n\n// A sample implementation of core ERC1155 function.\ncontract ERC1155 is IERC1155, ERC165, CommonConstants\n{\n    using SafeMath for uint256;\n    using Address for address;\n\n    // id => (owner => balance)\n    mapping (uint256 => mapping(address => uint256)) internal balances;\n\n    // owner => (operator => approved)\n    mapping (address => mapping(address => bool)) internal operatorApproval;\n\n/////////////////////////////////////////// ERC165 //////////////////////////////////////////////\n\n    /*\n        bytes4(keccak256('supportsInterface(bytes4)'));\n    */\n    bytes4 constant private INTERFACE_SIGNATURE_ERC165 = 0x01ffc9a7;\n\n    /*\n        bytes4(keccak256(\"safeTransferFrom(address,address,uint256,uint256,bytes)\")) ^\n        bytes4(keccak256(\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\")) ^\n        bytes4(keccak256(\"balanceOf(address,uint256)\")) ^\n        bytes4(keccak256(\"balanceOfBatch(address[],uint256[])\")) ^\n        bytes4(keccak256(\"setApprovalForAll(address,bool)\")) ^\n        bytes4(keccak256(\"isApprovedForAll(address,address)\"));\n    */\n    bytes4 constant private INTERFACE_SIGNATURE_ERC1155 = 0xd9b67a26;\n\n    function supportsInterface(bytes4 _interfaceId)\n    public\n    view\n    returns (bool) {\n         if (_interfaceId == INTERFACE_SIGNATURE_ERC165 ||\n             _interfaceId == INTERFACE_SIGNATURE_ERC1155) {\n            return true;\n         }\n\n         return false;\n    }\n\n/////////////////////////////////////////// ERC1155 //////////////////////////////////////////////\n\n    /**\n        @notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\n        MUST revert if `_to` is the zero address.\n        MUST revert if balance of holder for token `_id` is lower than the `_value` sent.\n        MUST revert on any other error.\n        MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\n        After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n        @param _from    Source address\n        @param _to      Target address\n        @param _id      ID of the token type\n        @param _value   Transfer amount\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\n    */\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {\n\n        require(_to != address(0x0), \"_to must be non-zero.\");\n        require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\");\n\n        // SafeMath will throw with insuficient funds _from\n        // or if _id is not valid (balance will be 0)\n        balances[_id][_from] = balances[_id][_from].sub(_value);\n        balances[_id][_to]   = _value.add(balances[_id][_to]);\n\n        // MUST emit event\n        emit TransferSingle(msg.sender, _from, _to, _id, _value);\n\n        // Now that the balance is updated and the event was emitted,\n        // call onERC1155Received if the destination is a contract.\n        if (_to.isContract()) {\n            _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data);\n        }\n    }\n\n    /**\n        @notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\n        MUST revert if `_to` is the zero address.\n        MUST revert if length of `_ids` is not the same as length of `_values`.\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\n        MUST revert on any other error.\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n        @param _from    Source address\n        @param _to      Target address\n        @param _ids     IDs of each token type (order and length must match _values array)\n        @param _values  Transfer amounts per token type (order and length must match _ids array)\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\n    */\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {\n\n        // MUST Throw on errors\n        require(_to != address(0x0), \"destination address must be non-zero.\");\n        require(_ids.length == _values.length, \"_ids and _values array length must match.\");\n        require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\");\n\n        for (uint256 i = 0; i < _ids.length; ++i) {\n            uint256 id = _ids[i];\n            uint256 value = _values[i];\n\n            // SafeMath will throw with insuficient funds _from\n            // or if _id is not valid (balance will be 0)\n            balances[id][_from] = balances[id][_from].sub(value);\n            balances[id][_to]   = value.add(balances[id][_to]);\n        }\n\n        // Note: instead of the below batch versions of event and acceptance check you MAY have emitted a TransferSingle\n        // event and a subsequent call to _doSafeTransferAcceptanceCheck in above loop for each balance change instead.\n        // Or emitted a TransferSingle event for each in the loop and then the single _doSafeBatchTransferAcceptanceCheck below.\n        // However it is implemented the balance changes and events MUST match when a check (i.e. calling an external contract) is done.\n\n        // MUST emit event\n        emit TransferBatch(msg.sender, _from, _to, _ids, _values);\n\n        // Now that the balances are updated and the events are emitted,\n        // call onERC1155BatchReceived if the destination is a contract.\n        if (_to.isContract()) {\n            _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data);\n        }\n    }\n\n    /**\n        @notice Get the balance of an account's Tokens.\n        @param _owner  The address of the token holder\n        @param _id     ID of the Token\n        @return        The _owner's balance of the Token type requested\n     */\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256) {\n        // The balance of any account can be calculated from the Transfer events history.\n        // However, since we need to keep the balances to validate transfer request,\n        // there is no extra cost to also privide a querry function.\n        return balances[_id][_owner];\n    }\n\n\n    /**\n        @notice Get the balance of multiple account/token pairs\n        @param _owners The addresses of the token holders\n        @param _ids    ID of the Tokens\n        @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\n     */\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {\n\n        require(_owners.length == _ids.length);\n\n        uint256[] memory balances_ = new uint256[](_owners.length);\n\n        for (uint256 i = 0; i < _owners.length; ++i) {\n            balances_[i] = balances[_ids[i]][_owners[i]];\n        }\n\n        return balances_;\n    }\n\n    /**\n        @notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\n        @dev MUST emit the ApprovalForAll event on success.\n        @param _operator  Address to add to the set of authorized operators\n        @param _approved  True if the operator is approved, false to revoke approval\n    */\n    function setApprovalForAll(address _operator, bool _approved) external {\n        operatorApproval[msg.sender][_operator] = _approved;\n        emit ApprovalForAll(msg.sender, _operator, _approved);\n    }\n\n    /**\n        @notice Queries the approval status of an operator for a given owner.\n        @param _owner     The owner of the Tokens\n        @param _operator  Address of authorized operator\n        @return           True if the operator is approved, false if not\n    */\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool) {\n        return operatorApproval[_owner][_operator];\n    }\n\n/////////////////////////////////////////// Internal //////////////////////////////////////////////\n\n    function _doSafeTransferAcceptanceCheck(address _operator, address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) internal {\n\n        // If this was a hybrid standards solution you would have to check ERC165(_to).supportsInterface(0x4e2312e0) here but as this is a pure implementation of an ERC-1155 token set as recommended by\n        // the standard, it is not necessary. The below should revert in all failure cases i.e. _to isn't a receiver, or it is and either returns an unknown value or it reverts in the call to indicate non-acceptance.\n\n\n        // Note: if the below reverts in the onERC1155Received function of the _to address you will have an undefined revert reason returned rather than the one in the require test.\n        // If you want predictable revert reasons consider using low level _to.call() style instead so the revert does not bubble up and you can revert yourself on the ERC1155_ACCEPTED test.\n        require(ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED, \"contract returned an unknown value from onERC1155Received\");\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) internal {\n\n        // If this was a hybrid standards solution you would have to check ERC165(_to).supportsInterface(0x4e2312e0) here but as this is a pure implementation of an ERC-1155 token set as recommended by\n        // the standard, it is not necessary. The below should revert in all failure cases i.e. _to isn't a receiver, or it is and either returns an unknown value or it reverts in the call to indicate non-acceptance.\n\n        // Note: if the below reverts in the onERC1155BatchReceived function of the _to address you will have an undefined revert reason returned rather than the one in the require test.\n        // If you want predictable revert reasons consider using low level _to.call() style instead so the revert does not bubble up and you can revert yourself on the ERC1155_BATCH_ACCEPTED test.\n        require(ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED, \"contract returned an unknown value from onERC1155BatchReceived\");\n    }\n}\n"
			},
			"contracts/IERC1155.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./ERC165.sol\";\n\n/**\n    @title ERC-1155 Multi Token Standard\n    @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\n */\ninterface IERC1155 /* is ERC165 */ {\n    /**\n        @dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\n        The `_operator` argument MUST be msg.sender.\n        The `_from` argument MUST be the address of the holder whose balance is decreased.\n        The `_to` argument MUST be the address of the recipient whose balance is increased.\n        The `_id` argument MUST be the token type being transferred.\n        The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by.\n        When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\n        When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\n    */\n    event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);\n\n    /**\n        @dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\n        The `_operator` argument MUST be msg.sender.\n        The `_from` argument MUST be the address of the holder whose balance is decreased.\n        The `_to` argument MUST be the address of the recipient whose balance is increased.\n        The `_ids` argument MUST be the list of tokens being transferred.\n        The `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by.\n        When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\n        When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\n    */\n    event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);\n\n    /**\n        @dev MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absense of an event assumes disabled).\n    */\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /**\n        @dev MUST emit when the URI is updated for a token ID.\n        URIs are defined in RFC 3986.\n        The URI MUST point a JSON file that conforms to the \"ERC-1155 Metadata URI JSON Schema\".\n    */\n    event URI(string _value, uint256 indexed _id);\n\n    /**\n        @notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\n        MUST revert if `_to` is the zero address.\n        MUST revert if balance of holder for token `_id` is lower than the `_value` sent.\n        MUST revert on any other error.\n        MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\n        After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n        @param _from    Source address\n        @param _to      Target address\n        @param _id      ID of the token type\n        @param _value   Transfer amount\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\n    */\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\n\n    /**\n        @notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\n        MUST revert if `_to` is the zero address.\n        MUST revert if length of `_ids` is not the same as length of `_values`.\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\n        MUST revert on any other error.\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n        @param _from    Source address\n        @param _to      Target address\n        @param _ids     IDs of each token type (order and length must match _values array)\n        @param _values  Transfer amounts per token type (order and length must match _ids array)\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\n    */\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\n\n    /**\n        @notice Get the balance of an account's Tokens.\n        @param _owner  The address of the token holder\n        @param _id     ID of the Token\n        @return        The _owner's balance of the Token type requested\n     */\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\n\n    /**\n        @notice Get the balance of multiple account/token pairs\n        @param _owners The addresses of the token holders\n        @param _ids    ID of the Tokens\n        @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\n     */\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\n\n    /**\n        @notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\n        @dev MUST emit the ApprovalForAll event on success.\n        @param _operator  Address to add to the set of authorized operators\n        @param _approved  True if the operator is approved, false to revoke approval\n    */\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /**\n        @notice Queries the approval status of an operator for a given owner.\n        @param _owner     The owner of the Tokens\n        @param _operator  Address of authorized operator\n        @return           True if the operator is approved, false if not\n    */\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n"
			},
			"contracts/IERC1155TokenReceiver.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\n*/\ninterface ERC1155TokenReceiver {\n    /**\n        @notice Handle the receipt of a single ERC1155 token type.\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\n        This function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\n        This function MUST revert if it rejects the transfer.\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n        @param _operator  The address which initiated the transfer (i.e. msg.sender)\n        @param _from      The address which previously owned the token\n        @param _id        The ID of the token being transferred\n        @param _value     The amount of tokens being transferred\n        @param _data      Additional data with no specified format\n        @return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n    */\n    function onERC1155Received(address _operator, address _from, uint256 _id, uint256 _value, bytes calldata _data) external returns(bytes4);\n\n    /**\n        @notice Handle the receipt of multiple ERC1155 token types.\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\n        This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\n        This function MUST revert if it rejects the transfer(s).\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n        @param _operator  The address which initiated the batch transfer (i.e. msg.sender)\n        @param _from      The address which previously owned the token\n        @param _ids       An array containing ids of each token being transferred (order and length must match _values array)\n        @param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\n        @param _data      Additional data with no specified format\n        @return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n    */\n    function onERC1155BatchReceived(address _operator, address _from, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external returns(bytes4);\n}\n"
			},
			"contracts/Common.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n    Note: Simple contract to use as base for const vals\n*/\ncontract CommonConstants {\n\n    bytes4 constant internal ERC1155_ACCEPTED = 0xf23a6e61; // bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))\n    bytes4 constant internal ERC1155_BATCH_ACCEPTED = 0xbc197c81; // bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))\n}\n"
			},
			"contracts/Address.sol": {
				"content": "pragma solidity ^0.5.0;\n\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solium-disable-next-line security/no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n    /**\n    * @dev Multiplies two numbers, throws on overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        // uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return a / b;\n    }\n\n    /**\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    /**\n    * @dev Adds two numbers, throws on overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n        c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n"
			},
			"contracts/ERC165.sol": {
				"content": "pragma solidity ^0.5.0;\n\n\n/**\n * @title ERC165\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\n */\ninterface ERC165 {\n\n    /**\n     * @notice Query if a contract implements an interface\n     * @param _interfaceId The interface identifier, as specified in ERC-165\n     * @dev Interface identification is specified in ERC-165. This function\n     * uses less than 30,000 gas.\n     */\n    function supportsInterface(bytes4 _interfaceId)\n    external\n    view\n    returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":86:1092  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":86:1092  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b1c6fe98b7df48811639a4f33bf7c852fc57cafa99badb1500ece05fb8cd265f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1c6fe98b7df48811639a4f33bf7c852fc57cafa99badb1500ece05fb8cd265f64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xC6 INVALID SWAP9 0xB7 0xDF 0x48 DUP2 AND CODECOPY LOG4 RETURN EXTCODESIZE 0xF7 0xC8 MSTORE 0xFC JUMPI 0xCA STATICCALL SWAP10 0xBA 0xDB ISZERO STOP 0xEC 0xE0 0x5F 0xB8 0xCD 0x26 0x5F PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "86:1006:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1c6fe98b7df48811639a4f33bf7c852fc57cafa99badb1500ece05fb8cd265f64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xC6 INVALID SWAP9 0xB7 0xDF 0x48 DUP2 AND CODECOPY LOG4 RETURN EXTCODESIZE 0xF7 0xC8 MSTORE 0xFC JUMPI 0xCA STATICCALL SWAP10 0xBA 0xDB ISZERO STOP 0xEC 0xE0 0x5F 0xB8 0xCD 0x26 0x5F PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "86:1006:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 1092,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 1092,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b1c6fe98b7df48811639a4f33bf7c852fc57cafa99badb1500ece05fb8cd265f64736f6c63430005110032",
									".code": [
										{
											"begin": 86,
											"end": 1092,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "ADDRESS"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "MSTORE"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 86,
											"end": 1092,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\"}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x016260fe1d6f563acefd8adb335b05e569b4026e3f8d472c3e855412debb83de\",\"urls\":[\"bzz-raw://701be90d29a315d87757399639b99315e37db64fd8e2157b27888061edebb7ca\",\"dweb:/ipfs/QmfLFj4eVtsF3V3LaxyKe6ZaGkwpR8ip1NV44WaHQ3BV1g\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "Utility library of inline functions on addresses"
					}
				}
			},
			"contracts/Common.sol": {
				"CommonConstants": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Common.sol\":88:414  contract CommonConstants {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Common.sol\":88:414  contract CommonConstants {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Common.sol\":88:414  contract CommonConstants {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158202f8055ae4393852904d6e2d6af8c7eb46412ad8d7a12ca1031f9fcaaac0b4dcc64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158202f8055ae4393852904d6e2d6af8c7eb46412ad8d7a12ca1031f9fcaaac0b4dcc64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F DUP1 SSTORE 0xAE NUMBER SWAP4 DUP6 0x29 DIV 0xD6 0xE2 0xD6 0xAF DUP13 PUSH31 0xB46412AD8D7A12CA1031F9FCAAAC0B4DCC64736F6C63430005110032000000 ",
							"sourceMap": "88:326:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:326:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723158202f8055ae4393852904d6e2d6af8c7eb46412ad8d7a12ca1031f9fcaaac0b4dcc64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F DUP1 SSTORE 0xAE NUMBER SWAP4 DUP6 0x29 DIV 0xD6 0xE2 0xD6 0xAF DUP13 PUSH31 0xB46412AD8D7A12CA1031F9FCAAAC0B4DCC64736F6C63430005110032000000 ",
							"sourceMap": "88:326:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "MSTORE"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "CODECOPY"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 414,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202f8055ae4393852904d6e2d6af8c7eb46412ad8d7a12ca1031f9fcaaac0b4dcc64736f6c63430005110032",
									".code": [
										{
											"begin": 88,
											"end": 414,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 88,
											"end": 414,
											"name": "MSTORE"
										},
										{
											"begin": 88,
											"end": 414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 414,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 414,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Note: Simple contract to use as base for const vals\"}},\"settings\":{\"compilationTarget\":{\"contracts/Common.sol\":\"CommonConstants\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Common.sol\":{\"keccak256\":\"0x900d50cdfedbcf60e9e1ef727674ead98b35abf5a01714ed285989d410c01db8\",\"urls\":[\"bzz-raw://9903b443608607b5f94e85f77d35528baf9adb8c7acc70bc0818437a251f4c8b\",\"dweb:/ipfs/QmRHVoDnjh7ihKZJCXbsVwMEodGEtKBE1wJcvxqkqec2R2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "Note: Simple contract to use as base for const vals"
					}
				}
			},
			"contracts/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"return": "The _owner's balance of the Token type requested"
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"return": "True if the operator is approved, false if not"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"_data": "Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`",
									"_from": "Source address",
									"_ids": "IDs of each token type (order and length must match _values array)",
									"_to": "Target address",
									"_values": "Transfer amounts per token type (order and length must match _ids array)"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"_data": "Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address",
									"_value": "Transfer amount"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155.sol\":214:11871  contract ERC1155 is IERC1155, ERC165, CommonConstants... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ERC1155.sol\":214:11871  contract ERC1155 is IERC1155, ERC165, CommonConstants... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155.sol\":214:11871  contract ERC1155 is IERC1155, ERC165, CommonConstants... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/ERC1155.sol\":214:11871  contract ERC1155 is IERC1155, ERC165, CommonConstants... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155.sol\":7401:7770  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"contracts/ERC1155.sol\":7401:7770  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_21:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_24:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_27:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_33:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_36:\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_38:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_38)\n    tag_40:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_51:\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/ERC1155.sol\":7401:7770  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n    tag_13:\n        /* \"contracts/ERC1155.sol\":7472:7479  uint256 */\n      0x00\n        /* \"contracts/ERC1155.sol\":7742:7750  balances */\n      dup1\n        /* \"contracts/ERC1155.sol\":7742:7755  balances[_id] */\n      0x00\n        /* \"contracts/ERC1155.sol\":7751:7754  _id */\n      dup4\n        /* \"contracts/ERC1155.sol\":7742:7755  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":7742:7763  balances[_id][_owner] */\n      0x00\n        /* \"contracts/ERC1155.sol\":7756:7762  _owner */\n      dup5\n        /* \"contracts/ERC1155.sol\":7742:7763  balances[_id][_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":7735:7763  return balances[_id][_owner] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":7401:7770  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_16:\n        /* \"contracts/ERC1155.sol\":1400:1404  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":782:792  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"contracts/ERC1155.sol\":1437:1463  INTERFACE_SIGNATURE_ERC165 */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":1421:1463  _interfaceId == INTERFACE_SIGNATURE_ERC165 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":1421:1433  _interfaceId */\n      dup3\n        /* \"contracts/ERC1155.sol\":1421:1463  _interfaceId == INTERFACE_SIGNATURE_ERC165 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1421:1523  _interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n      dup1\n      tag_55\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":1302:1312  0xd9b67a26 */\n      0xd9b67a26\n        /* \"contracts/ERC1155.sol\":1496:1523  INTERFACE_SIGNATURE_ERC1155 */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":1480:1523  _interfaceId == INTERFACE_SIGNATURE_ERC1155 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":1480:1492  _interfaceId */\n      dup3\n        /* \"contracts/ERC1155.sol\":1480:1523  _interfaceId == INTERFACE_SIGNATURE_ERC1155 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1421:1523  _interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n    tag_55:\n        /* \"contracts/ERC1155.sol\":1417:1562  if (_interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n      iszero\n      tag_56\n      jumpi\n        /* \"contracts/ERC1155.sol\":1546:1550  true */\n      0x01\n        /* \"contracts/ERC1155.sol\":1539:1550  return true */\n      swap1\n      pop\n      jump(tag_54)\n        /* \"contracts/ERC1155.sol\":1417:1562  if (_interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n    tag_56:\n        /* \"contracts/ERC1155.sol\":1580:1585  false */\n      0x00\n        /* \"contracts/ERC1155.sol\":1573:1585  return false */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_54:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n    tag_28:\n        /* \"contracts/ERC1155.sol\":5598:5601  0x0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":5583:5602  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":5583:5586  _to */\n      dup8\n        /* \"contracts/ERC1155.sol\":5583:5602  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155.sol\":5575:5644  require(_to != address(0x0), \"destination address must be non-zero.\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_62feaa226fe2bab79230d856b8132c73f9553fb9f97b507f32473583a3bdc412\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/ERC1155.sol\":5677:5684  _values */\n      dup4\n      dup4\n        /* \"contracts/ERC1155.sol\":5677:5691  _values.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5662:5666  _ids */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":5662:5673  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5662:5691  _ids.length == _values.length */\n      eq\n        /* \"contracts/ERC1155.sol\":5654:5737  require(_ids.length == _values.length, \"_ids and _values array length must match.\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d06b0e7fc248df96a03d3f6210ab25cdbd58ba1e3989c7aed9df538ab45fc969\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/ERC1155.sol\":5764:5774  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":5755:5774  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":5755:5760  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":5755:5774  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":5755:5821  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":5817:5821  true */\n      0x01\n        /* \"contracts/ERC1155.sol\":5778:5821  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n        /* \"contracts/ERC1155.sol\":5778:5794  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":5778:5801  operatorApproval[_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":5795:5800  _from */\n      dup11\n        /* \"contracts/ERC1155.sol\":5778:5801  operatorApproval[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":5778:5813  operatorApproval[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC1155.sol\":5802:5812  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":5778:5813  operatorApproval[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":5778:5821  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ERC1155.sol\":5755:5821  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n    tag_60:\n        /* \"contracts/ERC1155.sol\":5747:5873  require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/ERC1155.sol\":5889:5898  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":5901:5902  0 */\n      dup1\n        /* \"contracts/ERC1155.sol\":5889:5902  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5884:6264  for (uint256 i = 0; i < _ids.length; ++i) {... */\n    tag_62:\n        /* \"contracts/ERC1155.sol\":5908:5912  _ids */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":5908:5919  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5904:5905  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":5904:5919  i < _ids.length */\n      lt\n        /* \"contracts/ERC1155.sol\":5884:6264  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/ERC1155.sol\":5940:5950  uint256 id */\n      0x00\n        /* \"contracts/ERC1155.sol\":5953:5957  _ids */\n      dup8\n      dup8\n        /* \"contracts/ERC1155.sol\":5958:5959  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":5953:5960  _ids[i] */\n      dup2\n      dup2\n      lt\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155.sol\":5940:5960  uint256 id = _ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5974:5987  uint256 value */\n      0x00\n        /* \"contracts/ERC1155.sol\":5990:5997  _values */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":5998:5999  i */\n      dup5\n        /* \"contracts/ERC1155.sol\":5990:6000  _values[i] */\n      dup2\n      dup2\n      lt\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155.sol\":5974:6000  uint256 value = _values[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":6159:6189  balances[id][_from].sub(value) */\n      tag_67\n        /* \"contracts/ERC1155.sol\":6183:6188  value */\n      dup2\n        /* \"contracts/ERC1155.sol\":6159:6167  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":6159:6171  balances[id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":6168:6170  id */\n      dup6\n        /* \"contracts/ERC1155.sol\":6159:6171  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6159:6178  balances[id][_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6172:6177  _from */\n      dup15\n        /* \"contracts/ERC1155.sol\":6159:6178  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":6159:6182  balances[id][_from].sub */\n      tag_68\n      swap1\n        /* \"contracts/ERC1155.sol\":6159:6189  balances[id][_from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/ERC1155.sol\":6137:6145  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":6137:6149  balances[id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":6146:6148  id */\n      dup5\n        /* \"contracts/ERC1155.sol\":6137:6149  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6137:6156  balances[id][_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6150:6155  _from */\n      dup14\n        /* \"contracts/ERC1155.sol\":6137:6156  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6137:6189  balances[id][_from] = balances[id][_from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":6225:6253  value.add(balances[id][_to]) */\n      tag_69\n        /* \"contracts/ERC1155.sol\":6235:6243  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":6235:6247  balances[id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":6244:6246  id */\n      dup5\n        /* \"contracts/ERC1155.sol\":6235:6247  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6235:6252  balances[id][_to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6248:6251  _to */\n      dup13\n        /* \"contracts/ERC1155.sol\":6235:6252  balances[id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":6225:6230  value */\n      dup3\n        /* \"contracts/ERC1155.sol\":6225:6234  value.add */\n      tag_70\n      swap1\n        /* \"contracts/ERC1155.sol\":6225:6253  value.add(balances[id][_to]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"contracts/ERC1155.sol\":6203:6211  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":6203:6215  balances[id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":6212:6214  id */\n      dup5\n        /* \"contracts/ERC1155.sol\":6203:6215  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6203:6220  balances[id][_to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6216:6219  _to */\n      dup13\n        /* \"contracts/ERC1155.sol\":6203:6220  balances[id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6203:6253  balances[id][_to]   = value.add(balances[id][_to]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":5884:6264  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5921:5924  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5884:6264  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      jump(tag_62)\n    tag_63:\n      pop\n        /* \"contracts/ERC1155.sol\":6847:6850  _to */\n      dup7\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":6840:6845  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":6828:6838  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155.sol\":6852:6856  _ids */\n      dup10\n      dup10\n        /* \"contracts/ERC1155.sol\":6858:6865  _values */\n      dup10\n      dup10\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup8\n      dup8\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      pop\n      pop\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup6\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":6814:6866  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":7027:7043  _to.isContract() */\n      tag_71\n        /* \"contracts/ERC1155.sol\":7027:7030  _to */\n      dup8\n        /* \"contracts/ERC1155.sol\":7027:7041  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n        /* \"contracts/ERC1155.sol\":7027:7043  _to.isContract() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/ERC1155.sol\":7023:7151  if (_to.isContract()) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      tag_74\n        /* \"contracts/ERC1155.sol\":7095:7105  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":7107:7112  _from */\n      dup10\n        /* \"contracts/ERC1155.sol\":7114:7117  _to */\n      dup10\n        /* \"contracts/ERC1155.sol\":7119:7123  _ids */\n      dup10\n      dup10\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":7125:7132  _values */\n      dup9\n      dup9\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":7134:7139  _data */\n      dup8\n      dup8\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":7059:7094  _doSafeBatchTransferAcceptanceCheck */\n      tag_75\n        /* \"contracts/ERC1155.sol\":7059:7140  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/ERC1155.sol\":7023:7151  if (_to.isContract()) {... */\n    tag_73:\n        /* \"contracts/ERC1155.sol\":5389:7157  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n    tag_37:\n        /* \"contracts/ERC1155.sol\":8169:8185  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":8224:8228  _ids */\n      dup3\n      dup3\n        /* \"contracts/ERC1155.sol\":8224:8235  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8206:8213  _owners */\n      dup6\n      dup6\n        /* \"contracts/ERC1155.sol\":8206:8220  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8206:8235  _owners.length == _ids.length */\n      eq\n        /* \"contracts/ERC1155.sol\":8198:8236  require(_owners.length == _ids.length) */\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n        /* \"contracts/ERC1155.sol\":8247:8273  uint256[] memory balances_ */\n      0x60\n        /* \"contracts/ERC1155.sol\":8290:8297  _owners */\n      dup6\n      dup6\n        /* \"contracts/ERC1155.sol\":8290:8304  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8276:8305  new uint256[](_owners.length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"contracts/ERC1155.sol\":8276:8305  new uint256[](_owners.length) */\n      swap1\n      pop\n    tag_78:\n      pop\n        /* \"contracts/ERC1155.sol\":8247:8305  uint256[] memory balances_ = new uint256[](_owners.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8321:8330  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":8333:8334  0 */\n      dup1\n        /* \"contracts/ERC1155.sol\":8321:8334  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8316:8430  for (uint256 i = 0; i < _owners.length; ++i) {... */\n    tag_79:\n        /* \"contracts/ERC1155.sol\":8340:8347  _owners */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":8340:8354  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8336:8337  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":8336:8354  i < _owners.length */\n      lt\n        /* \"contracts/ERC1155.sol\":8316:8430  for (uint256 i = 0; i < _owners.length; ++i) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/ERC1155.sol\":8390:8398  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":8390:8407  balances[_ids[i]] */\n      dup1\n        /* \"contracts/ERC1155.sol\":8399:8403  _ids */\n      dup7\n      dup7\n        /* \"contracts/ERC1155.sol\":8404:8405  i */\n      dup5\n        /* \"contracts/ERC1155.sol\":8399:8406  _ids[i] */\n      dup2\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155.sol\":8390:8407  balances[_ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8390:8419  balances[_ids[i]][_owners[i]] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8408:8415  _owners */\n      dup9\n      dup9\n        /* \"contracts/ERC1155.sol\":8416:8417  i */\n      dup5\n        /* \"contracts/ERC1155.sol\":8408:8418  _owners[i] */\n      dup2\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":8390:8419  balances[_ids[i]][_owners[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":8375:8384  balances_ */\n      dup3\n        /* \"contracts/ERC1155.sol\":8385:8386  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":8375:8387  balances_[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155.sol\":8375:8419  balances_[i] = balances[_ids[i]][_owners[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":8356:8359  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8316:8430  for (uint256 i = 0; i < _owners.length; ++i) {... */\n      jump(tag_79)\n    tag_80:\n      pop\n        /* \"contracts/ERC1155.sol\":8447:8456  balances_ */\n      dup1\n        /* \"contracts/ERC1155.sol\":8440:8456  return balances_ */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":8069:8463  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n    tag_43:\n        /* \"contracts/ERC1155.sol\":8940:8949  _approved */\n      dup1\n        /* \"contracts/ERC1155.sol\":8898:8914  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":8898:8926  operatorApproval[msg.sender] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8915:8925  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":8898:8926  operatorApproval[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8898:8937  operatorApproval[msg.sender][_operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8927:8936  _operator */\n      dup5\n        /* \"contracts/ERC1155.sol\":8898:8937  operatorApproval[msg.sender][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155.sol\":8898:8949  operatorApproval[msg.sender][_operator] = _approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":8991:9000  _operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":8979:8989  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC1155.sol\":9002:9011  _approved */\n      dup4\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n    tag_46:\n        /* \"contracts/ERC1155.sol\":9382:9386  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":9405:9421  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":9405:9429  operatorApproval[_owner] */\n      0x00\n        /* \"contracts/ERC1155.sol\":9422:9428  _owner */\n      dup5\n        /* \"contracts/ERC1155.sol\":9405:9429  operatorApproval[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":9405:9440  operatorApproval[_owner][_operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":9430:9439  _operator */\n      dup4\n        /* \"contracts/ERC1155.sol\":9405:9440  operatorApproval[_owner][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":9398:9440  return operatorApproval[_owner][_operator] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n    tag_52:\n        /* \"contracts/ERC1155.sol\":2980:2983  0x0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":2965:2984  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":2965:2968  _to */\n      dup6\n        /* \"contracts/ERC1155.sol\":2965:2984  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155.sol\":2957:3010  require(_to != address(0x0), \"_to must be non-zero.\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5f746f206d757374206265206e6f6e2d7a65726f2e0000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/ERC1155.sol\":3037:3047  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3028:3047  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":3028:3033  _from */\n      dup7\n        /* \"contracts/ERC1155.sol\":3028:3047  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":3028:3094  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":3090:3094  true */\n      0x01\n        /* \"contracts/ERC1155.sol\":3051:3094  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n        /* \"contracts/ERC1155.sol\":3051:3067  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":3051:3074  operatorApproval[_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3068:3073  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":3051:3074  operatorApproval[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3051:3086  operatorApproval[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3075:3085  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3051:3086  operatorApproval[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":3051:3094  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ERC1155.sol\":3028:3094  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n    tag_89:\n        /* \"contracts/ERC1155.sol\":3020:3146  require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/ERC1155.sol\":3294:3326  balances[_id][_from].sub(_value) */\n      tag_91\n        /* \"contracts/ERC1155.sol\":3319:3325  _value */\n      dup4\n        /* \"contracts/ERC1155.sol\":3294:3302  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":3294:3307  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":3303:3306  _id */\n      dup8\n        /* \"contracts/ERC1155.sol\":3294:3307  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3294:3314  balances[_id][_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3308:3313  _from */\n      dup10\n        /* \"contracts/ERC1155.sol\":3294:3314  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":3294:3318  balances[_id][_from].sub */\n      tag_68\n      swap1\n        /* \"contracts/ERC1155.sol\":3294:3326  balances[_id][_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/ERC1155.sol\":3271:3279  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":3271:3284  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":3280:3283  _id */\n      dup7\n        /* \"contracts/ERC1155.sol\":3271:3284  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3271:3291  balances[_id][_from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3285:3290  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":3271:3291  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3271:3326  balances[_id][_from] = balances[_id][_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":3359:3389  _value.add(balances[_id][_to]) */\n      tag_92\n        /* \"contracts/ERC1155.sol\":3370:3378  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":3370:3383  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":3379:3382  _id */\n      dup7\n        /* \"contracts/ERC1155.sol\":3370:3383  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3370:3388  balances[_id][_to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3384:3387  _to */\n      dup8\n        /* \"contracts/ERC1155.sol\":3370:3388  balances[_id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":3359:3365  _value */\n      dup5\n        /* \"contracts/ERC1155.sol\":3359:3369  _value.add */\n      tag_70\n      swap1\n        /* \"contracts/ERC1155.sol\":3359:3389  _value.add(balances[_id][_to]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/ERC1155.sol\":3336:3344  balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":3336:3349  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155.sol\":3345:3348  _id */\n      dup7\n        /* \"contracts/ERC1155.sol\":3336:3349  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3336:3354  balances[_id][_to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3350:3353  _to */\n      dup8\n        /* \"contracts/ERC1155.sol\":3336:3354  balances[_id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3336:3389  balances[_id][_to]   = _value.add(balances[_id][_to]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":3466:3469  _to */\n      dup5\n        /* \"contracts/ERC1155.sol\":3432:3483  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":3459:3464  _from */\n      dup7\n        /* \"contracts/ERC1155.sol\":3432:3483  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":3447:3457  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3432:3483  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/ERC1155.sol\":3471:3474  _id */\n      dup8\n        /* \"contracts/ERC1155.sol\":3476:3482  _value */\n      dup8\n        /* \"contracts/ERC1155.sol\":3432:3483  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":3636:3652  _to.isContract() */\n      tag_93\n        /* \"contracts/ERC1155.sol\":3636:3639  _to */\n      dup6\n        /* \"contracts/ERC1155.sol\":3636:3650  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n        /* \"contracts/ERC1155.sol\":3636:3652  _to.isContract() */\n      jump\t// in\n    tag_93:\n        /* \"contracts/ERC1155.sol\":3632:3753  if (_to.isContract()) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/ERC1155.sol\":3668:3742  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      tag_95\n        /* \"contracts/ERC1155.sol\":3699:3709  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3711:3716  _from */\n      dup8\n        /* \"contracts/ERC1155.sol\":3718:3721  _to */\n      dup8\n        /* \"contracts/ERC1155.sol\":3723:3726  _id */\n      dup8\n        /* \"contracts/ERC1155.sol\":3728:3734  _value */\n      dup8\n        /* \"contracts/ERC1155.sol\":3736:3741  _data */\n      dup8\n      dup8\n        /* \"contracts/ERC1155.sol\":3668:3742  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155.sol\":3668:3742  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":3668:3698  _doSafeTransferAcceptanceCheck */\n      tag_96\n        /* \"contracts/ERC1155.sol\":3668:3742  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC1155.sol\":3632:3753  if (_to.isContract()) {... */\n    tag_94:\n        /* \"contracts/ERC1155.sol\":2832:3759  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1123:1243  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"contracts/SafeMath.sol\":1181:1188  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1212:1213  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1207:1208  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1207:1213  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1200:1214  assert(b <= a) */\n      tag_98\n      jumpi\n      invalid\n    tag_98:\n        /* \"contracts/SafeMath.sol\":1235:1236  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":1231:1232  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1231:1236  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":1224:1236  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1123:1243  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1313:1450  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_70:\n        /* \"contracts/SafeMath.sol\":1371:1380  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1400:1401  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":1396:1397  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1396:1401  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":1392:1401  c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1423:1424  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1418:1419  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":1418:1424  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":1411:1425  assert(c >= a) */\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n        /* \"contracts/SafeMath.sol\":1442:1443  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1435:1443  return c */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1313:1450  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Address.sol\":465:1089  function isContract(address account) internal view returns (bool) {... */\n    tag_72:\n        /* \"contracts/Address.sol\":525:529  bool */\n      0x00\n        /* \"contracts/Address.sol\":541:553  uint256 size */\n      dup1\n        /* \"contracts/Address.sol\":1048:1055  account */\n      dup3\n        /* \"contracts/Address.sol\":1036:1056  extcodesize(account) */\n      extcodesize\n        /* \"contracts/Address.sol\":1028:1056  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/Address.sol\":1081:1082  0 */\n      0x00\n        /* \"contracts/Address.sol\":1074:1078  size */\n      dup2\n        /* \"contracts/Address.sol\":1074:1082  size > 0 */\n      gt\n        /* \"contracts/Address.sol\":1067:1082  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/Address.sol\":465:1089  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":10688:11869  function _doSafeBatchTransferAcceptanceCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) internal {... */\n    tag_75:\n        /* \"contracts/Common.sol\":311:321  0xbc197c81 */\n      0xbc197c81\n        /* \"contracts/ERC1155.sol\":11773:11795  ERC1155_BATCH_ACCEPTED */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":11681:11795  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":11702:11705  _to */\n      dup5\n        /* \"contracts/ERC1155.sol\":11681:11729  ERC1155TokenReceiver(_to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/ERC1155.sol\":11730:11739  _operator */\n      dup9\n        /* \"contracts/ERC1155.sol\":11741:11746  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":11748:11752  _ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":11754:11761  _values */\n      dup8\n        /* \"contracts/ERC1155.sol\":11763:11768  _data */\n      dup8\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_103:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_103)\n    tag_105:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_106:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_106)\n    tag_108:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_109:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_109)\n    tag_111:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_112:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_113:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_114:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_115:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11795  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":11673:11862  require(ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED, \"contract returned an unknown value from onERC1155BatchReceived\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad\n      0x3e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/ERC1155.sol\":10688:11869  function _doSafeBatchTransferAcceptanceCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":9554:10682  function _doSafeTransferAcceptanceCheck(address _operator, address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) internal {... */\n    tag_96:\n        /* \"contracts/Common.sol\":164:174  0xf23a6e61 */\n      0xf23a6e61\n        /* \"contracts/ERC1155.sol\":10597:10613  ERC1155_ACCEPTED */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":10512:10613  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":10533:10536  _to */\n      dup5\n        /* \"contracts/ERC1155.sol\":10512:10555  ERC1155TokenReceiver(_to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/ERC1155.sol\":10556:10565  _operator */\n      dup9\n        /* \"contracts/ERC1155.sol\":10567:10572  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":10574:10577  _id */\n      dup8\n        /* \"contracts/ERC1155.sol\":10579:10585  _value */\n      dup8\n        /* \"contracts/ERC1155.sol\":10587:10592  _data */\n      dup8\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_118:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_118)\n    tag_120:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_121:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_122:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_123:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_124:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":10512:10613  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":10504:10675  require(ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED, \"contract returned an unknown value from onERC1155Received\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/ERC1155.sol\":9554:10682  function _doSafeTransferAcceptanceCheck(address _operator, address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_62feaa226fe2bab79230d856b8132c73f9553fb9f97b507f32473583a3bdc412 64657374696e6174696f6e2061646472657373206d757374206265206e6f6e2d7a65726f2e\n    data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be 4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e\n    data_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad 636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564\n    data_d06b0e7fc248df96a03d3f6210ab25cdbd58ba1e3989c7aed9df538ab45fc969 5f69647320616e64205f76616c756573206172726179206c656e677468206d757374206d617463682e\n    data_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42 636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564\n\n    auxdata: 0xa265627a7a7231582097df49fec362782cda5265cb7a3d68b1400d6ae34dd1a3b7bdfffc135dbb322264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506118f2806100206000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80634e1273f41161005b5780634e1273f4146102ab578063a22cb465146103ce578063e985e9c51461041e578063f242432a1461049a5761007c565b8062fdd58e1461008157806301ffc9a7146100e35780632eb2c2d614610148575b600080fd5b6100cd6004803603604081101561009757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610567565b6040518082815260200191505060405180910390f35b61012e600480360360208110156100f957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102a9600480360360a081101561015e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101bb57600080fd5b8201836020820111156101cd57600080fd5b803590602001918460208302840111640100000000831117156101ef57600080fd5b90919293919293908035906020019064010000000081111561021057600080fd5b82018360208201111561022257600080fd5b8035906020019184602083028401116401000000008311171561024457600080fd5b90919293919293908035906020019064010000000081111561026557600080fd5b82018360208201111561027757600080fd5b8035906020019184600183028401116401000000008311171561029957600080fd5b9091929391929390505050610672565b005b610377600480360360408110156102c157600080fd5b81019080803590602001906401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184602083028401116401000000008311171561031257600080fd5b90919293919293908035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184602083028401116401000000008311171561036757600080fd5b9091929391929390505050610c0e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103ba57808201518184015260208101905061039f565b505050509050019250505060405180910390f35b61041c600480360360408110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610d24565b005b6104806004803603604081101561043457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e25565b604051808215151515815260200191505060405180910390f35b610565600480360360a08110156104b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561052157600080fd5b82018360208201111561053357600080fd5b8035906020019184600183028401116401000000008311171561055557600080fd5b9091929391929390505050610eb9565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065a575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610668576001905061066d565b600090505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117ca6025913960400191505060405180910390fd5b838390508686905014610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061185c6029913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16148061081d575060011515600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806117ef602f913960400191505060405180910390fd5b60008090505b86869050811015610a2857600087878381811061089157fe5b90506020020135905060008686848181106108a857fe5b9050602002013590506109138160008085815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e590919063ffffffff16565b60008084815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109c860008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826112fc90919063ffffffff16565b60008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610878565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a4610b2a8773ffffffffffffffffffffffffffffffffffffffff16611316565b15610c0457610c03338989898980806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611329565b5b5050505050505050565b6060828290508585905014610c2257600080fd5b606085859050604051908082528060200260200182016040528015610c565781602001602082028038833980820191505090505b50905060008090505b86869050811015610d1757600080868684818110610c7957fe5b9050602002013581526020019081526020016000206000888884818110610c9c57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610d0057fe5b602002602001018181525050806001019050610c5f565b5080915050949350505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f5f746f206d757374206265206e6f6e2d7a65726f2e000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480611023575060011515600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b611078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806117ef602f913960400191505060405180910390fd5b6110da8360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e590919063ffffffff16565b60008086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061118f60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846112fc90919063ffffffff16565b60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a46112858573ffffffffffffffffffffffffffffffffffffffff16611316565b156112dd576112dc338787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506115ba565b5b505050505050565b6000828211156112f157fe5b818303905092915050565b600081830190508281101561130d57fe5b80905092915050565b600080823b905060008111915050919050565b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663bc197c8188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561142f578082015181840152602081019050611414565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611471578082015181840152602081019050611456565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156114b0578082015181840152602081019050611495565b50505050905090810190601f1680156114dd5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561150257600080fd5b505af1158015611516573d6000803e3d6000fd5b505050506040513d602081101561152c57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e81526020018061181e603e913960400191505060405180910390fd5b505050505050565b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116c15780820151818401526020810190506116a6565b50505050905090810190601f1680156116ee5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561171157600080fd5b505af1158015611725573d6000803e3d6000fd5b505050506040513d602081101561173b57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146117c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806118856039913960400191505060405180910390fd5b50505050505056fe64657374696e6174696f6e2061646472657373206d757374206265206e6f6e2d7a65726f2e4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e45524331313535426174636852656365697665645f69647320616e64205f76616c756573206172726179206c656e677468206d757374206d617463682e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a265627a7a7231582097df49fec362782cda5265cb7a3d68b1400d6ae34dd1a3b7bdfffc135dbb322264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x49A JUMPI PUSH2 0x7C JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xEB9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65A JUMPI POP PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x668 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x66D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x185C PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x81D JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EF PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x891 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8A8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x913 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9C8 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x12FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x878 JUMP JUMPDEST POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP8 DUP8 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB2A DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 JUMP JUMPDEST ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC03 CALLER DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1329 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xC79 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xC9C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD00 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC5F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F746F206D757374206265206E6F6E2D7A65726F2E0000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1023 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x1078 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EF PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DA DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x118F PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x12FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1285 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC CALLER DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x15BA JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x12F1 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x130D JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1471 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1495 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x14DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x181E PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16A6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16EE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x17C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1885 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID PUSH5 0x657374696E PUSH2 0x7469 PUSH16 0x6E2061646472657373206D7573742062 PUSH6 0x206E6F6E2D7A PUSH6 0x726F2E4E6565 PUSH5 0x206F706572 PUSH2 0x746F PUSH19 0x20617070726F76616C20666F72203372642070 PUSH2 0x7274 PUSH26 0x207472616E73666572732E636F6E74726163742072657475726E PUSH6 0x6420616E2075 PUSH15 0x6B6E6F776E2076616C75652066726F PUSH14 0x206F6E4552433131353542617463 PUSH9 0x52656365697665645F PUSH10 0x647320616E64205F7661 PUSH13 0x756573206172726179206C656E PUSH8 0x7468206D75737420 PUSH14 0x617463682E636F6E747261637420 PUSH19 0x657475726E656420616E20756E6B6E6F776E20 PUSH23 0x616C75652066726F6D206F6E4552433131353552656365 PUSH10 0x766564A265627A7A7231 PC KECCAK256 SWAP8 0xDF 0x49 INVALID 0xC3 PUSH3 0x782CDA MSTORE PUSH6 0xCB7A3D68B140 0xD PUSH11 0xE34DD1A3B7BDFFFC135DBB ORIGIN 0x22 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "214:11657:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:11657:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007c5760003560e01c80634e1273f41161005b5780634e1273f4146102ab578063a22cb465146103ce578063e985e9c51461041e578063f242432a1461049a5761007c565b8062fdd58e1461008157806301ffc9a7146100e35780632eb2c2d614610148575b600080fd5b6100cd6004803603604081101561009757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610567565b6040518082815260200191505060405180910390f35b61012e600480360360208110156100f957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b6102a9600480360360a081101561015e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101bb57600080fd5b8201836020820111156101cd57600080fd5b803590602001918460208302840111640100000000831117156101ef57600080fd5b90919293919293908035906020019064010000000081111561021057600080fd5b82018360208201111561022257600080fd5b8035906020019184602083028401116401000000008311171561024457600080fd5b90919293919293908035906020019064010000000081111561026557600080fd5b82018360208201111561027757600080fd5b8035906020019184600183028401116401000000008311171561029957600080fd5b9091929391929390505050610672565b005b610377600480360360408110156102c157600080fd5b81019080803590602001906401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184602083028401116401000000008311171561031257600080fd5b90919293919293908035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184602083028401116401000000008311171561036757600080fd5b9091929391929390505050610c0e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103ba57808201518184015260208101905061039f565b505050509050019250505060405180910390f35b61041c600480360360408110156103e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610d24565b005b6104806004803603604081101561043457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e25565b604051808215151515815260200191505060405180910390f35b610565600480360360a08110156104b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561052157600080fd5b82018360208201111561053357600080fd5b8035906020019184600183028401116401000000008311171561055557600080fd5b9091929391929390505050610eb9565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065a575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610668576001905061066d565b600090505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117ca6025913960400191505060405180910390fd5b838390508686905014610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061185c6029913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16148061081d575060011515600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806117ef602f913960400191505060405180910390fd5b60008090505b86869050811015610a2857600087878381811061089157fe5b90506020020135905060008686848181106108a857fe5b9050602002013590506109138160008085815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e590919063ffffffff16565b60008084815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109c860008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826112fc90919063ffffffff16565b60008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050610878565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a4610b2a8773ffffffffffffffffffffffffffffffffffffffff16611316565b15610c0457610c03338989898980806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611329565b5b5050505050505050565b6060828290508585905014610c2257600080fd5b606085859050604051908082528060200260200182016040528015610c565781602001602082028038833980820191505090505b50905060008090505b86869050811015610d1757600080868684818110610c7957fe5b9050602002013581526020019081526020016000206000888884818110610c9c57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610d0057fe5b602002602001018181525050806001019050610c5f565b5080915050949350505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f5f746f206d757374206265206e6f6e2d7a65726f2e000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480611023575060011515600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b611078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806117ef602f913960400191505060405180910390fd5b6110da8360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112e590919063ffffffff16565b60008086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061118f60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846112fc90919063ffffffff16565b60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a46112858573ffffffffffffffffffffffffffffffffffffffff16611316565b156112dd576112dc338787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506115ba565b5b505050505050565b6000828211156112f157fe5b818303905092915050565b600081830190508281101561130d57fe5b80905092915050565b600080823b905060008111915050919050565b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663bc197c8188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561142f578082015181840152602081019050611414565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611471578082015181840152602081019050611456565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156114b0578082015181840152602081019050611495565b50505050905090810190601f1680156114dd5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561150257600080fd5b505af1158015611516573d6000803e3d6000fd5b505050506040513d602081101561152c57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e81526020018061181e603e913960400191505060405180910390fd5b505050505050565b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116c15780820151818401526020810190506116a6565b50505050905090810190601f1680156116ee5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561171157600080fd5b505af1158015611725573d6000803e3d6000fd5b505050506040513d602081101561173b57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146117c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806118856039913960400191505060405180910390fd5b50505050505056fe64657374696e6174696f6e2061646472657373206d757374206265206e6f6e2d7a65726f2e4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e45524331313535426174636852656365697665645f69647320616e64205f76616c756573206172726179206c656e677468206d757374206d617463682e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a265627a7a7231582097df49fec362782cda5265cb7a3d68b1400d6ae34dd1a3b7bdfffc135dbb322264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x49A JUMPI PUSH2 0x7C JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xEB9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65A JUMPI POP PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x668 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x66D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x185C PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x81D JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EF PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x891 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8A8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x913 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9C8 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x12FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x878 JUMP JUMPDEST POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP8 DUP8 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB2A DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 JUMP JUMPDEST ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC03 CALLER DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1329 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xC79 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xC9C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD00 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xC5F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F746F206D757374206265206E6F6E2D7A65726F2E0000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1023 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x1078 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EF PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DA DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x118F PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x12FC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1285 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1316 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC CALLER DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x15BA JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x12F1 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x130D JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1414 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1471 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1456 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1495 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x14DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x152C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x181E PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16A6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x16EE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x17C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1885 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID PUSH5 0x657374696E PUSH2 0x7469 PUSH16 0x6E2061646472657373206D7573742062 PUSH6 0x206E6F6E2D7A PUSH6 0x726F2E4E6565 PUSH5 0x206F706572 PUSH2 0x746F PUSH19 0x20617070726F76616C20666F72203372642070 PUSH2 0x7274 PUSH26 0x207472616E73666572732E636F6E74726163742072657475726E PUSH6 0x6420616E2075 PUSH15 0x6B6E6F776E2076616C75652066726F PUSH14 0x206F6E4552433131353542617463 PUSH9 0x52656365697665645F PUSH10 0x647320616E64205F7661 PUSH13 0x756573206172726179206C656E PUSH8 0x7468206D75737420 PUSH14 0x617463682E636F6E747261637420 PUSH19 0x657475726E656420616E20756E6B6E6F776E20 PUSH23 0x616C75652066726F6D206F6E4552433131353552656365 PUSH10 0x766564A265627A7A7231 PC KECCAK256 SWAP8 0xDF 0x49 INVALID 0xC3 PUSH3 0x782CDA MSTORE PUSH6 0xCB7A3D68B140 0xD PUSH11 0xE34DD1A3B7BDFFFC135DBB ORIGIN 0x22 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "214:11657:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:11657:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7401:369;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7401:369:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1319:273;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1319:273:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5389:1768;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5389:1768:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5389:1768:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5389:1768:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5389:1768:2;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5389:1768:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5389:1768:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5389:1768:2;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5389:1768:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5389:1768:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5389:1768:2;;;;;;;;;;;;:::i;:::-;;8069:394;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8069:394:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8069:394:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8069:394:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8069:394:2;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8069:394:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8069:394:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8069:394:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8069:394:2;;;;;;;;;;;;;;;;;8817:202;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8817:202:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9298:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9298:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2832:927;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2832:927:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2832:927:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2832:927:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2832:927:2;;;;;;;;;;;;:::i;:::-;;7401:369;7472:7;7742:8;:13;7751:3;7742:13;;;;;;;;;;;:21;7756:6;7742:21;;;;;;;;;;;;;;;;7735:28;;7401:369;;;;:::o;1319:273::-;1400:4;782:10;1437:26;;1421:42;;;:12;:42;;;;:102;;;;1302:10;1496:27;;1480:43;;;:12;:43;;;;1421:102;1417:145;;;1546:4;1539:11;;;;1417:145;1580:5;1573:12;;1319:273;;;;:::o;5389:1768::-;5598:3;5583:19;;:3;:19;;;;5575:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5677:7;;:14;;5662:4;;:11;;:29;5654:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:10;5755:19;;:5;:19;;;:66;;;;5817:4;5778:43;;:16;:23;5795:5;5778:23;;;;;;;;;;;;;;;:35;5802:10;5778:35;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;5755:66;5747:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5889:9;5901:1;5889:13;;5884:380;5908:4;;:11;;5904:1;:15;5884:380;;;5940:10;5953:4;;5958:1;5953:7;;;;;;;;;;;;;5940:20;;5974:13;5990:7;;5998:1;5990:10;;;;;;;;;;;;;5974:26;;6159:30;6183:5;6159:8;:12;6168:2;6159:12;;;;;;;;;;;:19;6172:5;6159:19;;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6137:8;:12;6146:2;6137:12;;;;;;;;;;;:19;6150:5;6137:19;;;;;;;;;;;;;;;:52;;;;6225:28;6235:8;:12;6244:2;6235:12;;;;;;;;;;;:17;6248:3;6235:17;;;;;;;;;;;;;;;;6225:5;:9;;:28;;;;:::i;:::-;6203:8;:12;6212:2;6203:12;;;;;;;;;;;:17;6216:3;6203:17;;;;;;;;;;;;;;;:50;;;;5884:380;;5921:3;;;;;5884:380;;;;6847:3;6814:52;;6840:5;6814:52;;6828:10;6814:52;;;6852:4;;6858:7;;6814:52;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6814:52:2;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6814:52:2;;;;;;;;;;;;;;;;;7027:16;:3;:14;;;:16::i;:::-;7023:128;;;7059:81;7095:10;7107:5;7114:3;7119:4;;7059:81;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7059:81:2;;;;;;7125:7;;7059:81;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7059:81:2;;;;;;7134:5;;7059:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7059:81:2;;;;;;:35;:81::i;:::-;7023:128;5389:1768;;;;;;;;:::o;8069:394::-;8169:16;8224:4;;:11;;8206:7;;:14;;:29;8198:38;;;;;;8247:26;8290:7;;:14;;8276:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8276:29:2;;;;8247:58;;8321:9;8333:1;8321:13;;8316:114;8340:7;;:14;;8336:1;:18;8316:114;;;8390:8;:17;8399:4;;8404:1;8399:7;;;;;;;;;;;;;8390:17;;;;;;;;;;;:29;8408:7;;8416:1;8408:10;;;;;;;;;;;;;;;8390:29;;;;;;;;;;;;;;;;8375:9;8385:1;8375:12;;;;;;;;;;;;;:44;;;;;8356:3;;;;;8316:114;;;;8447:9;8440:16;;;8069:394;;;;;;:::o;8817:202::-;8940:9;8898:16;:28;8915:10;8898:28;;;;;;;;;;;;;;;:39;8927:9;8898:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8991:9;8964:48;;8979:10;8964:48;;;9002:9;8964:48;;;;;;;;;;;;;;;;;;;;;;8817:202;;:::o;9298:149::-;9382:4;9405:16;:24;9422:6;9405:24;;;;;;;;;;;;;;;:35;9430:9;9405:35;;;;;;;;;;;;;;;;;;;;;;;;;9398:42;;9298:149;;;;:::o;2832:927::-;2980:3;2965:19;;:3;:19;;;;2957:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3037:10;3028:19;;:5;:19;;;:66;;;;3090:4;3051:43;;:16;:23;3068:5;3051:23;;;;;;;;;;;;;;;:35;3075:10;3051:35;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;3028:66;3020:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3294:32;3319:6;3294:8;:13;3303:3;3294:13;;;;;;;;;;;:20;3308:5;3294:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3271:8;:13;3280:3;3271:13;;;;;;;;;;;:20;3285:5;3271:20;;;;;;;;;;;;;;;:55;;;;3359:30;3370:8;:13;3379:3;3370:13;;;;;;;;;;;:18;3384:3;3370:18;;;;;;;;;;;;;;;;3359:6;:10;;:30;;;;:::i;:::-;3336:8;:13;3345:3;3336:13;;;;;;;;;;;:18;3350:3;3336:18;;;;;;;;;;;;;;;:53;;;;3466:3;3432:51;;3459:5;3432:51;;3447:10;3432:51;;;3471:3;3476:6;3432:51;;;;;;;;;;;;;;;;;;;;;;;;3636:16;:3;:14;;;:16::i;:::-;3632:121;;;3668:74;3699:10;3711:5;3718:3;3723;3728:6;3736:5;;3668:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3668:74:2;;;;;;:30;:74::i;:::-;3632:121;2832:927;;;;;;:::o;1123:120:7:-;1181:7;1212:1;1207;:6;;1200:14;;;;1235:1;1231;:5;1224:12;;1123:120;;;;:::o;1313:137::-;1371:9;1400:1;1396;:5;1392:9;;1423:1;1418;:6;;1411:14;;;;1442:1;1435:8;;1313:137;;;;:::o;465:624:0:-;525:4;541:12;1048:7;1036:20;1028:28;;1081:1;1074:4;:8;1067:15;;;465:624;;;:::o;10688:1181:2:-;311:10:1;11773:22:2;;11681:114;;;11702:3;11681:48;;;11730:9;11741:5;11748:4;11754:7;11763:5;11681:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11681:88:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11681:88:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11681:88:2;;;;;;;;;;;;;;;;:114;;;;11673:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10688:1181;;;;;;:::o;9554:1128::-;164:10:1;10597:16:2;;10512:101;;;10533:3;10512:43;;;10556:9;10567:5;10574:3;10579:6;10587:5;10512:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10512:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10512:81:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10512:81:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10512:81:2;;;;;;;;;;;;;;;;:101;;;;10504:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9554:1128;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1277200",
								"executionCost": "1329",
								"totalCost": "1278529"
							},
							"external": {
								"balanceOf(address,uint256)": "1304",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "1413",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23183",
								"supportsInterface(bytes4)": "457"
							},
							"internal": {
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "MSTORE"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "POP"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "DUP1"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "CODECOPY"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 214,
									"end": 11871,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582097df49fec362782cda5265cb7a3d68b1400d6ae34dd1a3b7bdfffc135dbb322264736f6c63430005110032",
									".code": [
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "LT"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "SHR"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "GT"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "A22CB465"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "E985E9C5"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "F242432A"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMP"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "FDD58E"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "2EB2C2D6"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "EQ"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 11871,
											"name": "REVERT"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "JUMPDEST"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "ADD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "AND"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "ADD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP3"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "ADD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP3"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "JUMPDEST"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "MLOAD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP3"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "MSTORE"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "ADD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "MLOAD"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "DUP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SUB"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP1"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "RETURN"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "NOT"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP3"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "RETURN"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "AND"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "DUP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "ADD"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP2"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP3"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP4"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "SWAP1"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "STOP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "JUMPDEST"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MLOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SUB"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MSTORE"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MLOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MSTORE"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MLOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MUL"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "MLOAD"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP2"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SUB"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP1"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "RETURN"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ISZERO"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ISZERO"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "STOP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MSTORE"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SUB"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "RETURN"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "AND"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "AND"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP4"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP2"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP3"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP4"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "STOP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "JUMPDEST"
										},
										{
											"begin": 7472,
											"end": 7479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7750,
											"name": "DUP1"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7751,
											"end": 7754,
											"name": "DUP4"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "DUP2"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "MSTORE"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "ADD"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "SWAP1"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "DUP2"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "MSTORE"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "ADD"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7755,
											"name": "KECCAK256"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7762,
											"name": "DUP5"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "AND"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "AND"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "DUP2"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "MSTORE"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "ADD"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "SWAP1"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "DUP2"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "MSTORE"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "ADD"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "KECCAK256"
										},
										{
											"begin": 7742,
											"end": 7763,
											"name": "SLOAD"
										},
										{
											"begin": 7735,
											"end": 7763,
											"name": "SWAP1"
										},
										{
											"begin": 7735,
											"end": 7763,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP3"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "SWAP2"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "POP"
										},
										{
											"begin": 7401,
											"end": 7770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 792,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 1437,
											"end": 1463,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1437,
											"end": 1463,
											"name": "SHL"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "NOT"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "NOT"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "JUMPI"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH",
											"value": "D9B67A26"
										},
										{
											"begin": 1496,
											"end": 1523,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1496,
											"end": 1523,
											"name": "SHL"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "NOT"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "AND"
										},
										{
											"begin": 1480,
											"end": 1492,
											"name": "DUP3"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "NOT"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "AND"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "ISZERO"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "JUMPI"
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "SWAP1"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "JUMP"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "JUMPDEST"
										},
										{
											"begin": 1580,
											"end": 1585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1585,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1585,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "JUMPDEST"
										},
										{
											"begin": 5598,
											"end": 5601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 5586,
											"name": "DUP8"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "AND"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "EQ"
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "ISZERO"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "JUMPI"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "MLOAD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "MSTORE"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "ADD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP1"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP1"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "ADD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP3"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SUB"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP3"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "MSTORE"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "MSTORE"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "ADD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP1"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH data",
											"value": "62FEAA226FE2BAB79230D856B8132C73F9553FB9F97B507F32473583A3BDC412"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SWAP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "CODECOPY"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "ADD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SWAP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "POP"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "POP"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "MLOAD"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "DUP1"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SWAP2"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SUB"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "SWAP1"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "REVERT"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5575,
											"end": 5644,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5691,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5691,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5666,
											"name": "DUP7"
										},
										{
											"begin": 5662,
											"end": 5666,
											"name": "DUP7"
										},
										{
											"begin": 5662,
											"end": 5673,
											"name": "SWAP1"
										},
										{
											"begin": 5662,
											"end": 5673,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5691,
											"name": "EQ"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "JUMPI"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "MLOAD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "MSTORE"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "ADD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP1"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP1"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "ADD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP3"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SUB"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP3"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "MSTORE"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "MSTORE"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "ADD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP1"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH data",
											"value": "D06B0E7FC248DF96A03D3F6210AB25CDBD58BA1E3989C7AED9DF538AB45FC969"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SWAP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "CODECOPY"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "ADD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SWAP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "POP"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "POP"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "MLOAD"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "DUP1"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SWAP2"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SUB"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "SWAP1"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "REVERT"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5654,
											"end": 5737,
											"name": "JUMPDEST"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "CALLER"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "AND"
										},
										{
											"begin": 5755,
											"end": 5760,
											"name": "DUP9"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "AND"
										},
										{
											"begin": 5755,
											"end": 5774,
											"name": "EQ"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "DUP1"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "JUMPI"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5821,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5778,
											"end": 5821,
											"name": "ISZERO"
										},
										{
											"begin": 5778,
											"end": 5821,
											"name": "ISZERO"
										},
										{
											"begin": 5778,
											"end": 5794,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5800,
											"name": "DUP11"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5801,
											"name": "KECCAK256"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5802,
											"end": 5812,
											"name": "CALLER"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "DUP2"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "MSTORE"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "ADD"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "KECCAK256"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "SLOAD"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "EXP"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "SWAP1"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "DIV"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5778,
											"end": 5813,
											"name": "AND"
										},
										{
											"begin": 5778,
											"end": 5821,
											"name": "ISZERO"
										},
										{
											"begin": 5778,
											"end": 5821,
											"name": "ISZERO"
										},
										{
											"begin": 5778,
											"end": 5821,
											"name": "EQ"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "JUMPDEST"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "JUMPI"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "MLOAD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "MSTORE"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "ADD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP1"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP1"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "ADD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP3"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SUB"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP3"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "MSTORE"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "MSTORE"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "ADD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP1"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH data",
											"value": "849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SWAP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "CODECOPY"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "ADD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SWAP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "POP"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "POP"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "MLOAD"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "DUP1"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SWAP2"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SUB"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "SWAP1"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "REVERT"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5747,
											"end": 5873,
											"name": "JUMPDEST"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "DUP1"
										},
										{
											"begin": 5889,
											"end": 5902,
											"name": "SWAP1"
										},
										{
											"begin": 5889,
											"end": 5902,
											"name": "POP"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "DUP7"
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "DUP7"
										},
										{
											"begin": 5908,
											"end": 5919,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5919,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP2"
										},
										{
											"begin": 5904,
											"end": 5919,
											"name": "LT"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "ISZERO"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "JUMPI"
										},
										{
											"begin": 5940,
											"end": 5950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5957,
											"name": "DUP8"
										},
										{
											"begin": 5953,
											"end": 5957,
											"name": "DUP8"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "DUP4"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP2"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP2"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "LT"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "JUMPI"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "INVALID"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "JUMPDEST"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "SWAP1"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "POP"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "MUL"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "ADD"
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5940,
											"end": 5960,
											"name": "SWAP1"
										},
										{
											"begin": 5940,
											"end": 5960,
											"name": "POP"
										},
										{
											"begin": 5974,
											"end": 5987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "DUP7"
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "DUP7"
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "DUP5"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "DUP2"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "DUP2"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "LT"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "JUMPI"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "INVALID"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "JUMPDEST"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "SWAP1"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "POP"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "MUL"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "ADD"
										},
										{
											"begin": 5990,
											"end": 6000,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5974,
											"end": 6000,
											"name": "SWAP1"
										},
										{
											"begin": 5974,
											"end": 6000,
											"name": "POP"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "DUP2"
										},
										{
											"begin": 6159,
											"end": 6167,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "DUP1"
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "DUP6"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "DUP2"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "MSTORE"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "ADD"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "SWAP1"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "DUP2"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "MSTORE"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "ADD"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "KECCAK256"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6177,
											"name": "DUP15"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "AND"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "AND"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "DUP2"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "MSTORE"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "ADD"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "SWAP1"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "DUP2"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "MSTORE"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "ADD"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "KECCAK256"
										},
										{
											"begin": 6159,
											"end": 6178,
											"name": "SLOAD"
										},
										{
											"begin": 6159,
											"end": 6182,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 6159,
											"end": 6182,
											"name": "SWAP1"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "SWAP2"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "SWAP1"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "AND"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "JUMPDEST"
										},
										{
											"begin": 6137,
											"end": 6145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "DUP5"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "DUP2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "MSTORE"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "DUP2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "MSTORE"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "KECCAK256"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6155,
											"name": "DUP14"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "AND"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "AND"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "DUP2"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "MSTORE"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "SWAP1"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "DUP2"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "MSTORE"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "KECCAK256"
										},
										{
											"begin": 6137,
											"end": 6189,
											"name": "DUP2"
										},
										{
											"begin": 6137,
											"end": 6189,
											"name": "SWAP1"
										},
										{
											"begin": 6137,
											"end": 6189,
											"name": "SSTORE"
										},
										{
											"begin": 6137,
											"end": 6189,
											"name": "POP"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 6235,
											"end": 6243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "DUP1"
										},
										{
											"begin": 6244,
											"end": 6246,
											"name": "DUP5"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "KECCAK256"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6251,
											"name": "DUP13"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "DUP2"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "ADD"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "KECCAK256"
										},
										{
											"begin": 6235,
											"end": 6252,
											"name": "SLOAD"
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP3"
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "SWAP1"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "SWAP2"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "SWAP1"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "AND"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 6225,
											"end": 6253,
											"name": "JUMPDEST"
										},
										{
											"begin": 6203,
											"end": 6211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "DUP1"
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "DUP5"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "MSTORE"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "ADD"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "MSTORE"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "ADD"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6215,
											"name": "KECCAK256"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP13"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "AND"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "AND"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "MSTORE"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "ADD"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "MSTORE"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "ADD"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "KECCAK256"
										},
										{
											"begin": 6203,
											"end": 6253,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6253,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6253,
											"name": "SSTORE"
										},
										{
											"begin": 6203,
											"end": 6253,
											"name": "POP"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "DUP1"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "ADD"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "SWAP1"
										},
										{
											"begin": 5921,
											"end": 5924,
											"name": "POP"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "JUMP"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5884,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 6847,
											"end": 6850,
											"name": "DUP7"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "AND"
										},
										{
											"begin": 6840,
											"end": 6845,
											"name": "DUP9"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "AND"
										},
										{
											"begin": 6828,
											"end": 6838,
											"name": "CALLER"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "AND"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6852,
											"end": 6856,
											"name": "DUP10"
										},
										{
											"begin": 6852,
											"end": 6856,
											"name": "DUP10"
										},
										{
											"begin": 6858,
											"end": 6865,
											"name": "DUP10"
										},
										{
											"begin": 6858,
											"end": 6865,
											"name": "DUP10"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP4"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SUB"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP4"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP8"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP8"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP3"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP4"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SUB"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP3"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP6"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP6"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP3"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MSTORE"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "ADD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SWAP3"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SWAP7"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "POP"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "MLOAD"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "DUP1"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SWAP2"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SUB"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "SWAP1"
										},
										{
											"begin": 6814,
											"end": 6866,
											"name": "LOG4"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "DUP8"
										},
										{
											"begin": 7027,
											"end": 7041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7027,
											"end": 7041,
											"name": "AND"
										},
										{
											"begin": 7027,
											"end": 7041,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "JUMPDEST"
										},
										{
											"begin": 7023,
											"end": 7151,
											"name": "ISZERO"
										},
										{
											"begin": 7023,
											"end": 7151,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 7023,
											"end": 7151,
											"name": "JUMPI"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 7095,
											"end": 7105,
											"name": "CALLER"
										},
										{
											"begin": 7107,
											"end": 7112,
											"name": "DUP10"
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP10"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP10"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP10"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MUL"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MLOAD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP3"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7125,
											"end": 7132,
											"name": "DUP9"
										},
										{
											"begin": 7125,
											"end": 7132,
											"name": "DUP9"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MUL"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MLOAD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP3"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7134,
											"end": 7139,
											"name": "DUP8"
										},
										{
											"begin": 7134,
											"end": 7139,
											"name": "DUP8"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DIV"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MUL"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MLOAD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP3"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "SWAP1"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP2"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "MSTORE"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "POP"
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 7059,
											"end": 7140,
											"name": "JUMPDEST"
										},
										{
											"begin": 7023,
											"end": 7151,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 7023,
											"end": 7151,
											"name": "JUMPDEST"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "POP"
										},
										{
											"begin": 5389,
											"end": 7157,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "JUMPDEST"
										},
										{
											"begin": 8169,
											"end": 8185,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "DUP3"
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "DUP3"
										},
										{
											"begin": 8224,
											"end": 8235,
											"name": "SWAP1"
										},
										{
											"begin": 8224,
											"end": 8235,
											"name": "POP"
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP6"
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP6"
										},
										{
											"begin": 8206,
											"end": 8220,
											"name": "SWAP1"
										},
										{
											"begin": 8206,
											"end": 8220,
											"name": "POP"
										},
										{
											"begin": 8206,
											"end": 8235,
											"name": "EQ"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "JUMPI"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "DUP1"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "REVERT"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8198,
											"end": 8236,
											"name": "JUMPDEST"
										},
										{
											"begin": 8247,
											"end": 8273,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8290,
											"end": 8297,
											"name": "DUP6"
										},
										{
											"begin": 8290,
											"end": 8297,
											"name": "DUP6"
										},
										{
											"begin": 8290,
											"end": 8304,
											"name": "SWAP1"
										},
										{
											"begin": 8290,
											"end": 8304,
											"name": "POP"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "MLOAD"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "SWAP1"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP1"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP3"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "MSTORE"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP1"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "MUL"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "ADD"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP3"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "ADD"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "MSTORE"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP1"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "ISZERO"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "JUMPI"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "DUP2"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "SWAP1"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "POP"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "JUMPDEST"
										},
										{
											"begin": 8276,
											"end": 8305,
											"name": "POP"
										},
										{
											"begin": 8247,
											"end": 8305,
											"name": "SWAP1"
										},
										{
											"begin": 8247,
											"end": 8305,
											"name": "POP"
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8333,
											"end": 8334,
											"name": "DUP1"
										},
										{
											"begin": 8321,
											"end": 8334,
											"name": "SWAP1"
										},
										{
											"begin": 8321,
											"end": 8334,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "JUMPDEST"
										},
										{
											"begin": 8340,
											"end": 8347,
											"name": "DUP7"
										},
										{
											"begin": 8340,
											"end": 8347,
											"name": "DUP7"
										},
										{
											"begin": 8340,
											"end": 8354,
											"name": "SWAP1"
										},
										{
											"begin": 8340,
											"end": 8354,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "LT"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "ISZERO"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "JUMPI"
										},
										{
											"begin": 8390,
											"end": 8398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "DUP1"
										},
										{
											"begin": 8399,
											"end": 8403,
											"name": "DUP7"
										},
										{
											"begin": 8399,
											"end": 8403,
											"name": "DUP7"
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "DUP5"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "DUP2"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "DUP2"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "LT"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "JUMPI"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "INVALID"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "JUMPDEST"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "SWAP1"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "POP"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "MUL"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "ADD"
										},
										{
											"begin": 8399,
											"end": 8406,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "DUP2"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "MSTORE"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "ADD"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "SWAP1"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "DUP2"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "MSTORE"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "ADD"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "KECCAK256"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8408,
											"end": 8415,
											"name": "DUP9"
										},
										{
											"begin": 8408,
											"end": 8415,
											"name": "DUP9"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "DUP5"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "DUP2"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "DUP2"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "LT"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "JUMPI"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "INVALID"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "JUMPDEST"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "SWAP1"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "POP"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "MUL"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "ADD"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "AND"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "AND"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "DUP2"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "MSTORE"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "ADD"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "DUP2"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "MSTORE"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "ADD"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "KECCAK256"
										},
										{
											"begin": 8390,
											"end": 8419,
											"name": "SLOAD"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP3"
										},
										{
											"begin": 8385,
											"end": 8386,
											"name": "DUP3"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "DUP2"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "MLOAD"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "DUP2"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "LT"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "JUMPI"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "INVALID"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "JUMPDEST"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "MUL"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "ADD"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "ADD"
										},
										{
											"begin": 8375,
											"end": 8419,
											"name": "DUP2"
										},
										{
											"begin": 8375,
											"end": 8419,
											"name": "DUP2"
										},
										{
											"begin": 8375,
											"end": 8419,
											"name": "MSTORE"
										},
										{
											"begin": 8375,
											"end": 8419,
											"name": "POP"
										},
										{
											"begin": 8375,
											"end": 8419,
											"name": "POP"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "DUP1"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "ADD"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "SWAP1"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "POP"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "JUMP"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8430,
											"name": "POP"
										},
										{
											"begin": 8447,
											"end": 8456,
											"name": "DUP1"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "SWAP2"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "POP"
										},
										{
											"begin": 8440,
											"end": 8456,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP5"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "SWAP4"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "POP"
										},
										{
											"begin": 8069,
											"end": 8463,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8940,
											"end": 8949,
											"name": "DUP1"
										},
										{
											"begin": 8898,
											"end": 8914,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8925,
											"name": "CALLER"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "KECCAK256"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8936,
											"name": "DUP5"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "KECCAK256"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "EXP"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SLOAD"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "MUL"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "NOT"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP4"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "ISZERO"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "ISZERO"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "MUL"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "OR"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SSTORE"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "POP"
										},
										{
											"begin": 8991,
											"end": 9000,
											"name": "DUP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "AND"
										},
										{
											"begin": 8979,
											"end": 8989,
											"name": "CALLER"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "AND"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 9002,
											"end": 9011,
											"name": "DUP4"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MLOAD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP3"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MSTORE"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ADD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "POP"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "POP"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MLOAD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SUB"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "LOG3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9382,
											"end": 9386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9421,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9428,
											"name": "DUP5"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "KECCAK256"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP4"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "KECCAK256"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SLOAD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "EXP"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DIV"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9398,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9398,
											"end": 9440,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "JUMPDEST"
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "AND"
										},
										{
											"begin": 2965,
											"end": 2968,
											"name": "DUP6"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "AND"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "EQ"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "ISZERO"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "JUMPI"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MLOAD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP1"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP1"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP3"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "SUB"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP3"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP1"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "5F746F206D757374206265206E6F6E2D7A65726F2E0000000000000000000000"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MSTORE"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "POP"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "ADD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "SWAP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "POP"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "POP"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "MLOAD"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "DUP1"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "SWAP2"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "SUB"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "SWAP1"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "REVERT"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2957,
											"end": 3010,
											"name": "JUMPDEST"
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "CALLER"
										},
										{
											"begin": 3028,
											"end": 3047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3047,
											"name": "AND"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP7"
										},
										{
											"begin": 3028,
											"end": 3047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3047,
											"name": "AND"
										},
										{
											"begin": 3028,
											"end": 3047,
											"name": "EQ"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "DUP1"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "JUMPI"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "POP"
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3094,
											"name": "ISZERO"
										},
										{
											"begin": 3051,
											"end": 3094,
											"name": "ISZERO"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP9"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "SWAP1"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "DUP2"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "MSTORE"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "ADD"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "KECCAK256"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "CALLER"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "DUP2"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "MSTORE"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "ADD"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "SWAP1"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "DUP2"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "MSTORE"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "ADD"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "KECCAK256"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "SWAP1"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "SLOAD"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "SWAP1"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "EXP"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "SWAP1"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "DIV"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3051,
											"end": 3086,
											"name": "AND"
										},
										{
											"begin": 3051,
											"end": 3094,
											"name": "ISZERO"
										},
										{
											"begin": 3051,
											"end": 3094,
											"name": "ISZERO"
										},
										{
											"begin": 3051,
											"end": 3094,
											"name": "EQ"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 3028,
											"end": 3094,
											"name": "JUMPDEST"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "JUMPI"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "MLOAD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "MSTORE"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP3"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SUB"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP3"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "MSTORE"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "MSTORE"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH data",
											"value": "849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SWAP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "CODECOPY"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SWAP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "POP"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "POP"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "MLOAD"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SWAP2"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SUB"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "SWAP1"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "REVERT"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3020,
											"end": 3146,
											"name": "JUMPDEST"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 3319,
											"end": 3325,
											"name": "DUP4"
										},
										{
											"begin": 3294,
											"end": 3302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "DUP1"
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "DUP8"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "DUP2"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "MSTORE"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "ADD"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3307,
											"name": "KECCAK256"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3313,
											"name": "DUP10"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "MSTORE"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "ADD"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "MSTORE"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "ADD"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "KECCAK256"
										},
										{
											"begin": 3294,
											"end": 3314,
											"name": "SLOAD"
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "SWAP2"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "AND"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "JUMPDEST"
										},
										{
											"begin": 3271,
											"end": 3279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "DUP1"
										},
										{
											"begin": 3280,
											"end": 3283,
											"name": "DUP7"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "SWAP1"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "KECCAK256"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3290,
											"name": "DUP9"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "AND"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "AND"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "SWAP1"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "KECCAK256"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "SSTORE"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "POP"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3382,
											"name": "DUP7"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3387,
											"name": "DUP8"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3388,
											"name": "SLOAD"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP5"
										},
										{
											"begin": 3359,
											"end": 3369,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3359,
											"end": 3369,
											"name": "SWAP1"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "SWAP2"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "SWAP1"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "AND"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3359,
											"end": 3389,
											"name": "JUMPDEST"
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "DUP1"
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP7"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3349,
											"name": "KECCAK256"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP8"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "SSTORE"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "POP"
										},
										{
											"begin": 3466,
											"end": 3469,
											"name": "DUP5"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "AND"
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP7"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "AND"
										},
										{
											"begin": 3447,
											"end": 3457,
											"name": "CALLER"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "AND"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "DUP8"
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP8"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "MLOAD"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP1"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP4"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP3"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "SWAP3"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "POP"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "POP"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "POP"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "MLOAD"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "DUP1"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "SWAP2"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "SUB"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "SWAP1"
										},
										{
											"begin": 3432,
											"end": 3483,
											"name": "LOG4"
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "DUP6"
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "AND"
										},
										{
											"begin": 3636,
											"end": 3650,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3636,
											"end": 3652,
											"name": "JUMPDEST"
										},
										{
											"begin": 3632,
											"end": 3753,
											"name": "ISZERO"
										},
										{
											"begin": 3632,
											"end": 3753,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 3632,
											"end": 3753,
											"name": "JUMPI"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3699,
											"end": 3709,
											"name": "CALLER"
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP8"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "DUP8"
										},
										{
											"begin": 3723,
											"end": 3726,
											"name": "DUP8"
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP8"
										},
										{
											"begin": 3736,
											"end": 3741,
											"name": "DUP8"
										},
										{
											"begin": 3736,
											"end": 3741,
											"name": "DUP8"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DIV"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "MUL"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "MLOAD"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP4"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP4"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3632,
											"end": 3753,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 3632,
											"end": 3753,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "POP"
										},
										{
											"begin": 2832,
											"end": 3759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "GT"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "ISZERO"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "JUMPI"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "INVALID"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP4"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "JUMPDEST"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP4"
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP3"
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "LT"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "ISZERO"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "JUMPI"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "INVALID"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "SWAP3"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "SWAP2"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1055,
											"name": "DUP3"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1028,
											"end": 1056,
											"name": "SWAP1"
										},
										{
											"begin": 1028,
											"end": 1056,
											"name": "POP"
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1078,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1082,
											"name": "GT"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 321,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 11773,
											"end": 11795,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11773,
											"end": 11795,
											"name": "SHL"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "AND"
										},
										{
											"begin": 11702,
											"end": 11705,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP9"
										},
										{
											"begin": 11741,
											"end": 11746,
											"name": "DUP9"
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "DUP8"
										},
										{
											"begin": 11754,
											"end": 11761,
											"name": "DUP8"
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SHL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP6"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MUL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MUL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP6"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "JUMPI"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "EXP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP9"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "GAS"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "CALL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "EQ"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "JUMPI"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP3"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP3"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH data",
											"value": "907B1BC15E21FE4233C673581AF2CF868CD5FA614B6015B432FF41FBC0222BAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "CODECOPY"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "REVERT"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "JUMPDEST"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 10597,
											"end": 10613,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10597,
											"end": 10613,
											"name": "SHL"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "AND"
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "DUP5"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP9"
										},
										{
											"begin": 10567,
											"end": 10572,
											"name": "DUP9"
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "DUP8"
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "DUP8"
										},
										{
											"begin": 10587,
											"end": 10592,
											"name": "DUP8"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SHL"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP6"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP5"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "JUMPI"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "EXP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP8"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "GAS"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "CALL"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "EQ"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "JUMPI"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MLOAD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP3"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SUB"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP3"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH data",
											"value": "EF98AF68C848ABC187FBA39B58082936B9DE327B8B5FD25AACD07D63C4D89E42"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "CODECOPY"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "POP"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "POP"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MLOAD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SUB"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "REVERT"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "JUMPDEST"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"62FEAA226FE2BAB79230D856B8132C73F9553FB9F97B507F32473583A3BDC412": "64657374696e6174696f6e2061646472657373206d757374206265206e6f6e2d7a65726f2e",
										"849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
										"907B1BC15E21FE4233C673581AF2CF868CD5FA614B6015B432FF41FBC0222BAD": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564",
										"D06B0E7FC248DF96A03D3F6210AB25CDBD58BA1E3989C7AED9DF538AB45FC969": "5f69647320616e64205f76616c756573206172726179206c656e677468206d757374206d617463682e",
										"EF98AF68C848ABC187FBA39B58082936B9DE327B8B5FD25AACD07D63C4D89E42": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"_data\":\"Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\",\"_from\":\"Source address\",\"_ids\":\"IDs of each token type (order and length must match _values array)\",\"_to\":\"Target address\",\"_values\":\"Transfer amounts per token type (order and length must match _ids array)\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"_data\":\"Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\",\"_value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}}}},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x016260fe1d6f563acefd8adb335b05e569b4026e3f8d472c3e855412debb83de\",\"urls\":[\"bzz-raw://701be90d29a315d87757399639b99315e37db64fd8e2157b27888061edebb7ca\",\"dweb:/ipfs/QmfLFj4eVtsF3V3LaxyKe6ZaGkwpR8ip1NV44WaHQ3BV1g\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x900d50cdfedbcf60e9e1ef727674ead98b35abf5a01714ed285989d410c01db8\",\"urls\":[\"bzz-raw://9903b443608607b5f94e85f77d35528baf9adb8c7acc70bc0818437a251f4c8b\",\"dweb:/ipfs/QmRHVoDnjh7ihKZJCXbsVwMEodGEtKBE1wJcvxqkqec2R2\"]},\"contracts/ERC1155.sol\":{\"keccak256\":\"0x3d273a8248dcec646a318c1e3a03a153ac03ac321a9ad675947d43e669342451\",\"urls\":[\"bzz-raw://d8fa0eab51c61e285f1bb6303746af1e1eab511a89ae9144392e37e2ae547b3e\",\"dweb:/ipfs/QmR2nEYeUQUxyrkkNfnwgvSbYi6b5xKVq34NtH8mF83wRd\"]},\"contracts/ERC165.sol\":{\"keccak256\":\"0x70660c2c79f0ce447bf70065ef2d3762e0e87198879c2f6fbe75f04b25dd1ddd\",\"urls\":[\"bzz-raw://a4708cdc3840887ec63c82fdf9e2d74fec8b811ccdff18a04a07e15837221b70\",\"dweb:/ipfs/QmYQAbcWu8jREJg3S2ZqeRNCCp6su2ysqgzDTUYAdrvWfc\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3afca766825d028e9de27b09a0165887653a5c808bbb7fd5c1fb3507652c5bf6\",\"urls\":[\"bzz-raw://027390d281f19afee178af8bfaaf0e622e8b6a22ef96abe5899dc2421457b730\",\"dweb:/ipfs/QmZnw3VewsnoLja6BbmAFcCV9AakLFG4vJaeq8VriJMRJZ\"]},\"contracts/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x9a17debe190dd4ef63e25ead5884cdfc60a954bde410444123f1e1fedb563ba3\",\"urls\":[\"bzz-raw://832d87678d57f664e60ba4231d0db4592e9e899d25844d06dd60a213aacd68e9\",\"dweb:/ipfs/QmTDHy4nZgeiTFgELZb4nZPSsE44UEHHtouLspvdzK9sMb\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xb6b65a22ef7f6aabecc727a68ecaf25ff8bd381769f1eb34ab8d8bf11bc159ec\",\"urls\":[\"bzz-raw://1ec48f7930d1df622d823386118708d738c5f7c31ee499f8e1a1f204de4de10e\",\"dweb:/ipfs/QmSeNFHGDUn1Wx4opcgn3hz1HWn1BSzsWdsCkf7UKDV5kE\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens."
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens."
							}
						}
					}
				}
			},
			"contracts/ERC1155MixedFungible.sol": {
				"ERC1155MixedFungible": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "getNonFungibleBaseType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "getNonFungibleIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "isFungible",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "isNonFungible",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "isNonFungibleBaseType",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "isNonFungibleItem",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension to ERC1155 for Mixed Fungible and Non-Fungible Items support The main benefit is sharing of common type information, just like you do when creating a fungible id.",
						"methods": {
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"return": "True if the operator is approved, false if not"
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155MixedFungible.sol\":247:4971  contract ERC1155MixedFungible is ERC1155 {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ERC1155MixedFungible.sol\":247:4971  contract ERC1155MixedFungible is ERC1155 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155MixedFungible.sol\":247:4971  contract ERC1155MixedFungible is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/ERC1155MixedFungible.sol\":247:4971  contract ERC1155MixedFungible is ERC1155 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7269a327\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xadebf6f2\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xadebf6f2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe44591f0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x7269a327\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9cca1c64\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x4e1273f4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5e81b958\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6f969c2d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155MixedFungible.sol\":4183:4396  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/ERC1155MixedFungible.sol\":4183:4396  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_4:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_30:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_33:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_36:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_42:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":101:110   */\n      dup5\n        /* \"--CODEGEN--\":95:97   */\n      0x20\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:98   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:99   */\n      add\n        /* \"--CODEGEN--\":60:111   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:119   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":132:133   */\n      0x00\n        /* \"--CODEGEN--\":129:130   */\n      dup1\n        /* \"--CODEGEN--\":122:134   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_45:\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_47:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_47)\n    tag_49:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":1449:1664  function isNonFungibleItem(uint256 _id) public pure returns(bool) {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/ERC1155MixedFungible.sol\":1449:1664  function isNonFungibleItem(uint256 _id) public pure returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":1669:1766  function ownerOf(uint256 _id) public view returns (address) {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/ERC1155MixedFungible.sol\":1669:1766  function ownerOf(uint256 _id) public view returns (address) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":1102:1215  function getNonFungibleBaseType(uint256 _id) public pure returns(uint256) {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/ERC1155MixedFungible.sol\":1102:1215  function getNonFungibleBaseType(uint256 _id) public pure returns(uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":1220:1444  function isNonFungibleBaseType(uint256 _id) public pure returns(bool) {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"contracts/ERC1155MixedFungible.sol\":1220:1444  function isNonFungibleBaseType(uint256 _id) public pure returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":983:1097  function getNonFungibleIndex(uint256 _id) public pure returns(uint256) {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/ERC1155MixedFungible.sol\":983:1097  function getNonFungibleIndex(uint256 _id) public pure returns(uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/ERC1155MixedFungible.sol\":873:978  function isFungible(uint256 _id) public pure returns(bool) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/ERC1155MixedFungible.sol\":873:978  function isFungible(uint256 _id) public pure returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":750:868  function isNonFungible(uint256 _id) public pure returns(bool) {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"contracts/ERC1155MixedFungible.sol\":750:868  function isNonFungible(uint256 _id) public pure returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_81:\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/ERC1155MixedFungible.sol\":4183:4396  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n    tag_22:\n        /* \"contracts/ERC1155MixedFungible.sol\":4254:4261  uint256 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4277:4299  isNonFungibleItem(_id) */\n      tag_84\n        /* \"contracts/ERC1155MixedFungible.sol\":4295:4298  _id */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":4277:4294  isNonFungibleItem */\n      tag_52\n        /* \"contracts/ERC1155MixedFungible.sol\":4277:4299  isNonFungibleItem(_id) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ERC1155MixedFungible.sol\":4273:4351  if (isNonFungibleItem(_id))... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4337:4343  _owner */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4343  nfOwners[_id] == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4328  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4333  nfOwners[_id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4329:4332  _id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4333  nfOwners[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4343  nfOwners[_id] == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4351  nfOwners[_id] == _owner ? 1 : 0 */\n      tag_86\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4350:4351  0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4351  nfOwners[_id] == _owner ? 1 : 0 */\n      jump(tag_87)\n    tag_86:\n        /* \"contracts/ERC1155MixedFungible.sol\":4346:4347  1 */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":4320:4351  nfOwners[_id] == _owner ? 1 : 0 */\n    tag_87:\n        /* \"contracts/ERC1155MixedFungible.sol\":4313:4351  return nfOwners[_id] == _owner ? 1 : 0 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_83)\n        /* \"contracts/ERC1155MixedFungible.sol\":4273:4351  if (isNonFungibleItem(_id))... */\n    tag_85:\n        /* \"contracts/ERC1155MixedFungible.sol\":4368:4376  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4368:4381  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":4377:4380  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4368:4381  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":4368:4389  balances[_id][_owner] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4382:4388  _owner */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":4368:4389  balances[_id][_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":4361:4389  return balances[_id][_owner] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4183:4396  function balanceOf(address _owner, uint256 _id) external view returns (uint256) {... */\n    tag_83:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_25:\n        /* \"contracts/ERC1155.sol\":1400:1404  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":782:792  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"contracts/ERC1155.sol\":1437:1463  INTERFACE_SIGNATURE_ERC165 */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":1421:1463  _interfaceId == INTERFACE_SIGNATURE_ERC165 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":1421:1433  _interfaceId */\n      dup3\n        /* \"contracts/ERC1155.sol\":1421:1463  _interfaceId == INTERFACE_SIGNATURE_ERC165 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1421:1523  _interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":1302:1312  0xd9b67a26 */\n      0xd9b67a26\n        /* \"contracts/ERC1155.sol\":1496:1523  INTERFACE_SIGNATURE_ERC1155 */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":1480:1523  _interfaceId == INTERFACE_SIGNATURE_ERC1155 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":1480:1492  _interfaceId */\n      dup3\n        /* \"contracts/ERC1155.sol\":1480:1523  _interfaceId == INTERFACE_SIGNATURE_ERC1155 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1421:1523  _interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n    tag_89:\n        /* \"contracts/ERC1155.sol\":1417:1562  if (_interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/ERC1155.sol\":1546:1550  true */\n      0x01\n        /* \"contracts/ERC1155.sol\":1539:1550  return true */\n      swap1\n      pop\n      jump(tag_88)\n        /* \"contracts/ERC1155.sol\":1417:1562  if (_interfaceId == INTERFACE_SIGNATURE_ERC165 ||... */\n    tag_90:\n        /* \"contracts/ERC1155.sol\":1580:1585  false */\n      0x00\n        /* \"contracts/ERC1155.sol\":1573:1585  return false */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1319:1592  function supportsInterface(bytes4 _interfaceId)... */\n    tag_88:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n    tag_37:\n        /* \"contracts/ERC1155MixedFungible.sol\":3087:3090  0x0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3072:3091  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3072:3075  _to */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":3072:3091  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MixedFungible.sol\":3064:3123  require(_to != address(0x0), \"cannot send to zero address\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616e6e6f742073656e6420746f207a65726f20616464726573730000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/ERC1155MixedFungible.sol\":3156:3163  _values */\n      dup4\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":3156:3170  _values.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3141:3145  _ids */\n      dup7\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":3141:3152  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3141:3170  _ids.length == _values.length */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":3133:3198  require(_ids.length == _values.length, \"Array length must match\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4172726179206c656e677468206d757374206d61746368000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/ERC1155MixedFungible.sol\":3356:3366  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":3347:3366  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3347:3352  _from */\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":3347:3366  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":3347:3413  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3409:3413  true */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3413  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3386  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3393  operatorApproval[_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3387:3392  _from */\n      dup11\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3393  operatorApproval[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3405  operatorApproval[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3394:3404  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3405  operatorApproval[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3370:3413  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":3347:3413  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n    tag_94:\n        /* \"contracts/ERC1155MixedFungible.sol\":3339:3465  require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/ERC1155MixedFungible.sol\":3481:3490  uint256 i */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3493:3494  0 */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":3481:3494  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3476:3965  for (uint256 i = 0; i < _ids.length; ++i) {... */\n    tag_96:\n        /* \"contracts/ERC1155MixedFungible.sol\":3500:3504  _ids */\n      dup7\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":3500:3511  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3496:3497  i */\n      dup2\n        /* \"contracts/ERC1155MixedFungible.sol\":3496:3511  i < _ids.length */\n      lt\n        /* \"contracts/ERC1155MixedFungible.sol\":3476:3965  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":3599:3609  uint256 id */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3612:3616  _ids */\n      dup8\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":3617:3618  i */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":3612:3619  _ids[i] */\n      dup2\n      dup2\n      lt\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155MixedFungible.sol\":3599:3619  uint256 id = _ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3633:3646  uint256 value */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3649:3656  _values */\n      dup7\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":3657:3658  i */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3649:3659  _values[i] */\n      dup2\n      dup2\n      lt\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155MixedFungible.sol\":3633:3659  uint256 value = _values[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3678:3695  isNonFungible(id) */\n      tag_101\n        /* \"contracts/ERC1155MixedFungible.sol\":3692:3694  id */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":3678:3691  isNonFungible */\n      tag_73\n        /* \"contracts/ERC1155MixedFungible.sol\":3678:3695  isNonFungible(id) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/ERC1155MixedFungible.sol\":3674:3955  if (isNonFungible(id)) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":3739:3744  _from */\n      dup11\n        /* \"contracts/ERC1155MixedFungible.sol\":3723:3744  nfOwners[id] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3723:3731  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":3723:3735  nfOwners[id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3732:3734  id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3723:3735  nfOwners[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3723:3744  nfOwners[id] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":3715:3745  require(nfOwners[id] == _from) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/ERC1155MixedFungible.sol\":3778:3781  _to */\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":3763:3771  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":3763:3775  nfOwners[id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3772:3774  id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3763:3775  nfOwners[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3763:3781  nfOwners[id] = _to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3674:3955  if (isNonFungible(id)) {... */\n      jump(tag_104)\n    tag_102:\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3872  balances[id][_from].sub(value) */\n      tag_105\n        /* \"contracts/ERC1155MixedFungible.sol\":3866:3871  value */\n      dup2\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3850  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3854  balances[id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":3851:3853  id */\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3854  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3861  balances[id][_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3855:3860  _from */\n      dup15\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3861  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3865  balances[id][_from].sub */\n      tag_106\n      swap1\n        /* \"contracts/ERC1155MixedFungible.sol\":3842:3872  balances[id][_from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3828  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3832  balances[id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":3829:3831  id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3832  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3839  balances[id][_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3833:3838  _from */\n      dup14\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3839  balances[id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3820:3872  balances[id][_from] = balances[id][_from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3912:3940  value.add(balances[id][_to]) */\n      tag_107\n        /* \"contracts/ERC1155MixedFungible.sol\":3922:3930  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3922:3934  balances[id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":3931:3933  id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3922:3934  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3922:3939  balances[id][_to] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3935:3938  _to */\n      dup13\n        /* \"contracts/ERC1155MixedFungible.sol\":3922:3939  balances[id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":3912:3917  value */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":3912:3921  value.add */\n      tag_108\n      swap1\n        /* \"contracts/ERC1155MixedFungible.sol\":3912:3940  value.add(balances[id][_to]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3898  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3902  balances[id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":3899:3901  id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3902  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3907  balances[id][_to] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":3903:3906  _to */\n      dup13\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3907  balances[id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":3890:3940  balances[id][_to]   = value.add(balances[id][_to]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3674:3955  if (isNonFungible(id)) {... */\n    tag_104:\n        /* \"contracts/ERC1155MixedFungible.sol\":3476:3965  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3513:3516  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3476:3965  for (uint256 i = 0; i < _ids.length; ++i) {... */\n      jump(tag_96)\n    tag_97:\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4013:4016  _to */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4006:4011  _from */\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155MixedFungible.sol\":4018:4022  _ids */\n      dup10\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":4024:4031  _values */\n      dup10\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup8\n      dup8\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      pop\n      pop\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup6\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":3980:4032  TransferBatch(msg.sender, _from, _to, _ids, _values) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155MixedFungible.sol\":4047:4063  _to.isContract() */\n      tag_109\n        /* \"contracts/ERC1155MixedFungible.sol\":4047:4050  _to */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":4047:4061  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_110\n        /* \"contracts/ERC1155MixedFungible.sol\":4047:4063  _to.isContract() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ERC1155MixedFungible.sol\":4043:4171  if (_to.isContract()) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      tag_112\n        /* \"contracts/ERC1155MixedFungible.sol\":4115:4125  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":4127:4132  _from */\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":4134:4137  _to */\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":4139:4143  _ids */\n      dup10\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4145:4152  _values */\n      dup9\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4154:4159  _data */\n      dup8\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4114  _doSafeBatchTransferAcceptanceCheck */\n      tag_113\n        /* \"contracts/ERC1155MixedFungible.sol\":4079:4160  _doSafeBatchTransferAcceptanceCheck(msg.sender, _from, _to, _ids, _values, _data) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC1155MixedFungible.sol\":4043:4171  if (_to.isContract()) {... */\n    tag_111:\n        /* \"contracts/ERC1155MixedFungible.sol\":2910:4177  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n    tag_46:\n        /* \"contracts/ERC1155MixedFungible.sol\":4502:4518  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155MixedFungible.sol\":4557:4561  _ids */\n      dup3\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":4557:4568  _ids.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4539:4546  _owners */\n      dup6\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":4539:4553  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4539:4568  _owners.length == _ids.length */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":4531:4569  require(_owners.length == _ids.length) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"contracts/ERC1155MixedFungible.sol\":4580:4606  uint256[] memory balances_ */\n      0x60\n        /* \"contracts/ERC1155MixedFungible.sol\":4623:4630  _owners */\n      dup6\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":4623:4637  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4609:4638  new uint256[](_owners.length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4609:4638  new uint256[](_owners.length) */\n      swap1\n      pop\n    tag_116:\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4580:4638  uint256[] memory balances_ = new uint256[](_owners.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4654:4663  uint256 i */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4666:4667  0 */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":4654:4667  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4649:4936  for (uint256 i = 0; i < _owners.length; ++i) {... */\n    tag_117:\n        /* \"contracts/ERC1155MixedFungible.sol\":4673:4680  _owners */\n      dup7\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":4673:4687  _owners.length */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4669:4670  i */\n      dup2\n        /* \"contracts/ERC1155MixedFungible.sol\":4669:4687  i < _owners.length */\n      lt\n        /* \"contracts/ERC1155MixedFungible.sol\":4649:4936  for (uint256 i = 0; i < _owners.length; ++i) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4708:4718  uint256 id */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4721:4725  _ids */\n      dup6\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":4726:4727  i */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4721:4728  _ids[i] */\n      dup2\n      dup2\n      lt\n      tag_120\n      jumpi\n      invalid\n    tag_120:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ERC1155MixedFungible.sol\":4708:4728  uint256 id = _ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4746:4767  isNonFungibleItem(id) */\n      tag_121\n        /* \"contracts/ERC1155MixedFungible.sol\":4764:4766  id */\n      dup2\n        /* \"contracts/ERC1155MixedFungible.sol\":4746:4763  isNonFungibleItem */\n      tag_52\n        /* \"contracts/ERC1155MixedFungible.sol\":4746:4767  isNonFungibleItem(id) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC1155MixedFungible.sol\":4742:4926  if (isNonFungibleItem(id)) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4818:4825  _owners */\n      dup8\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":4826:4827  i */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4818:4828  _owners[i] */\n      dup2\n      dup2\n      lt\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4828  nfOwners[id] == _owners[i] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4810  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4814  nfOwners[id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4811:4813  id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4814  nfOwners[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4828  nfOwners[id] == _owners[i] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4836  nfOwners[id] == _owners[i] ? 1 : 0 */\n      tag_124\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":4835:4836  0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4836  nfOwners[id] == _owners[i] ? 1 : 0 */\n      jump(tag_125)\n    tag_124:\n        /* \"contracts/ERC1155MixedFungible.sol\":4831:4832  1 */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":4802:4836  nfOwners[id] == _owners[i] ? 1 : 0 */\n    tag_125:\n        /* \"contracts/ERC1155MixedFungible.sol\":4787:4836  balances_[i] = nfOwners[id] == _owners[i] ? 1 : 0 */\n      0xff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4787:4796  balances_ */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4797:4798  i */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4787:4799  balances_[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155MixedFungible.sol\":4787:4836  balances_[i] = nfOwners[id] == _owners[i] ? 1 : 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4742:4926  if (isNonFungibleItem(id)) {... */\n      jump(tag_127)\n    tag_122:\n        /* \"contracts/ERC1155MixedFungible.sol\":4887:4895  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4887:4899  balances[id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":4896:4898  id */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":4887:4899  balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":4887:4911  balances[id][_owners[i]] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":4900:4907  _owners */\n      dup10\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":4908:4909  i */\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":4900:4910  _owners[i] */\n      dup2\n      dup2\n      lt\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":4887:4911  balances[id][_owners[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":4872:4881  balances_ */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4882:4883  i */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":4872:4884  balances_[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155MixedFungible.sol\":4872:4911  balances_[i] = balances[id][_owners[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4742:4926  if (isNonFungibleItem(id)) {... */\n    tag_127:\n        /* \"contracts/ERC1155MixedFungible.sol\":4649:4936  for (uint256 i = 0; i < _owners.length; ++i) {... */\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4689:4692  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4649:4936  for (uint256 i = 0; i < _owners.length; ++i) {... */\n      jump(tag_117)\n    tag_118:\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4953:4962  balances_ */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":4946:4962  return balances_ */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":4402:4969  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":1449:1664  function isNonFungibleItem(uint256 _id) public pure returns(bool) {... */\n    tag_52:\n        /* \"contracts/ERC1155MixedFungible.sol\":1509:1513  bool */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":633:641  1 << 255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":1594:1597  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":1594:1611  _id & TYPE_NF_BIT */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1594:1626  _id & TYPE_NF_BIT == TYPE_NF_BIT */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":1593:1657  (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK != 0) */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1655:1656  0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":537:539  ~0 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC1155MixedFungible.sol\":1638:1651  NF_INDEX_MASK */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1632:1635  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":1632:1651  _id & NF_INDEX_MASK */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1632:1656  _id & NF_INDEX_MASK != 0 */\n      eq\n      iszero\n        /* \"contracts/ERC1155MixedFungible.sol\":1593:1657  (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK != 0) */\n    tag_131:\n        /* \"contracts/ERC1155MixedFungible.sol\":1586:1657  return (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK != 0) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1449:1664  function isNonFungibleItem(uint256 _id) public pure returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":1669:1766  function ownerOf(uint256 _id) public view returns (address) {... */\n    tag_55:\n        /* \"contracts/ERC1155MixedFungible.sol\":1720:1727  address */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":1746:1754  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":1746:1759  nfOwners[_id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":1755:1758  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":1746:1759  nfOwners[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1739:1759  return nfOwners[_id] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1669:1766  function ownerOf(uint256 _id) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":1102:1215  function getNonFungibleBaseType(uint256 _id) public pure returns(uint256) {... */\n    tag_58:\n        /* \"contracts/ERC1155MixedFungible.sol\":1167:1174  uint256 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":433:436  128 */\n      0x80\n        /* \"contracts/ERC1155MixedFungible.sol\":425:427  ~0 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC1155MixedFungible.sol\":409:429  uint256(uint128(~0)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":409:436  uint256(uint128(~0)) << 128 */\n      swap1\n      shl\n        /* \"contracts/ERC1155MixedFungible.sol\":1193:1196  _id */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":1193:1208  _id & TYPE_MASK */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1186:1208  return _id & TYPE_MASK */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1102:1215  function getNonFungibleBaseType(uint256 _id) public pure returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":1220:1444  function isNonFungibleBaseType(uint256 _id) public pure returns(bool) {... */\n    tag_61:\n        /* \"contracts/ERC1155MixedFungible.sol\":1284:1288  bool */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":633:641  1 << 255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":1374:1377  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":1374:1391  _id & TYPE_NF_BIT */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1374:1406  _id & TYPE_NF_BIT == TYPE_NF_BIT */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":1373:1437  (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK == 0) */\n      dup1\n      iszero\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1435:1436  0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":537:539  ~0 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC1155MixedFungible.sol\":1418:1431  NF_INDEX_MASK */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1412:1415  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":1412:1431  _id & NF_INDEX_MASK */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1412:1436  _id & NF_INDEX_MASK == 0 */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":1373:1437  (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK == 0) */\n    tag_135:\n        /* \"contracts/ERC1155MixedFungible.sol\":1366:1437  return (_id & TYPE_NF_BIT == TYPE_NF_BIT) && (_id & NF_INDEX_MASK == 0) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":1220:1444  function isNonFungibleBaseType(uint256 _id) public pure returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":983:1097  function getNonFungibleIndex(uint256 _id) public pure returns(uint256) {... */\n    tag_64:\n        /* \"contracts/ERC1155MixedFungible.sol\":1045:1052  uint256 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":537:539  ~0 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC1155MixedFungible.sol\":1077:1090  NF_INDEX_MASK */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1071:1074  _id */\n      dup3\n        /* \"contracts/ERC1155MixedFungible.sol\":1071:1090  _id & NF_INDEX_MASK */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1064:1090  return _id & NF_INDEX_MASK */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":983:1097  function getNonFungibleIndex(uint256 _id) public pure returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n    tag_67:\n        /* \"contracts/ERC1155.sol\":8940:8949  _approved */\n      dup1\n        /* \"contracts/ERC1155.sol\":8898:8914  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":8898:8926  operatorApproval[msg.sender] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8915:8925  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":8898:8926  operatorApproval[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8898:8937  operatorApproval[msg.sender][_operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8927:8936  _operator */\n      dup5\n        /* \"contracts/ERC1155.sol\":8898:8937  operatorApproval[msg.sender][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155.sol\":8898:8949  operatorApproval[msg.sender][_operator] = _approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":8991:9000  _operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":8979:8989  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC1155.sol\":9002:9011  _approved */\n      dup4\n        /* \"contracts/ERC1155.sol\":8964:9012  ApprovalForAll(msg.sender, _operator, _approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":8817:9019  function setApprovalForAll(address _operator, bool _approved) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":873:978  function isFungible(uint256 _id) public pure returns(bool) {... */\n    tag_70:\n        /* \"contracts/ERC1155MixedFungible.sol\":926:930  bool */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":970:971  0 */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":633:641  1 << 255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC1155MixedFungible.sol\":949:952  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":949:966  _id & TYPE_NF_BIT */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":949:971  _id & TYPE_NF_BIT == 0 */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":942:971  return _id & TYPE_NF_BIT == 0 */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":873:978  function isFungible(uint256 _id) public pure returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":750:868  function isNonFungible(uint256 _id) public pure returns(bool) {... */\n    tag_73:\n        /* \"contracts/ERC1155MixedFungible.sol\":806:810  bool */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":633:641  1 << 255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":829:832  _id */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":829:846  _id & TYPE_NF_BIT */\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":829:861  _id & TYPE_NF_BIT == TYPE_NF_BIT */\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":822:861  return _id & TYPE_NF_BIT == TYPE_NF_BIT */\n      swap1\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":750:868  function isNonFungible(uint256 _id) public pure returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n    tag_76:\n        /* \"contracts/ERC1155.sol\":9382:9386  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":9405:9421  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155.sol\":9405:9429  operatorApproval[_owner] */\n      0x00\n        /* \"contracts/ERC1155.sol\":9422:9428  _owner */\n      dup5\n        /* \"contracts/ERC1155.sol\":9405:9429  operatorApproval[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":9405:9440  operatorApproval[_owner][_operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":9430:9439  _operator */\n      dup4\n        /* \"contracts/ERC1155.sol\":9405:9440  operatorApproval[_owner][_operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":9398:9440  return operatorApproval[_owner][_operator] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":9298:9447  function isApprovedForAll(address _owner, address _operator) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n    tag_82:\n        /* \"contracts/ERC1155MixedFungible.sol\":1936:1939  0x0 */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":1921:1940  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1921:1924  _to */\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":1921:1940  _to != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MixedFungible.sol\":1913:1972  require(_to != address(0x0), \"cannot send to zero address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616e6e6f742073656e6420746f207a65726f20616464726573730000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/ERC1155MixedFungible.sol\":1999:2009  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":1990:2009  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":1990:1995  _from */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":1990:2009  _from == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":1990:2056  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2052:2056  true */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2056  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2029  operatorApproval */\n      0x01\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2036  operatorApproval[_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2030:2035  _from */\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2036  operatorApproval[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2048  operatorApproval[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2037:2047  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2048  operatorApproval[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":2013:2056  operatorApproval[_from][msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":1990:2056  _from == msg.sender || operatorApproval[_from][msg.sender] == true */\n    tag_143:\n        /* \"contracts/ERC1155MixedFungible.sol\":1982:2108  require(_from == msg.sender || operatorApproval[_from][msg.sender] == true, \"Need operator approval for 3rd party transfers.\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/ERC1155MixedFungible.sol\":2123:2141  isNonFungible(_id) */\n      tag_145\n        /* \"contracts/ERC1155MixedFungible.sol\":2137:2140  _id */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":2123:2136  isNonFungible */\n      tag_73\n        /* \"contracts/ERC1155MixedFungible.sol\":2123:2141  isNonFungible(_id) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC1155MixedFungible.sol\":2119:2684  if (isNonFungible(_id)) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":2182:2187  _from */\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":2165:2187  nfOwners[_id] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":2165:2173  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":2165:2178  nfOwners[_id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2174:2177  _id */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":2165:2178  nfOwners[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":2165:2187  nfOwners[_id] == _from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MixedFungible.sol\":2157:2188  require(nfOwners[_id] == _from) */\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n        /* \"contracts/ERC1155MixedFungible.sol\":2218:2221  _to */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":2202:2210  nfOwners */\n      0x02\n        /* \"contracts/ERC1155MixedFungible.sol\":2202:2215  nfOwners[_id] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2211:2214  _id */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":2202:2215  nfOwners[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2202:2221  nfOwners[_id] = _to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2119:2684  if (isNonFungible(_id)) {... */\n      jump(tag_148)\n    tag_146:\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2606  balances[_id][_from].sub(_value) */\n      tag_149\n        /* \"contracts/ERC1155MixedFungible.sol\":2599:2605  _value */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2582  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2587  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":2583:2586  _id */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2587  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2594  balances[_id][_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2588:2593  _from */\n      dup10\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2594  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2598  balances[_id][_from].sub */\n      tag_106\n      swap1\n        /* \"contracts/ERC1155MixedFungible.sol\":2574:2606  balances[_id][_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2559  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2564  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":2560:2563  _id */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2564  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2571  balances[_id][_from] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2565:2570  _from */\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2571  balances[_id][_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2551:2606  balances[_id][_from] = balances[_id][_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2673  balances[_id][_to].add(_value) */\n      tag_150\n        /* \"contracts/ERC1155MixedFungible.sol\":2666:2672  _value */\n      dup4\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2651  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2656  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":2652:2655  _id */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2656  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2661  balances[_id][_to] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2657:2660  _to */\n      dup9\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2661  balances[_id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2665  balances[_id][_to].add */\n      tag_108\n      swap1\n        /* \"contracts/ERC1155MixedFungible.sol\":2643:2673  balances[_id][_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2628  balances */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2633  balances[_id] */\n      dup1\n        /* \"contracts/ERC1155MixedFungible.sol\":2629:2632  _id */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2633  balances[_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2638  balances[_id][_to] */\n      0x00\n        /* \"contracts/ERC1155MixedFungible.sol\":2634:2637  _to */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2638  balances[_id][_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MixedFungible.sol\":2620:2673  balances[_id][_to]   = balances[_id][_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2119:2684  if (isNonFungible(_id)) {... */\n    tag_148:\n        /* \"contracts/ERC1155MixedFungible.sol\":2733:2736  _to */\n      dup5\n        /* \"contracts/ERC1155MixedFungible.sol\":2699:2750  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":2726:2731  _from */\n      dup7\n        /* \"contracts/ERC1155MixedFungible.sol\":2699:2750  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MixedFungible.sol\":2714:2724  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":2699:2750  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/ERC1155MixedFungible.sol\":2738:2741  _id */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2743:2749  _value */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2699:2750  TransferSingle(msg.sender, _from, _to, _id, _value) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155MixedFungible.sol\":2765:2781  _to.isContract() */\n      tag_151\n        /* \"contracts/ERC1155MixedFungible.sol\":2765:2768  _to */\n      dup6\n        /* \"contracts/ERC1155MixedFungible.sol\":2765:2779  _to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_110\n        /* \"contracts/ERC1155MixedFungible.sol\":2765:2781  _to.isContract() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ERC1155MixedFungible.sol\":2761:2882  if (_to.isContract()) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/ERC1155MixedFungible.sol\":2797:2871  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      tag_153\n        /* \"contracts/ERC1155MixedFungible.sol\":2828:2838  msg.sender */\n      caller\n        /* \"contracts/ERC1155MixedFungible.sol\":2840:2845  _from */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2847:2850  _to */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2852:2855  _id */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2857:2863  _value */\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2865:2870  _data */\n      dup8\n      dup8\n        /* \"contracts/ERC1155MixedFungible.sol\":2797:2871  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2797:2871  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155MixedFungible.sol\":2797:2827  _doSafeTransferAcceptanceCheck */\n      tag_154\n        /* \"contracts/ERC1155MixedFungible.sol\":2797:2871  _doSafeTransferAcceptanceCheck(msg.sender, _from, _to, _id, _value, _data) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ERC1155MixedFungible.sol\":2761:2882  if (_to.isContract()) {... */\n    tag_152:\n        /* \"contracts/ERC1155MixedFungible.sol\":1788:2888  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1123:1243  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"contracts/SafeMath.sol\":1181:1188  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":1212:1213  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1207:1208  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":1207:1213  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":1200:1214  assert(b <= a) */\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n        /* \"contracts/SafeMath.sol\":1235:1236  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":1231:1232  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1231:1236  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":1224:1236  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1123:1243  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":1313:1450  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_108:\n        /* \"contracts/SafeMath.sol\":1371:1380  uint256 c */\n      0x00\n        /* \"contracts/SafeMath.sol\":1400:1401  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":1396:1397  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":1396:1401  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":1392:1401  c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1423:1424  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":1418:1419  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":1418:1424  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":1411:1425  assert(c >= a) */\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n        /* \"contracts/SafeMath.sol\":1442:1443  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":1435:1443  return c */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":1313:1450  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Address.sol\":465:1089  function isContract(address account) internal view returns (bool) {... */\n    tag_110:\n        /* \"contracts/Address.sol\":525:529  bool */\n      0x00\n        /* \"contracts/Address.sol\":541:553  uint256 size */\n      dup1\n        /* \"contracts/Address.sol\":1048:1055  account */\n      dup3\n        /* \"contracts/Address.sol\":1036:1056  extcodesize(account) */\n      extcodesize\n        /* \"contracts/Address.sol\":1028:1056  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/Address.sol\":1081:1082  0 */\n      0x00\n        /* \"contracts/Address.sol\":1074:1078  size */\n      dup2\n        /* \"contracts/Address.sol\":1074:1082  size > 0 */\n      gt\n        /* \"contracts/Address.sol\":1067:1082  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/Address.sol\":465:1089  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":10688:11869  function _doSafeBatchTransferAcceptanceCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) internal {... */\n    tag_113:\n        /* \"contracts/Common.sol\":311:321  0xbc197c81 */\n      0xbc197c81\n        /* \"contracts/ERC1155.sol\":11773:11795  ERC1155_BATCH_ACCEPTED */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":11681:11795  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":11702:11705  _to */\n      dup5\n        /* \"contracts/ERC1155.sol\":11681:11729  ERC1155TokenReceiver(_to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/ERC1155.sol\":11730:11739  _operator */\n      dup9\n        /* \"contracts/ERC1155.sol\":11741:11746  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":11748:11752  _ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":11754:11761  _values */\n      dup8\n        /* \"contracts/ERC1155.sol\":11763:11768  _data */\n      dup8\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_161:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_161)\n    tag_163:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_164:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_164)\n    tag_166:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_167:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_167)\n    tag_169:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_170:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_171\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_171:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_173:\n        /* \"contracts/ERC1155.sol\":11681:11769  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":11681:11795  ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":11673:11862  require(ERC1155TokenReceiver(_to).onERC1155BatchReceived(_operator, _from, _ids, _values, _data) == ERC1155_BATCH_ACCEPTED, \"contract returned an unknown value from onERC1155BatchReceived\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad\n      0x3e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/ERC1155.sol\":10688:11869  function _doSafeBatchTransferAcceptanceCheck(address _operator, address _from, address _to, uint256[] memory _ids, uint256[] memory _values, bytes memory _data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":9554:10682  function _doSafeTransferAcceptanceCheck(address _operator, address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) internal {... */\n    tag_154:\n        /* \"contracts/Common.sol\":164:174  0xf23a6e61 */\n      0xf23a6e61\n        /* \"contracts/ERC1155.sol\":10597:10613  ERC1155_ACCEPTED */\n      0xe0\n      shl\n        /* \"contracts/ERC1155.sol\":10512:10613  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":10533:10536  _to */\n      dup5\n        /* \"contracts/ERC1155.sol\":10512:10555  ERC1155TokenReceiver(_to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/ERC1155.sol\":10556:10565  _operator */\n      dup9\n        /* \"contracts/ERC1155.sol\":10567:10572  _from */\n      dup9\n        /* \"contracts/ERC1155.sol\":10574:10577  _id */\n      dup8\n        /* \"contracts/ERC1155.sol\":10579:10585  _value */\n      dup8\n        /* \"contracts/ERC1155.sol\":10587:10592  _data */\n      dup8\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_176:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_176)\n    tag_178:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_179:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_180\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_180:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_181:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_182:\n        /* \"contracts/ERC1155.sol\":10512:10593  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":10512:10613  ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":10504:10675  require(ERC1155TokenReceiver(_to).onERC1155Received(_operator, _from, _id, _value, _data) == ERC1155_ACCEPTED, \"contract returned an unknown value from onERC1155Received\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/ERC1155.sol\":9554:10682  function _doSafeTransferAcceptanceCheck(address _operator, address _from, address _to, uint256 _id, uint256 _value, bytes memory _data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be 4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e\n    data_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad 636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564\n    data_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42 636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564\n\n    auxdata: 0xa265627a7a723158207de3b308f663cc60c7e71dbbff35994de499daa31a25aba5db06e706953e08c464736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612043806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80637269a3271161008c578063adebf6f211610066578063adebf6f214610609578063e44591f01461064f578063e985e9c514610695578063f242432a14610711576100e9565b80637269a327146105315780639cca1c6414610577578063a22cb465146105b9576100e9565b80634e1273f4116100c85780634e1273f4146103185780635e81b9581461043b5780636352211e146104815780636f969c2d146104ef576100e9565b8062fdd58e146100ee57806301ffc9a7146101505780632eb2c2d6146101b5575b600080fd5b61013a6004803603604081101561010457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107de565b6040518082815260200191505060405180910390f35b61019b6004803603602081101561016657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108c1565b604051808215151515815260200191505060405180910390f35b610316600480360360a08110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561022857600080fd5b82018360208201111561023a57600080fd5b8035906020019184602083028401116401000000008311171561025c57600080fd5b90919293919293908035906020019064010000000081111561027d57600080fd5b82018360208201111561028f57600080fd5b803590602001918460208302840111640100000000831117156102b157600080fd5b9091929391929390803590602001906401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184600183028401116401000000008311171561030657600080fd5b9091929391929390505050610972565b005b6103e46004803603604081101561032e57600080fd5b810190808035906020019064010000000081111561034b57600080fd5b82018360208201111561035d57600080fd5b8035906020019184602083028401116401000000008311171561037f57600080fd5b9091929391929390803590602001906401000000008111156103a057600080fd5b8201836020820111156103b257600080fd5b803590602001918460208302840111640100000000831117156103d457600080fd5b9091929391929390505050611019565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042757808201518184015260208101905061040c565b505050509050019250505060405180910390f35b6104676004803603602081101561045157600080fd5b81019080803590602001909291905050506111fc565b604051808215151515815260200191505060405180910390f35b6104ad6004803603602081101561049757600080fd5b810190808035906020019092919050505061126b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051b6004803603602081101561050557600080fd5b81019080803590602001909291905050506112a8565b6040518082815260200191505060405180910390f35b61055d6004803603602081101561054757600080fd5b81019080803590602001909291905050506112ea565b604051808215151515815260200191505060405180910390f35b6105a36004803603602081101561058d57600080fd5b8101908080359060200190929190505050611358565b6040518082815260200191505060405180910390f35b610607600480360360408110156105cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611396565b005b6106356004803603602081101561061f57600080fd5b8101908080359060200190929190505050611497565b604051808215151515815260200191505060405180910390f35b61067b6004803603602081101561066557600080fd5b81019080803590602001909291905050506114c5565b604051808215151515815260200191505060405180910390f35b6106f7600480360360408110156106ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f3565b604051808215151515815260200191505060405180910390f35b6107dc600480360360a081101561072757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561079857600080fd5b8201836020820111156107aa57600080fd5b803590602001918460018302840111640100000000831117156107cc57600080fd5b9091929391929390505050611587565b005b60006107e9826111fc565b15610868578273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085b57600061085e565b60015b60ff1690506108bb565b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061095a575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610968576001905061096d565b600090505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610a15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b838390508686905014610a90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4172726179206c656e677468206d757374206d6174636800000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161480610b57575060011515600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f69602f913960400191505060405180910390fd5b60008090505b86869050811015610e33576000878783818110610bcb57fe5b9050602002013590506000868684818110610be257fe5b905060200201359050610bf4826114c5565b15610cbb578a73ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c6457600080fd5b896002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e26565b610d1d8160008085815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8490919063ffffffff16565b60008084815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dd260008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611a9b90919063ffffffff16565b60008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050806001019050610bb2565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a4610f358773ffffffffffffffffffffffffffffffffffffffff16611ab5565b1561100f5761100e338989898980806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611ac8565b5b5050505050505050565b606082829050858590501461102d57600080fd5b6060858590506040519080825280602002602001820160405280156110615781602001602082028038833980820191505090505b50905060008090505b868690508110156111ef57600085858381811061108357fe5b905060200201359050611095816111fc565b15611152578787838181106110a657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461112f576000611132565b60015b60ff1683838151811061114157fe5b6020026020010181815250506111e3565b600080828152602001908152602001600020600089898581811061117257fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548383815181106111d657fe5b6020026020010181815250505b5080600101905061106a565b5080915050949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316148015611264575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16831614155b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16901b82169050919050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316148015611351575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff168316145b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff1682169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000807f80000000000000000000000000000000000000000000000000000000000000008316149050919050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316149050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561162a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614806116f1575060011515600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b611746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f69602f913960400191505060405180910390fd5b61174f846114c5565b15611816578573ffffffffffffffffffffffffffffffffffffffff166002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117bf57600080fd5b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611981565b6118788360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8490919063ffffffff16565b60008086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061192d8360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9b90919063ffffffff16565b60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611a248573ffffffffffffffffffffffffffffffffffffffff16611ab5565b15611a7c57611a7b338787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611d59565b5b505050505050565b600082821115611a9057fe5b818303905092915050565b6000818301905082811015611aac57fe5b80905092915050565b600080823b905060008111915050919050565b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663bc197c8188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611bce578082015181840152602081019050611bb3565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611c10578082015181840152602081019050611bf5565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611c4f578082015181840152602081019050611c34565b50505050905090810190601f168015611c7c5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611ca157600080fd5b505af1158015611cb5573d6000803e3d6000fd5b505050506040513d6020811015611ccb57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180611f98603e913960400191505060405180910390fd5b505050505050565b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e60578082015181840152602081019050611e45565b50505050905090810190601f168015611e8d5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611eb057600080fd5b505af1158015611ec4573d6000803e3d6000fd5b505050506040513d6020811015611eda57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180611fd66039913960400191505060405180910390fd5b50505050505056fe4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a265627a7a723158207de3b308f663cc60c7e71dbbff35994de499daa31a25aba5db06e706953e08c464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2043 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7269A327 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xADEBF6F2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xADEBF6F2 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE44591F0 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x711 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x7269A327 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x9CCA1C64 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5B9 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5E81B958 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x6F969C2D EQ PUSH2 0x4EF JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x427 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1587 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x7E9 DUP3 PUSH2 0x11FC JUMP JUMPDEST ISZERO PUSH2 0x868 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85B JUMPI PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x95A JUMPI POP PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x968 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4172726179206C656E677468206D757374206D61746368000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB57 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F69 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBCB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xBE2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xBF4 DUP3 PUSH2 0x14C5 JUMP JUMPDEST ISZERO PUSH2 0xCBB JUMPI DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xD1D DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDD2 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1A9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBB2 JUMP JUMPDEST POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP8 DUP8 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB5 JUMP JUMPDEST ISZERO PUSH2 0x100F JUMPI PUSH2 0x100E CALLER DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1083 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x1095 DUP2 PUSH2 0x11FC JUMP JUMPDEST ISZERO PUSH2 0x1152 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x10A6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x112F JUMPI PUSH1 0x0 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1141 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1172 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x106A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ DUP1 ISZERO PUSH2 0x1264 JUMPI POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 AND EQ ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ DUP1 ISZERO PUSH2 0x1351 JUMPI POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16F1 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x1746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F69 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174F DUP5 PUSH2 0x14C5 JUMP JUMPDEST ISZERO PUSH2 0x1816 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x1878 DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x192D DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A24 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB5 JUMP JUMPDEST ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7B CALLER DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A90 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1AAC JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C10 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C34 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C7C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F98 PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E60 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E45 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E8D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1F60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FD6 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID 0x4E PUSH6 0x6564206F7065 PUSH19 0x61746F7220617070726F76616C20666F722033 PUSH19 0x64207061727479207472616E73666572732E63 PUSH16 0x6E74726163742072657475726E656420 PUSH2 0x6E20 PUSH22 0x6E6B6E6F776E2076616C75652066726F6D206F6E4552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD TIMESTAMP PUSH2 0x7463 PUSH9 0x526563656976656463 PUSH16 0x6E74726163742072657475726E656420 PUSH2 0x6E20 PUSH22 0x6E6B6E6F776E2076616C75652066726F6D206F6E4552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766564 LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH30 0xE3B308F663CC60C7E71DBBFF35994DE499DAA31A25ABA5DB06E706953E08 0xC4 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "247:4724:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:4724:3;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c80637269a3271161008c578063adebf6f211610066578063adebf6f214610609578063e44591f01461064f578063e985e9c514610695578063f242432a14610711576100e9565b80637269a327146105315780639cca1c6414610577578063a22cb465146105b9576100e9565b80634e1273f4116100c85780634e1273f4146103185780635e81b9581461043b5780636352211e146104815780636f969c2d146104ef576100e9565b8062fdd58e146100ee57806301ffc9a7146101505780632eb2c2d6146101b5575b600080fd5b61013a6004803603604081101561010457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107de565b6040518082815260200191505060405180910390f35b61019b6004803603602081101561016657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108c1565b604051808215151515815260200191505060405180910390f35b610316600480360360a08110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561022857600080fd5b82018360208201111561023a57600080fd5b8035906020019184602083028401116401000000008311171561025c57600080fd5b90919293919293908035906020019064010000000081111561027d57600080fd5b82018360208201111561028f57600080fd5b803590602001918460208302840111640100000000831117156102b157600080fd5b9091929391929390803590602001906401000000008111156102d257600080fd5b8201836020820111156102e457600080fd5b8035906020019184600183028401116401000000008311171561030657600080fd5b9091929391929390505050610972565b005b6103e46004803603604081101561032e57600080fd5b810190808035906020019064010000000081111561034b57600080fd5b82018360208201111561035d57600080fd5b8035906020019184602083028401116401000000008311171561037f57600080fd5b9091929391929390803590602001906401000000008111156103a057600080fd5b8201836020820111156103b257600080fd5b803590602001918460208302840111640100000000831117156103d457600080fd5b9091929391929390505050611019565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042757808201518184015260208101905061040c565b505050509050019250505060405180910390f35b6104676004803603602081101561045157600080fd5b81019080803590602001909291905050506111fc565b604051808215151515815260200191505060405180910390f35b6104ad6004803603602081101561049757600080fd5b810190808035906020019092919050505061126b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051b6004803603602081101561050557600080fd5b81019080803590602001909291905050506112a8565b6040518082815260200191505060405180910390f35b61055d6004803603602081101561054757600080fd5b81019080803590602001909291905050506112ea565b604051808215151515815260200191505060405180910390f35b6105a36004803603602081101561058d57600080fd5b8101908080359060200190929190505050611358565b6040518082815260200191505060405180910390f35b610607600480360360408110156105cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611396565b005b6106356004803603602081101561061f57600080fd5b8101908080359060200190929190505050611497565b604051808215151515815260200191505060405180910390f35b61067b6004803603602081101561066557600080fd5b81019080803590602001909291905050506114c5565b604051808215151515815260200191505060405180910390f35b6106f7600480360360408110156106ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f3565b604051808215151515815260200191505060405180910390f35b6107dc600480360360a081101561072757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561079857600080fd5b8201836020820111156107aa57600080fd5b803590602001918460018302840111640100000000831117156107cc57600080fd5b9091929391929390505050611587565b005b60006107e9826111fc565b15610868578273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085b57600061085e565b60015b60ff1690506108bb565b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061095a575063d9b67a2660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610968576001905061096d565b600090505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610a15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b838390508686905014610a90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4172726179206c656e677468206d757374206d6174636800000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161480610b57575060011515600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f69602f913960400191505060405180910390fd5b60008090505b86869050811015610e33576000878783818110610bcb57fe5b9050602002013590506000868684818110610be257fe5b905060200201359050610bf4826114c5565b15610cbb578a73ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c6457600080fd5b896002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e26565b610d1d8160008085815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8490919063ffffffff16565b60008084815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dd260008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611a9b90919063ffffffff16565b60008084815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050806001019050610bb2565b508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925060200280828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a4610f358773ffffffffffffffffffffffffffffffffffffffff16611ab5565b1561100f5761100e338989898980806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611ac8565b5b5050505050505050565b606082829050858590501461102d57600080fd5b6060858590506040519080825280602002602001820160405280156110615781602001602082028038833980820191505090505b50905060008090505b868690508110156111ef57600085858381811061108357fe5b905060200201359050611095816111fc565b15611152578787838181106110a657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461112f576000611132565b60015b60ff1683838151811061114157fe5b6020026020010181815250506111e3565b600080828152602001908152602001600020600089898581811061117257fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548383815181106111d657fe5b6020026020010181815250505b5080600101905061106a565b5080915050949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316148015611264575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16831614155b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16901b82169050919050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316148015611351575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff168316145b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff1682169050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000807f80000000000000000000000000000000000000000000000000000000000000008316149050919050565b60007f8000000000000000000000000000000000000000000000000000000000000000808316149050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561162a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614806116f1575060011515600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b611746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f69602f913960400191505060405180910390fd5b61174f846114c5565b15611816578573ffffffffffffffffffffffffffffffffffffffff166002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117bf57600080fd5b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611981565b6118788360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a8490919063ffffffff16565b60008086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061192d8360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9b90919063ffffffff16565b60008086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611a248573ffffffffffffffffffffffffffffffffffffffff16611ab5565b15611a7c57611a7b338787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611d59565b5b505050505050565b600082821115611a9057fe5b818303905092915050565b6000818301905082811015611aac57fe5b80905092915050565b600080823b905060008111915050919050565b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663bc197c8188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611bce578082015181840152602081019050611bb3565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611c10578082015181840152602081019050611bf5565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611c4f578082015181840152602081019050611c34565b50505050905090810190601f168015611c7c5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611ca157600080fd5b505af1158015611cb5573d6000803e3d6000fd5b505050506040513d6020811015611ccb57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180611f98603e913960400191505060405180910390fd5b505050505050565b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6188888787876040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e60578082015181840152602081019050611e45565b50505050905090810190601f168015611e8d5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611eb057600080fd5b505af1158015611ec4573d6000803e3d6000fd5b505050506040513d6020811015611eda57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180611fd66039913960400191505060405180910390fd5b50505050505056fe4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a265627a7a723158207de3b308f663cc60c7e71dbbff35994de499daa31a25aba5db06e706953e08c464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7269A327 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xADEBF6F2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xADEBF6F2 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE44591F0 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x711 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x7269A327 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x9CCA1C64 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5B9 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5E81B958 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x6F969C2D EQ PUSH2 0x4EF JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x972 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x427 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x635 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1587 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x7E9 DUP3 PUSH2 0x11FC JUMP JUMPDEST ISZERO PUSH2 0x868 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85B JUMPI PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x95A JUMPI POP PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x968 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4172726179206C656E677468206D757374206D61746368000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB57 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F69 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBCB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xBE2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xBF4 DUP3 PUSH2 0x14C5 JUMP JUMPDEST ISZERO PUSH2 0xCBB JUMPI DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xD1D DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDD2 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x1A9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBB2 JUMP JUMPDEST POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP8 DUP8 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 DUP6 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF35 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB5 JUMP JUMPDEST ISZERO PUSH2 0x100F JUMPI PUSH2 0x100E CALLER DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP6 DUP6 SWAP1 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1061 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1083 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x1095 DUP2 PUSH2 0x11FC JUMP JUMPDEST ISZERO PUSH2 0x1152 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x10A6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x112F JUMPI PUSH1 0x0 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1141 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1172 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x106A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ DUP1 ISZERO PUSH2 0x1264 JUMPI POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 AND EQ ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ DUP1 ISZERO PUSH2 0x1351 JUMPI POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E6E6F742073656E6420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16F1 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x1746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F69 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174F DUP5 PUSH2 0x14C5 JUMP JUMPDEST ISZERO PUSH2 0x1816 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x1878 DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A84 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x192D DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A24 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB5 JUMP JUMPDEST ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7B CALLER DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A90 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1AAC JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C10 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C34 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C7C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F98 PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP9 DUP9 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E60 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E45 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E8D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1F60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FD6 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID 0x4E PUSH6 0x6564206F7065 PUSH19 0x61746F7220617070726F76616C20666F722033 PUSH19 0x64207061727479207472616E73666572732E63 PUSH16 0x6E74726163742072657475726E656420 PUSH2 0x6E20 PUSH22 0x6E6B6E6F776E2076616C75652066726F6D206F6E4552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD TIMESTAMP PUSH2 0x7463 PUSH9 0x526563656976656463 PUSH16 0x6E74726163742072657475726E656420 PUSH2 0x6E20 PUSH22 0x6E6B6E6F776E2076616C75652066726F6D206F6E4552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766564 LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH30 0xE3B308F663CC60C7E71DBBFF35994DE499DAA31A25ABA5DB06E706953E08 0xC4 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "247:4724:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:4724:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4183:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4183:213:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1319:273:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1319:273:2;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2910:1267:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2910:1267:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2910:1267:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2910:1267:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2910:1267:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2910:1267:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2910:1267:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2910:1267:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2910:1267:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2910:1267:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2910:1267:3;;;;;;;;;;;;:::i;:::-;;4402:567;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4402:567:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4402:567:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4402:567:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4402:567:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4402:567:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4402:567:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4402:567:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4402:567:3;;;;;;;;;;;;;;;;;1449:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1449:215:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1669:97;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1669:97:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1102:113;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1102:113:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1220:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1220:224:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;983:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;983:114:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8817:202:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8817:202:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;873:105:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;873:105:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;750:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;750:118:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9298:149:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9298:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1788:1100:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1788:1100:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1788:1100:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1788:1100:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1788:1100:3;;;;;;;;;;;;:::i;:::-;;4183:213;4254:7;4277:22;4295:3;4277:17;:22::i;:::-;4273:78;;;4337:6;4320:23;;:8;:13;4329:3;4320:13;;;;;;;;;;;;;;;;;;;;;:23;;;:31;;4350:1;4320:31;;;4346:1;4320:31;4313:38;;;;;;4273:78;4368:8;:13;4377:3;4368:13;;;;;;;;;;;:21;4382:6;4368:21;;;;;;;;;;;;;;;;4361:28;;4183:213;;;;;:::o;1319:273:2:-;1400:4;782:10;1437:26;;1421:42;;;:12;:42;;;;:102;;;;1302:10;1496:27;;1480:43;;;:12;:43;;;;1421:102;1417:145;;;1546:4;1539:11;;;;1417:145;1580:5;1573:12;;1319:273;;;;:::o;2910:1267:3:-;3087:3;3072:19;;:3;:19;;;;3064:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:7;;:14;;3141:4;;:11;;:29;3133:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:10;3347:19;;:5;:19;;;:66;;;;3409:4;3370:43;;:16;:23;3387:5;3370:23;;;;;;;;;;;;;;;:35;3394:10;3370:35;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;3347:66;3339:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3481:9;3493:1;3481:13;;3476:489;3500:4;;:11;;3496:1;:15;3476:489;;;3599:10;3612:4;;3617:1;3612:7;;;;;;;;;;;;;3599:20;;3633:13;3649:7;;3657:1;3649:10;;;;;;;;;;;;;3633:26;;3678:17;3692:2;3678:13;:17::i;:::-;3674:281;;;3739:5;3723:21;;:8;:12;3732:2;3723:12;;;;;;;;;;;;;;;;;;;;;:21;;;3715:30;;;;;;3778:3;3763:8;:12;3772:2;3763:12;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;3674:281;;;3842:30;3866:5;3842:8;:12;3851:2;3842:12;;;;;;;;;;;:19;3855:5;3842:19;;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;3820:8;:12;3829:2;3820:12;;;;;;;;;;;:19;3833:5;3820:19;;;;;;;;;;;;;;;:52;;;;3912:28;3922:8;:12;3931:2;3922:12;;;;;;;;;;;:17;3935:3;3922:17;;;;;;;;;;;;;;;;3912:5;:9;;:28;;;;:::i;:::-;3890:8;:12;3899:2;3890:12;;;;;;;;;;;:17;3903:3;3890:17;;;;;;;;;;;;;;;:50;;;;3674:281;3476:489;;3513:3;;;;;3476:489;;;;4013:3;3980:52;;4006:5;3980:52;;3994:10;3980:52;;;4018:4;;4024:7;;3980:52;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3980:52:3;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3980:52:3;;;;;;;;;;;;;;;;;4047:16;:3;:14;;;:16::i;:::-;4043:128;;;4079:81;4115:10;4127:5;4134:3;4139:4;;4079:81;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4079:81:3;;;;;;4145:7;;4079:81;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4079:81:3;;;;;;4154:5;;4079:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4079:81:3;;;;;;:35;:81::i;:::-;4043:128;2910:1267;;;;;;;;:::o;4402:567::-;4502:16;4557:4;;:11;;4539:7;;:14;;:29;4531:38;;;;;;4580:26;4623:7;;:14;;4609:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4609:29:3;;;;4580:58;;4654:9;4666:1;4654:13;;4649:287;4673:7;;:14;;4669:1;:18;4649:287;;;4708:10;4721:4;;4726:1;4721:7;;;;;;;;;;;;;4708:20;;4746:21;4764:2;4746:17;:21::i;:::-;4742:184;;;4818:7;;4826:1;4818:10;;;;;;;;;;;;;;;4802:26;;:8;:12;4811:2;4802:12;;;;;;;;;;;;;;;;;;;;;:26;;;:34;;4835:1;4802:34;;;4831:1;4802:34;4787:49;;:9;4797:1;4787:12;;;;;;;;;;;;;:49;;;;;4742:184;;;4887:8;:12;4896:2;4887:12;;;;;;;;;;;:24;4900:7;;4908:1;4900:10;;;;;;;;;;;;;;;4887:24;;;;;;;;;;;;;;;;4872:9;4882:1;4872:12;;;;;;;;;;;;;:39;;;;;4742:184;4649:287;4689:3;;;;;4649:287;;;;4953:9;4946:16;;;4402:567;;;;;;:::o;1449:215::-;1509:4;633:8;;1594:3;:17;:32;1593:64;;;;;1655:1;537:2;1638:13;;1632:3;:19;:24;;1593:64;1586:71;;1449:215;;;:::o;1669:97::-;1720:7;1746:8;:13;1755:3;1746:13;;;;;;;;;;;;;;;;;;;;;1739:20;;1669:97;;;:::o;1102:113::-;1167:7;433:3;425:2;409:20;;:27;;1193:3;:15;1186:22;;1102:113;;;:::o;1220:224::-;1284:4;633:8;;1374:3;:17;:32;1373:64;;;;;1435:1;537:2;1418:13;;1412:3;:19;:24;1373:64;1366:71;;1220:224;;;:::o;983:114::-;1045:7;537:2;1077:13;;1071:3;:19;1064:26;;983:114;;;:::o;8817:202:2:-;8940:9;8898:16;:28;8915:10;8898:28;;;;;;;;;;;;;;;:39;8927:9;8898:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8991:9;8964:48;;8979:10;8964:48;;;9002:9;8964:48;;;;;;;;;;;;;;;;;;;;;;8817:202;;:::o;873:105:3:-;926:4;970:1;633:8;949:3;:17;:22;942:29;;873:105;;;:::o;750:118::-;806:4;633:8;;829:3;:17;:32;822:39;;750:118;;;:::o;9298:149:2:-;9382:4;9405:16;:24;9422:6;9405:24;;;;;;;;;;;;;;;:35;9430:9;9405:35;;;;;;;;;;;;;;;;;;;;;;;;;9398:42;;9298:149;;;;:::o;1788:1100:3:-;1936:3;1921:19;;:3;:19;;;;1913:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:10;1990:19;;:5;:19;;;:66;;;;2052:4;2013:43;;:16;:23;2030:5;2013:23;;;;;;;;;;;;;;;:35;2037:10;2013:35;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;1990:66;1982:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:18;2137:3;2123:13;:18::i;:::-;2119:565;;;2182:5;2165:22;;:8;:13;2174:3;2165:13;;;;;;;;;;;;;;;;;;;;;:22;;;2157:31;;;;;;2218:3;2202:8;:13;2211:3;2202:13;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;2119:565;;;2574:32;2599:6;2574:8;:13;2583:3;2574:13;;;;;;;;;;;:20;2588:5;2574:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2551:8;:13;2560:3;2551:13;;;;;;;;;;;:20;2565:5;2551:20;;;;;;;;;;;;;;;:55;;;;2643:30;2666:6;2643:8;:13;2652:3;2643:13;;;;;;;;;;;:18;2657:3;2643:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;2620:8;:13;2629:3;2620:13;;;;;;;;;;;:18;2634:3;2620:18;;;;;;;;;;;;;;;:53;;;;2119:565;2733:3;2699:51;;2726:5;2699:51;;2714:10;2699:51;;;2738:3;2743:6;2699:51;;;;;;;;;;;;;;;;;;;;;;;;2765:16;:3;:14;;;:16::i;:::-;2761:121;;;2797:74;2828:10;2840:5;2847:3;2852;2857:6;2865:5;;2797:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2797:74:3;;;;;;:30;:74::i;:::-;2761:121;1788:1100;;;;;;:::o;1123:120:7:-;1181:7;1212:1;1207;:6;;1200:14;;;;1235:1;1231;:5;1224:12;;1123:120;;;;:::o;1313:137::-;1371:9;1400:1;1396;:5;1392:9;;1423:1;1418;:6;;1411:14;;;;1442:1;1435:8;;1313:137;;;;:::o;465:624:0:-;525:4;541:12;1048:7;1036:20;1028:28;;1081:1;1074:4;:8;1067:15;;;465:624;;;:::o;10688:1181:2:-;311:10:1;11773:22:2;;11681:114;;;11702:3;11681:48;;;11730:9;11741:5;11748:4;11754:7;11763:5;11681:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11681:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11681:88:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11681:88:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11681:88:2;;;;;;;;;;;;;;;;:114;;;;11673:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10688:1181;;;;;;:::o;9554:1128::-;164:10:1;10597:16:2;;10512:101;;;10533:3;10512:43;;;10556:9;10567:5;10574:3;10579:6;10587:5;10512:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10512:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10512:81:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10512:81:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10512:81:2;;;;;;;;;;;;;;;;:101;;;;10504:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9554:1128;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1651800",
								"executionCost": "1736",
								"totalCost": "1653536"
							},
							"external": {
								"balanceOf(address,uint256)": "1457",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"getNonFungibleBaseType(uint256)": "410",
								"getNonFungibleIndex(uint256)": "357",
								"isApprovedForAll(address,address)": "1435",
								"isFungible(uint256)": "346",
								"isNonFungible(uint256)": "368",
								"isNonFungibleBaseType(uint256)": "390",
								"isNonFungibleItem(uint256)": "415",
								"ownerOf(uint256)": "1293",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23228",
								"supportsInterface(bytes4)": "480"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "MSTORE"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "POP"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "DUP1"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "CODECOPY"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 247,
									"end": 4971,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207de3b308f663cc60c7e71dbbff35994de499daa31a25aba5db06e706953e08c464736f6c63430005110032",
									".code": [
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "POP"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "LT"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "SHR"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "7269A327"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "GT"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "ADEBF6F2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "GT"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "ADEBF6F2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "E44591F0"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "E985E9C5"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "F242432A"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMP"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "7269A327"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "9CCA1C64"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "A22CB465"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMP"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "GT"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "4E1273F4"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "5E81B958"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "6352211E"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "6F969C2D"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMP"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "FDD58E"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "2EB2C2D6"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "EQ"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "JUMPDEST"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 247,
											"end": 4971,
											"name": "REVERT"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMPDEST"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "ADD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "AND"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "ADD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP3"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "ADD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP3"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMPDEST"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "MLOAD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP3"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "MSTORE"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "ADD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "MLOAD"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "DUP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SUB"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP1"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "RETURN"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "NOT"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP3"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "RETURN"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "AND"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "AND"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "DUP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "ADD"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP2"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP3"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP4"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "SWAP1"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "STOP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 101,
											"end": 110,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 97,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 98,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 111,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 119,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 134,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "JUMPDEST"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MLOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SUB"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MSTORE"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MLOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MSTORE"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MLOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MUL"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "ADD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP3"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "MLOAD"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP2"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SUB"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP1"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "RETURN"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "JUMPDEST"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ADD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ADD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP3"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "JUMPDEST"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "MLOAD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP3"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ISZERO"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "MSTORE"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "ADD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "MLOAD"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "DUP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SUB"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "RETURN"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "JUMPDEST"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "ADD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "ADD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP3"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "JUMPDEST"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "MLOAD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP3"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "AND"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "AND"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "MSTORE"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "ADD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "MLOAD"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "DUP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SUB"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "RETURN"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "ADD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "ADD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP3"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "MLOAD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP3"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "MSTORE"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "ADD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "MLOAD"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SUB"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "RETURN"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP3"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP3"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ISZERO"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ISZERO"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ISZERO"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ISZERO"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "MSTORE"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "MLOAD"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SUB"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "RETURN"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP3"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SUB"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "RETURN"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "AND"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ISZERO"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ISZERO"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "STOP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP3"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "JUMPDEST"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "MLOAD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP3"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "MSTORE"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "ADD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "MLOAD"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SUB"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "RETURN"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP3"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "MLOAD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP3"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ISZERO"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ISZERO"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ISZERO"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ISZERO"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "MSTORE"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "MLOAD"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "DUP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SUB"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "RETURN"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ISZERO"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MSTORE"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "MLOAD"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "DUP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SUB"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "RETURN"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP4"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP3"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP4"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "STOP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMPDEST"
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4295,
											"end": 4298,
											"name": "DUP3"
										},
										{
											"begin": 4277,
											"end": 4294,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "JUMPDEST"
										},
										{
											"begin": 4273,
											"end": 4351,
											"name": "ISZERO"
										},
										{
											"begin": 4273,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4273,
											"end": 4351,
											"name": "JUMPI"
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "DUP3"
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "AND"
										},
										{
											"begin": 4320,
											"end": 4328,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4332,
											"name": "DUP5"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "SWAP1"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "DUP2"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "MSTORE"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "ADD"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "KECCAK256"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "SWAP1"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "SLOAD"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "SWAP1"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "EXP"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "SWAP1"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "DIV"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4320,
											"end": 4333,
											"name": "AND"
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "AND"
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "EQ"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "JUMPI"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "JUMP"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "JUMPDEST"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 4320,
											"end": 4351,
											"name": "JUMPDEST"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "AND"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "SWAP1"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "POP"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 4313,
											"end": 4351,
											"name": "JUMP"
										},
										{
											"begin": 4273,
											"end": 4351,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 4273,
											"end": 4351,
											"name": "JUMPDEST"
										},
										{
											"begin": 4368,
											"end": 4376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "DUP1"
										},
										{
											"begin": 4377,
											"end": 4380,
											"name": "DUP4"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "MSTORE"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "ADD"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "SWAP1"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "MSTORE"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "ADD"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "KECCAK256"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP5"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "KECCAK256"
										},
										{
											"begin": 4368,
											"end": 4389,
											"name": "SLOAD"
										},
										{
											"begin": 4361,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4361,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMPDEST"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP3"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "SWAP2"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "POP"
										},
										{
											"begin": 4183,
											"end": 4396,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 792,
											"name": "PUSH",
											"value": "1FFC9A7"
										},
										{
											"begin": 1437,
											"end": 1463,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1437,
											"end": 1463,
											"name": "SHL"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "NOT"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "NOT"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1421,
											"end": 1463,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "JUMPI"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "POP"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "PUSH",
											"value": "D9B67A26"
										},
										{
											"begin": 1496,
											"end": 1523,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1496,
											"end": 1523,
											"name": "SHL"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "NOT"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "AND"
										},
										{
											"begin": 1480,
											"end": 1492,
											"name": "DUP3"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "NOT"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "AND"
										},
										{
											"begin": 1480,
											"end": 1523,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1421,
											"end": 1523,
											"name": "JUMPDEST"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "ISZERO"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "JUMPI"
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "SWAP1"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "JUMP"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1417,
											"end": 1562,
											"name": "JUMPDEST"
										},
										{
											"begin": 1580,
											"end": 1585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1585,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1585,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMPDEST"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1319,
											"end": 1592,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "JUMPDEST"
										},
										{
											"begin": 3087,
											"end": 3090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "AND"
										},
										{
											"begin": 3072,
											"end": 3075,
											"name": "DUP8"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "AND"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "EQ"
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "ISZERO"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "JUMPI"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MLOAD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MSTORE"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "ADD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP1"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP1"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "ADD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP3"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SUB"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP3"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MSTORE"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MSTORE"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "ADD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP1"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "63616E6E6F742073656E6420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MSTORE"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "ADD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "MLOAD"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "DUP1"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP2"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SUB"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP1"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "REVERT"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "JUMPDEST"
										},
										{
											"begin": 3156,
											"end": 3163,
											"name": "DUP4"
										},
										{
											"begin": 3156,
											"end": 3163,
											"name": "DUP4"
										},
										{
											"begin": 3156,
											"end": 3170,
											"name": "SWAP1"
										},
										{
											"begin": 3156,
											"end": 3170,
											"name": "POP"
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "DUP7"
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "DUP7"
										},
										{
											"begin": 3141,
											"end": 3152,
											"name": "SWAP1"
										},
										{
											"begin": 3141,
											"end": 3152,
											"name": "POP"
										},
										{
											"begin": 3141,
											"end": 3170,
											"name": "EQ"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "JUMPI"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP3"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "SUB"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP3"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "4172726179206C656E677468206D757374206D61746368000000000000000000"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "SUB"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "SWAP1"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "REVERT"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3133,
											"end": 3198,
											"name": "JUMPDEST"
										},
										{
											"begin": 3356,
											"end": 3366,
											"name": "CALLER"
										},
										{
											"begin": 3347,
											"end": 3366,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3366,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "DUP9"
										},
										{
											"begin": 3347,
											"end": 3366,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3366,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3366,
											"name": "EQ"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "JUMPI"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "POP"
										},
										{
											"begin": 3409,
											"end": 3413,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3370,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3370,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3370,
											"end": 3386,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3392,
											"name": "DUP11"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "CALLER"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "SLOAD"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "EXP"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "DIV"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3370,
											"end": 3405,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3370,
											"end": 3413,
											"name": "ISZERO"
										},
										{
											"begin": 3370,
											"end": 3413,
											"name": "EQ"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 3347,
											"end": 3413,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "JUMPI"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH data",
											"value": "849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "CODECOPY"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "POP"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "REVERT"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3339,
											"end": 3465,
											"name": "JUMPDEST"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "DUP1"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "SWAP1"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "POP"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "JUMPDEST"
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "DUP7"
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "DUP7"
										},
										{
											"begin": 3500,
											"end": 3511,
											"name": "SWAP1"
										},
										{
											"begin": 3500,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "DUP2"
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "LT"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "ISZERO"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "JUMPI"
										},
										{
											"begin": 3599,
											"end": 3609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "DUP8"
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "DUP8"
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "DUP4"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP2"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP2"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "LT"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "JUMPI"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "INVALID"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "JUMPDEST"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "SWAP1"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "POP"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "MUL"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "ADD"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3599,
											"end": 3619,
											"name": "SWAP1"
										},
										{
											"begin": 3599,
											"end": 3619,
											"name": "POP"
										},
										{
											"begin": 3633,
											"end": 3646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP7"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP7"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "DUP2"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "LT"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "JUMPI"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "INVALID"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "SWAP1"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "POP"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "MUL"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "ADD"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3633,
											"end": 3659,
											"name": "SWAP1"
										},
										{
											"begin": 3633,
											"end": 3659,
											"name": "POP"
										},
										{
											"begin": 3678,
											"end": 3695,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "DUP3"
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3678,
											"end": 3695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3695,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3678,
											"end": 3695,
											"name": "JUMPDEST"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "ISZERO"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "JUMPI"
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "DUP11"
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "AND"
										},
										{
											"begin": 3723,
											"end": 3731,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3734,
											"name": "DUP5"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "DUP2"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "MSTORE"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "ADD"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "DUP2"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "MSTORE"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "ADD"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "KECCAK256"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "SLOAD"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "EXP"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "DIV"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "AND"
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "AND"
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "EQ"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "JUMPI"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "DUP1"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "REVERT"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 3715,
											"end": 3745,
											"name": "JUMPDEST"
										},
										{
											"begin": 3778,
											"end": 3781,
											"name": "DUP10"
										},
										{
											"begin": 3763,
											"end": 3771,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "DUP5"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "DUP2"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "MSTORE"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "ADD"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "SWAP1"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "DUP2"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "MSTORE"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "ADD"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "KECCAK256"
										},
										{
											"begin": 3763,
											"end": 3775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "EXP"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "SLOAD"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "DUP2"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "MUL"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "NOT"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "DUP4"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "MUL"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "OR"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "SSTORE"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "JUMP"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "JUMPDEST"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP2"
										},
										{
											"begin": 3842,
											"end": 3850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "DUP1"
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "DUP6"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "DUP2"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "MSTORE"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "DUP2"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "MSTORE"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "KECCAK256"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3860,
											"name": "DUP15"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "AND"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "AND"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "DUP2"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "MSTORE"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "ADD"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "DUP2"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "MSTORE"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "ADD"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "KECCAK256"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "SLOAD"
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SWAP2"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "AND"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 3842,
											"end": 3872,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 3828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "DUP1"
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "DUP5"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3832,
											"name": "KECCAK256"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3838,
											"name": "DUP14"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3839,
											"name": "KECCAK256"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "SSTORE"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "POP"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 3922,
											"end": 3930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "DUP1"
										},
										{
											"begin": 3931,
											"end": 3933,
											"name": "DUP5"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "SWAP1"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "KECCAK256"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "DUP13"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "AND"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "AND"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "SWAP1"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "KECCAK256"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "SLOAD"
										},
										{
											"begin": 3912,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "SWAP1"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "SWAP2"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "SWAP1"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "AND"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 3912,
											"end": 3940,
											"name": "JUMPDEST"
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "DUP1"
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "DUP5"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "DUP2"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "MSTORE"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "ADD"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "SWAP1"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "DUP2"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "MSTORE"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "ADD"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "KECCAK256"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "DUP13"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "DUP2"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "ADD"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "DUP2"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "ADD"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "KECCAK256"
										},
										{
											"begin": 3890,
											"end": 3940,
											"name": "DUP2"
										},
										{
											"begin": 3890,
											"end": 3940,
											"name": "SWAP1"
										},
										{
											"begin": 3890,
											"end": 3940,
											"name": "SSTORE"
										},
										{
											"begin": 3890,
											"end": 3940,
											"name": "POP"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3674,
											"end": 3955,
											"name": "JUMPDEST"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "POP"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "POP"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP1"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "ADD"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "SWAP1"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "POP"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "JUMP"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "JUMPDEST"
										},
										{
											"begin": 3476,
											"end": 3965,
											"name": "POP"
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP7"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "AND"
										},
										{
											"begin": 4006,
											"end": 4011,
											"name": "DUP9"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "AND"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "AND"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "DUP10"
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "DUP10"
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP10"
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP10"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MLOAD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP1"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP1"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "ADD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP1"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "ADD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP4"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SUB"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP4"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MSTORE"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP8"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP8"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP3"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MSTORE"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "ADD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SWAP3"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP4"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SUB"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP3"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MSTORE"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP6"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP6"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP3"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MSTORE"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "ADD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SWAP3"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SWAP7"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "MLOAD"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "DUP1"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SWAP2"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SUB"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "SWAP1"
										},
										{
											"begin": 3980,
											"end": 4032,
											"name": "LOG4"
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "DUP8"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "AND"
										},
										{
											"begin": 4047,
											"end": 4061,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "JUMPDEST"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "ISZERO"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "JUMPI"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4115,
											"end": 4125,
											"name": "CALLER"
										},
										{
											"begin": 4127,
											"end": 4132,
											"name": "DUP10"
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "DUP10"
										},
										{
											"begin": 4139,
											"end": 4143,
											"name": "DUP10"
										},
										{
											"begin": 4139,
											"end": 4143,
											"name": "DUP10"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MUL"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MLOAD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP3"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4145,
											"end": 4152,
											"name": "DUP9"
										},
										{
											"begin": 4145,
											"end": 4152,
											"name": "DUP9"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MUL"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MLOAD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP3"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP8"
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "DUP8"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DIV"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MUL"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MLOAD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP3"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "SWAP1"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP2"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "MSTORE"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "ADD"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "POP"
										},
										{
											"begin": 4079,
											"end": 4114,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4079,
											"end": 4160,
											"name": "JUMPDEST"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4043,
											"end": 4171,
											"name": "JUMPDEST"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "POP"
										},
										{
											"begin": 2910,
											"end": 4177,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "JUMPDEST"
										},
										{
											"begin": 4502,
											"end": 4518,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4557,
											"end": 4561,
											"name": "DUP3"
										},
										{
											"begin": 4557,
											"end": 4561,
											"name": "DUP3"
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "SWAP1"
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "POP"
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP6"
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP6"
										},
										{
											"begin": 4539,
											"end": 4553,
											"name": "SWAP1"
										},
										{
											"begin": 4539,
											"end": 4553,
											"name": "POP"
										},
										{
											"begin": 4539,
											"end": 4568,
											"name": "EQ"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "JUMPI"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "DUP1"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "REVERT"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 4531,
											"end": 4569,
											"name": "JUMPDEST"
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4623,
											"end": 4630,
											"name": "DUP6"
										},
										{
											"begin": 4623,
											"end": 4630,
											"name": "DUP6"
										},
										{
											"begin": 4623,
											"end": 4637,
											"name": "SWAP1"
										},
										{
											"begin": 4623,
											"end": 4637,
											"name": "POP"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "MLOAD"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP3"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "MSTORE"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "MUL"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP3"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "MSTORE"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "ISZERO"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "JUMPI"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "DUP2"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "JUMPDEST"
										},
										{
											"begin": 4609,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4580,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4580,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "DUP1"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "SWAP1"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "JUMPDEST"
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "DUP7"
										},
										{
											"begin": 4673,
											"end": 4680,
											"name": "DUP7"
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "SWAP1"
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "POP"
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "DUP2"
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "LT"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "ISZERO"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "JUMPI"
										},
										{
											"begin": 4708,
											"end": 4718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4725,
											"name": "DUP6"
										},
										{
											"begin": 4721,
											"end": 4725,
											"name": "DUP6"
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "DUP4"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "LT"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "JUMPI"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "INVALID"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "JUMPDEST"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "MUL"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4708,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "DUP2"
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "JUMPDEST"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "JUMPI"
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "DUP8"
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "DUP8"
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "DUP4"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "DUP2"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "DUP2"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "LT"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "JUMPI"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "INVALID"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "JUMPDEST"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "SWAP1"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "POP"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "MUL"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "ADD"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "AND"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "AND"
										},
										{
											"begin": 4802,
											"end": 4810,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "DUP4"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "DUP2"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "MSTORE"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "ADD"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "SWAP1"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "DUP2"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "MSTORE"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "ADD"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "KECCAK256"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "SWAP1"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "SLOAD"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "SWAP1"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "EXP"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "SWAP1"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "DIV"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "AND"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "AND"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "EQ"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "JUMPI"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "JUMP"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "AND"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP4"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "DUP4"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "MLOAD"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "LT"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "JUMPI"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "INVALID"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "JUMPDEST"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "MUL"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "ADD"
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "ADD"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4787,
											"end": 4836,
											"name": "POP"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "JUMP"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4887,
											"end": 4895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "DUP1"
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP3"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "DUP2"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "MSTORE"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "ADD"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "SWAP1"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "DUP2"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "MSTORE"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "ADD"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "KECCAK256"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP10"
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP10"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP6"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "DUP2"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "DUP2"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "LT"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "JUMPI"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "INVALID"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "JUMPDEST"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "SWAP1"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "POP"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "MUL"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "ADD"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "AND"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "AND"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "AND"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "MSTORE"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "SWAP1"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "MSTORE"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "ADD"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "KECCAK256"
										},
										{
											"begin": 4887,
											"end": 4911,
											"name": "SLOAD"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP4"
										},
										{
											"begin": 4882,
											"end": 4883,
											"name": "DUP4"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "DUP2"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "MLOAD"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "DUP2"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "LT"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "JUMPI"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "INVALID"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "JUMPDEST"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "MUL"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "ADD"
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "ADD"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP2"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "POP"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 4742,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "POP"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "DUP1"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "ADD"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "SWAP1"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "JUMP"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4936,
											"name": "POP"
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "DUP1"
										},
										{
											"begin": 4946,
											"end": 4962,
											"name": "SWAP2"
										},
										{
											"begin": 4946,
											"end": 4962,
											"name": "POP"
										},
										{
											"begin": 4946,
											"end": 4962,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP5"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "SWAP4"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "POP"
										},
										{
											"begin": 4402,
											"end": 4969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "JUMPDEST"
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "PUSH",
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "DUP4"
										},
										{
											"begin": 1594,
											"end": 1611,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1626,
											"name": "EQ"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "DUP1"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "ISZERO"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "JUMPI"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "POP"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1638,
											"end": 1651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1638,
											"end": 1651,
											"name": "AND"
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "DUP4"
										},
										{
											"begin": 1632,
											"end": 1651,
											"name": "AND"
										},
										{
											"begin": 1632,
											"end": 1656,
											"name": "EQ"
										},
										{
											"begin": 1632,
											"end": 1656,
											"name": "ISZERO"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 1593,
											"end": 1657,
											"name": "JUMPDEST"
										},
										{
											"begin": 1586,
											"end": 1657,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1657,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP2"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "SWAP1"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "POP"
										},
										{
											"begin": 1449,
											"end": 1664,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "JUMPDEST"
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP4"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "DUP2"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "MSTORE"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "ADD"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "DUP2"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "MSTORE"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "ADD"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "KECCAK256"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "SLOAD"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "EXP"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "DIV"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1759,
											"name": "AND"
										},
										{
											"begin": 1739,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1739,
											"end": 1759,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP2"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "POP"
										},
										{
											"begin": 1669,
											"end": 1766,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 433,
											"end": 436,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 425,
											"end": 427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 429,
											"name": "AND"
										},
										{
											"begin": 409,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 409,
											"end": 436,
											"name": "SHL"
										},
										{
											"begin": 1193,
											"end": 1196,
											"name": "DUP3"
										},
										{
											"begin": 1193,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "PUSH",
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "DUP4"
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "AND"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "EQ"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "DUP1"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "ISZERO"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "JUMPI"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "POP"
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1412,
											"end": 1415,
											"name": "DUP4"
										},
										{
											"begin": 1412,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1412,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 1373,
											"end": 1437,
											"name": "JUMPDEST"
										},
										{
											"begin": 1366,
											"end": 1437,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1437,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1220,
											"end": 1444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP3"
										},
										{
											"begin": 1071,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1097,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMPDEST"
										},
										{
											"begin": 8940,
											"end": 8949,
											"name": "DUP1"
										},
										{
											"begin": 8898,
											"end": 8914,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8925,
											"name": "CALLER"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8926,
											"name": "KECCAK256"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8936,
											"name": "DUP5"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "MSTORE"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "ADD"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "KECCAK256"
										},
										{
											"begin": 8898,
											"end": 8937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "EXP"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SLOAD"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP2"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "MUL"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "NOT"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "AND"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP4"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "ISZERO"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "ISZERO"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "MUL"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "OR"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SWAP1"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "SSTORE"
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "POP"
										},
										{
											"begin": 8991,
											"end": 9000,
											"name": "DUP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "AND"
										},
										{
											"begin": 8979,
											"end": 8989,
											"name": "CALLER"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "AND"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 9002,
											"end": 9011,
											"name": "DUP4"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MLOAD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP3"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ISZERO"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MSTORE"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "ADD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "POP"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "POP"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "MLOAD"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "DUP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP2"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SUB"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "SWAP1"
										},
										{
											"begin": 8964,
											"end": 9012,
											"name": "LOG3"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8817,
											"end": 9019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "JUMPDEST"
										},
										{
											"begin": 926,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "PUSH",
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 949,
											"end": 966,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 971,
											"name": "EQ"
										},
										{
											"begin": 942,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 971,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP2"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 873,
											"end": 978,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "PUSH",
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 633,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "DUP4"
										},
										{
											"begin": 829,
											"end": 846,
											"name": "AND"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "EQ"
										},
										{
											"begin": 822,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 861,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP2"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 868,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMPDEST"
										},
										{
											"begin": 9382,
											"end": 9386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9421,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9428,
											"name": "DUP5"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9429,
											"name": "KECCAK256"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP4"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DUP2"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "MSTORE"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "ADD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "KECCAK256"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SLOAD"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "EXP"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "DIV"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9405,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9398,
											"end": 9440,
											"name": "SWAP1"
										},
										{
											"begin": 9398,
											"end": 9440,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP3"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "SWAP2"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "POP"
										},
										{
											"begin": 9298,
											"end": 9447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1924,
											"name": "DUP6"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "EQ"
										},
										{
											"begin": 1921,
											"end": 1940,
											"name": "ISZERO"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "JUMPI"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP3"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "SUB"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP3"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "63616E6E6F742073656E6420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MSTORE"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "ADD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "POP"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "MLOAD"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "DUP1"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "SWAP2"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "SUB"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "SWAP1"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "REVERT"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1913,
											"end": 1972,
											"name": "JUMPDEST"
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "CALLER"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "AND"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP7"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "AND"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "EQ"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "DUP1"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "JUMPI"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2029,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2035,
											"name": "DUP9"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "MSTORE"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "MSTORE"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "KECCAK256"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2047,
											"name": "CALLER"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "MSTORE"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "MSTORE"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "ADD"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "KECCAK256"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "SLOAD"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "EXP"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "DIV"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2013,
											"end": 2048,
											"name": "AND"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "ISZERO"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "EQ"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 1990,
											"end": 2056,
											"name": "JUMPDEST"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "JUMPI"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "MLOAD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP3"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SUB"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP3"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "MSTORE"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH data",
											"value": "849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "CODECOPY"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "ADD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "POP"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "POP"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "MLOAD"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SWAP2"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SUB"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "REVERT"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 1982,
											"end": 2108,
											"name": "JUMPDEST"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "DUP5"
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "JUMPDEST"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "JUMPI"
										},
										{
											"begin": 2182,
											"end": 2187,
											"name": "DUP6"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2173,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2177,
											"name": "DUP7"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DUP2"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "MSTORE"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DUP2"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "MSTORE"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "KECCAK256"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SLOAD"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "EXP"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DIV"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "EQ"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "JUMPI"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "DUP1"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "REVERT"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2157,
											"end": 2188,
											"name": "JUMPDEST"
										},
										{
											"begin": 2218,
											"end": 2221,
											"name": "DUP5"
										},
										{
											"begin": 2202,
											"end": 2210,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP7"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "KECCAK256"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "EXP"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SLOAD"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "MUL"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "NOT"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DUP4"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "MUL"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "OR"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SSTORE"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "POP"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "JUMP"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "DUP4"
										},
										{
											"begin": 2574,
											"end": 2582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "DUP1"
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP8"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "MSTORE"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "MSTORE"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "KECCAK256"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP10"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "AND"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "AND"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "MSTORE"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "MSTORE"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "KECCAK256"
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "SLOAD"
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2574,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "AND"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "JUMPDEST"
										},
										{
											"begin": 2551,
											"end": 2559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "DUP1"
										},
										{
											"begin": 2560,
											"end": 2563,
											"name": "DUP7"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "MSTORE"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "ADD"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "SWAP1"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "MSTORE"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "ADD"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "KECCAK256"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP9"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "MSTORE"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "MSTORE"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "KECCAK256"
										},
										{
											"begin": 2551,
											"end": 2606,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2606,
											"name": "SWAP1"
										},
										{
											"begin": 2551,
											"end": 2606,
											"name": "SSTORE"
										},
										{
											"begin": 2551,
											"end": 2606,
											"name": "POP"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 2666,
											"end": 2672,
											"name": "DUP4"
										},
										{
											"begin": 2643,
											"end": 2651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "DUP8"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "SWAP1"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "DUP2"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "MSTORE"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "ADD"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "KECCAK256"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "DUP9"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "AND"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "AND"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "DUP2"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "MSTORE"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "ADD"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "SWAP1"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "DUP2"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "MSTORE"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "ADD"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "KECCAK256"
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "SLOAD"
										},
										{
											"begin": 2643,
											"end": 2665,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2643,
											"end": 2665,
											"name": "SWAP1"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "SWAP2"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "SWAP1"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "AND"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 2643,
											"end": 2673,
											"name": "JUMPDEST"
										},
										{
											"begin": 2620,
											"end": 2628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "DUP1"
										},
										{
											"begin": 2629,
											"end": 2632,
											"name": "DUP7"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "DUP2"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "MSTORE"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "ADD"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "SWAP1"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "DUP2"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "MSTORE"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "ADD"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "KECCAK256"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2637,
											"name": "DUP8"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "AND"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "AND"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "DUP2"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "MSTORE"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "ADD"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "SWAP1"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "DUP2"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "MSTORE"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "ADD"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2638,
											"name": "KECCAK256"
										},
										{
											"begin": 2620,
											"end": 2673,
											"name": "DUP2"
										},
										{
											"begin": 2620,
											"end": 2673,
											"name": "SWAP1"
										},
										{
											"begin": 2620,
											"end": 2673,
											"name": "SSTORE"
										},
										{
											"begin": 2620,
											"end": 2673,
											"name": "POP"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 2119,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2733,
											"end": 2736,
											"name": "DUP5"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "AND"
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP7"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "AND"
										},
										{
											"begin": 2714,
											"end": 2724,
											"name": "CALLER"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 2738,
											"end": 2741,
											"name": "DUP8"
										},
										{
											"begin": 2743,
											"end": 2749,
											"name": "DUP8"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "MLOAD"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP1"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP4"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP3"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP2"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "MSTORE"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "ADD"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "SWAP3"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "POP"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "POP"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "POP"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "MLOAD"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "DUP1"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "SWAP2"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "SUB"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "SWAP1"
										},
										{
											"begin": 2699,
											"end": 2750,
											"name": "LOG4"
										},
										{
											"begin": 2765,
											"end": 2781,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP6"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "AND"
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2765,
											"end": 2781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2765,
											"end": 2781,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2765,
											"end": 2781,
											"name": "JUMPDEST"
										},
										{
											"begin": 2761,
											"end": 2882,
											"name": "ISZERO"
										},
										{
											"begin": 2761,
											"end": 2882,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2761,
											"end": 2882,
											"name": "JUMPI"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 2828,
											"end": 2838,
											"name": "CALLER"
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "DUP8"
										},
										{
											"begin": 2847,
											"end": 2850,
											"name": "DUP8"
										},
										{
											"begin": 2852,
											"end": 2855,
											"name": "DUP8"
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP8"
										},
										{
											"begin": 2865,
											"end": 2870,
											"name": "DUP8"
										},
										{
											"begin": 2865,
											"end": 2870,
											"name": "DUP8"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "ADD"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP2"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DIV"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "MUL"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "ADD"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "MLOAD"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP2"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "ADD"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "MSTORE"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP4"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP3"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP2"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "SWAP1"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP2"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP2"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "MSTORE"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "ADD"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP4"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "POP"
										},
										{
											"begin": 2797,
											"end": 2827,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 2797,
											"end": 2871,
											"name": "JUMPDEST"
										},
										{
											"begin": 2761,
											"end": 2882,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 2761,
											"end": 2882,
											"name": "JUMPDEST"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 1788,
											"end": 2888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "GT"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "ISZERO"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "JUMPI"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "INVALID"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "DUP2"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP4"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "SUB"
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "SWAP1"
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "SWAP2"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1123,
											"end": 1243,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "JUMPDEST"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP4"
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP3"
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "LT"
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "ISZERO"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "JUMPI"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "INVALID"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "SWAP1"
										},
										{
											"begin": 1435,
											"end": 1443,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "SWAP3"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "SWAP2"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1055,
											"name": "DUP3"
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1028,
											"end": 1056,
											"name": "SWAP1"
										},
										{
											"begin": 1028,
											"end": 1056,
											"name": "POP"
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1078,
											"name": "DUP2"
										},
										{
											"begin": 1074,
											"end": 1082,
											"name": "GT"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "SWAP2"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 1089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 321,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 11773,
											"end": 11795,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11773,
											"end": 11795,
											"name": "SHL"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "AND"
										},
										{
											"begin": 11702,
											"end": 11705,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11729,
											"name": "PUSH",
											"value": "BC197C81"
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP9"
										},
										{
											"begin": 11741,
											"end": 11746,
											"name": "DUP9"
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "DUP8"
										},
										{
											"begin": 11754,
											"end": 11761,
											"name": "DUP8"
										},
										{
											"begin": 11763,
											"end": 11768,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SHL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP6"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MUL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP7"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MUL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP5"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP6"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "JUMPI"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "EXP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MSTORE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP9"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP4"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SUB"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP8"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "GAS"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "CALL"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "DUP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "MLOAD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "ADD"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP3"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP2"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "SWAP1"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11769,
											"name": "POP"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "NOT"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "AND"
										},
										{
											"begin": 11681,
											"end": 11795,
											"name": "EQ"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "JUMPI"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP3"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP3"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MSTORE"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH data",
											"value": "907B1BC15E21FE4233C673581AF2CF868CD5FA614B6015B432FF41FBC0222BAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "CODECOPY"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "ADD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "POP"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "MLOAD"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "DUP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP2"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SUB"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "SWAP1"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "REVERT"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 11673,
											"end": 11862,
											"name": "JUMPDEST"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "POP"
										},
										{
											"begin": 10688,
											"end": 11869,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 10597,
											"end": 10613,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10597,
											"end": 10613,
											"name": "SHL"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "AND"
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "DUP5"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10555,
											"name": "PUSH",
											"value": "F23A6E61"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP9"
										},
										{
											"begin": 10567,
											"end": 10572,
											"name": "DUP9"
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "DUP8"
										},
										{
											"begin": 10579,
											"end": 10585,
											"name": "DUP8"
										},
										{
											"begin": 10587,
											"end": 10592,
											"name": "DUP8"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SHL"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP6"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP5"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "JUMPI"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "EXP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP7"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP4"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SUB"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP8"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "GAS"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "CALL"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "DUP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "MLOAD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "ADD"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP3"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10593,
											"name": "POP"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "NOT"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "AND"
										},
										{
											"begin": 10512,
											"end": 10613,
											"name": "EQ"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "JUMPI"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MLOAD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP3"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SUB"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP3"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MSTORE"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH data",
											"value": "EF98AF68C848ABC187FBA39B58082936B9DE327B8B5FD25AACD07D63C4D89E42"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "CODECOPY"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "ADD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "POP"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "POP"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "MLOAD"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "DUP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP2"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SUB"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "SWAP1"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "REVERT"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 10504,
											"end": 10675,
											"name": "JUMPDEST"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "POP"
										},
										{
											"begin": 9554,
											"end": 10682,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"849B4236B9CC0954DC0E729AB0ED3552779085D502D2B1DAD4E899FD8211D4BE": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
										"907B1BC15E21FE4233C673581AF2CF868CD5FA614B6015B432FF41FBC0222BAD": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564",
										"EF98AF68C848ABC187FBA39B58082936B9DE327B8B5FD25AACD07D63C4D89E42": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"getNonFungibleBaseType(uint256)": "6f969c2d",
							"getNonFungibleIndex(uint256)": "9cca1c64",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isFungible(uint256)": "adebf6f2",
							"isNonFungible(uint256)": "e44591f0",
							"isNonFungibleBaseType(uint256)": "7269a327",
							"isNonFungibleItem(uint256)": "5e81b958",
							"ownerOf(uint256)": "6352211e",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getNonFungibleBaseType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getNonFungibleIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isFungible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isNonFungible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isNonFungibleBaseType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isNonFungibleItem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension to ERC1155 for Mixed Fungible and Non-Fungible Items support The main benefit is sharing of common type information, just like you do when creating a fungible id.\",\"methods\":{\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}}}},\"userdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MixedFungible.sol\":\"ERC1155MixedFungible\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x016260fe1d6f563acefd8adb335b05e569b4026e3f8d472c3e855412debb83de\",\"urls\":[\"bzz-raw://701be90d29a315d87757399639b99315e37db64fd8e2157b27888061edebb7ca\",\"dweb:/ipfs/QmfLFj4eVtsF3V3LaxyKe6ZaGkwpR8ip1NV44WaHQ3BV1g\"]},\"contracts/Common.sol\":{\"keccak256\":\"0x900d50cdfedbcf60e9e1ef727674ead98b35abf5a01714ed285989d410c01db8\",\"urls\":[\"bzz-raw://9903b443608607b5f94e85f77d35528baf9adb8c7acc70bc0818437a251f4c8b\",\"dweb:/ipfs/QmRHVoDnjh7ihKZJCXbsVwMEodGEtKBE1wJcvxqkqec2R2\"]},\"contracts/ERC1155.sol\":{\"keccak256\":\"0x3d273a8248dcec646a318c1e3a03a153ac03ac321a9ad675947d43e669342451\",\"urls\":[\"bzz-raw://d8fa0eab51c61e285f1bb6303746af1e1eab511a89ae9144392e37e2ae547b3e\",\"dweb:/ipfs/QmR2nEYeUQUxyrkkNfnwgvSbYi6b5xKVq34NtH8mF83wRd\"]},\"contracts/ERC1155MixedFungible.sol\":{\"keccak256\":\"0x27238a690b2a5c0330fab6c6b9c35ed1846a6cf0f668edd42a075478c8b38c34\",\"urls\":[\"bzz-raw://f18164e0c8184f9582d4f951af00500e5542089662c5cddf429b9fa05066d35b\",\"dweb:/ipfs/QmXMRyzcGL4TK1hLnQWUHKbqDwyYtruAzDHjMZm8kM2VQM\"]},\"contracts/ERC165.sol\":{\"keccak256\":\"0x70660c2c79f0ce447bf70065ef2d3762e0e87198879c2f6fbe75f04b25dd1ddd\",\"urls\":[\"bzz-raw://a4708cdc3840887ec63c82fdf9e2d74fec8b811ccdff18a04a07e15837221b70\",\"dweb:/ipfs/QmYQAbcWu8jREJg3S2ZqeRNCCp6su2ysqgzDTUYAdrvWfc\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3afca766825d028e9de27b09a0165887653a5c808bbb7fd5c1fb3507652c5bf6\",\"urls\":[\"bzz-raw://027390d281f19afee178af8bfaaf0e622e8b6a22ef96abe5899dc2421457b730\",\"dweb:/ipfs/QmZnw3VewsnoLja6BbmAFcCV9AakLFG4vJaeq8VriJMRJZ\"]},\"contracts/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x9a17debe190dd4ef63e25ead5884cdfc60a954bde410444123f1e1fedb563ba3\",\"urls\":[\"bzz-raw://832d87678d57f664e60ba4231d0db4592e9e899d25844d06dd60a213aacd68e9\",\"dweb:/ipfs/QmTDHy4nZgeiTFgELZb4nZPSsE44UEHHtouLspvdzK9sMb\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xb6b65a22ef7f6aabecc727a68ecaf25ff8bd381769f1eb34ab8d8bf11bc159ec\",\"urls\":[\"bzz-raw://1ec48f7930d1df622d823386118708d738c5f7c31ee499f8e1a1f204de4de10e\",\"dweb:/ipfs/QmSeNFHGDUn1Wx4opcgn3hz1HWn1BSzsWdsCkf7UKDV5kE\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens."
							}
						}
					}
				}
			},
			"contracts/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"title": "ERC165"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"title\":\"ERC165\"},\"userdoc\":{\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC165.sol\":{\"keccak256\":\"0x70660c2c79f0ce447bf70065ef2d3762e0e87198879c2f6fbe75f04b25dd1ddd\",\"urls\":[\"bzz-raw://a4708cdc3840887ec63c82fdf9e2d74fec8b811ccdff18a04a07e15837221b70\",\"dweb:/ipfs/QmYQAbcWu8jREJg3S2ZqeRNCCp6su2ysqgzDTUYAdrvWfc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						}
					}
				}
			},
			"contracts/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md Note: The ERC-165 identifier for this interface is 0xd9b67a26.",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"return": "The _owner's balance of the Token type requested"
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"return": "True if the operator is approved, false if not"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"_data": "Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`",
									"_from": "Source address",
									"_ids": "IDs of each token type (order and length must match _values array)",
									"_to": "Target address",
									"_values": "Transfer amounts per token type (order and length must match _ids array)"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"_data": "Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address",
									"_value": "Transfer amount"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							}
						},
						"title": "ERC-1155 Multi Token Standard"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md Note: The ERC-165 identifier for this interface is 0xd9b67a26.\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"_data\":\"Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\",\"_from\":\"Source address\",\"_ids\":\"IDs of each token type (order and length must match _values array)\",\"_to\":\"Target address\",\"_values\":\"Transfer amounts per token type (order and length must match _ids array)\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"_data\":\"Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\",\"_value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}}},\"title\":\"ERC-1155 Multi Token Standard\"},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC165.sol\":{\"keccak256\":\"0x70660c2c79f0ce447bf70065ef2d3762e0e87198879c2f6fbe75f04b25dd1ddd\",\"urls\":[\"bzz-raw://a4708cdc3840887ec63c82fdf9e2d74fec8b811ccdff18a04a07e15837221b70\",\"dweb:/ipfs/QmYQAbcWu8jREJg3S2ZqeRNCCp6su2ysqgzDTUYAdrvWfc\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3afca766825d028e9de27b09a0165887653a5c808bbb7fd5c1fb3507652c5bf6\",\"urls\":[\"bzz-raw://027390d281f19afee178af8bfaaf0e622e8b6a22ef96abe5899dc2421457b730\",\"dweb:/ipfs/QmZnw3VewsnoLja6BbmAFcCV9AakLFG4vJaeq8VriJMRJZ\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens."
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens."
							}
						}
					}
				}
			},
			"contracts/IERC1155TokenReceiver.sol": {
				"ERC1155TokenReceiver": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated. This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.",
								"params": {
									"_data": "Additional data with no specified format",
									"_from": "The address which previously owned the token",
									"_ids": "An array containing ids of each token being transferred (order and length must match _values array)",
									"_operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"_values": "An array containing amounts of each token being transferred (order and length must match _ids array)"
								},
								"return": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated. This function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.",
								"params": {
									"_data": "Additional data with no specified format",
									"_from": "The address which previously owned the token",
									"_id": "The ID of the token being transferred",
									"_operator": "The address which initiated the transfer (i.e. msg.sender)",
									"_value": "The amount of tokens being transferred"
								},
								"return": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated. This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_ids\":\"An array containing ids of each token being transferred (order and length must match _values array)\",\"_operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"_values\":\"An array containing amounts of each token being transferred (order and length must match _ids array)\"},\"return\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated. This function MUST return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61) if it accepts the transfer. This function MUST revert if it rejects the transfer. Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_id\":\"The ID of the token being transferred\",\"_operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"_value\":\"The amount of tokens being transferred\"},\"return\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}}},\"userdoc\":{\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"}},\"notice\":\"Note: The ERC-165 identifier for this interface is 0x4e2312e0.\"}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155TokenReceiver.sol\":\"ERC1155TokenReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x9a17debe190dd4ef63e25ead5884cdfc60a954bde410444123f1e1fedb563ba3\",\"urls\":[\"bzz-raw://832d87678d57f664e60ba4231d0db4592e9e899d25844d06dd60a213aacd68e9\",\"dweb:/ipfs/QmTDHy4nZgeiTFgELZb4nZPSsE44UEHHtouLspvdzK9sMb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type."
							}
						},
						"notice": "Note: The ERC-165 identifier for this interface is 0x4e2312e0."
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":116:1452  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":116:1452  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820ce90038dd0b5b0282dd1e6aa1dee57ca7ead31451997cabb389561eb0f45eedd64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820ce90038dd0b5b0282dd1e6aa1dee57ca7ead31451997cabb389561eb0f45eedd64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE SWAP1 SUB DUP14 0xD0 0xB5 0xB0 0x28 0x2D 0xD1 0xE6 0xAA SAR 0xEE JUMPI 0xCA PUSH31 0xAD31451997CABB389561EB0F45EEDD64736F6C634300051100320000000000 ",
							"sourceMap": "116:1336:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820ce90038dd0b5b0282dd1e6aa1dee57ca7ead31451997cabb389561eb0f45eedd64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE SWAP1 SUB DUP14 0xD0 0xB5 0xB0 0x28 0x2D 0xD1 0xE6 0xAA SAR 0xEE JUMPI 0xCA PUSH31 0xAD31451997CABB389561EB0F45EEDD64736F6C634300051100320000000000 ",
							"sourceMap": "116:1336:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 1452,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1452,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ce90038dd0b5b0282dd1e6aa1dee57ca7ead31451997cabb389561eb0f45eedd64736f6c63430005110032",
									".code": [
										{
											"begin": 116,
											"end": 1452,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "ADDRESS"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "EQ"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "MSTORE"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "DUP1"
										},
										{
											"begin": 116,
											"end": 1452,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0xb6b65a22ef7f6aabecc727a68ecaf25ff8bd381769f1eb34ab8d8bf11bc159ec\",\"urls\":[\"bzz-raw://1ec48f7930d1df622d823386118708d738c5f7c31ee499f8e1a1f204de4de10e\",\"dweb:/ipfs/QmSeNFHGDUn1Wx4opcgn3hz1HWn1BSzsWdsCkf7UKDV5kE\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							18
						]
					},
					"id": 19,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "Utility library of inline functions on addresses",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "531:558:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "541:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 10,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "541:12:0"
											},
											{
												"externalReferences": [
													{
														"account": {
															"declaration": 3,
															"isOffset": false,
															"isSlot": false,
															"src": "1048:7:0",
															"valueSize": 1
														}
													},
													{
														"size": {
															"declaration": 9,
															"isOffset": false,
															"isSlot": false,
															"src": "1028:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 11,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "1017:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1074:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1081:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1074:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 7,
												"id": 15,
												"nodeType": "Return",
												"src": "1067:15:0"
											}
										]
									},
									"documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:6:0"
									},
									"scope": 18,
									"src": "465:624:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 19,
							"src": "86:1006:0"
						}
					],
					"src": "0:1093:0"
				},
				"id": 0
			},
			"contracts/Common.sol": {
				"ast": {
					"absolutePath": "contracts/Common.sol",
					"exportedSymbols": {
						"CommonConstants": [
							27
						]
					},
					"id": 28,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "Note: Simple contract to use as base for const vals",
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27
							],
							"name": "CommonConstants",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 23,
									"name": "ERC1155_ACCEPTED",
									"nodeType": "VariableDeclaration",
									"scope": 27,
									"src": "120:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 21,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "120:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786632336136653631",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "164:10:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4063915617_by_1",
											"typeString": "int_const 4063915617"
										},
										"value": "0xf23a6e61"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "ERC1155_BATCH_ACCEPTED",
									"nodeType": "VariableDeclaration",
									"scope": 27,
									"src": "261:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 24,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "261:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786263313937633831",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:10:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3155786881_by_1",
											"typeString": "int_const 3155786881"
										},
										"value": "0xbc197c81"
									},
									"visibility": "internal"
								}
							],
							"scope": 28,
							"src": "88:326:1"
						}
					],
					"src": "0:415:1"
				},
				"id": 1
			},
			"contracts/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155.sol",
					"exportedSymbols": {
						"ERC1155": [
							493
						]
					},
					"id": 494,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 30,
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 1260,
							"src": "25:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 31,
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 19,
							"src": "50:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Common.sol",
							"file": "./Common.sol",
							"id": 32,
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 28,
							"src": "74:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155TokenReceiver.sol",
							"file": "./IERC1155TokenReceiver.sol",
							"id": 33,
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 1166,
							"src": "97:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 34,
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 1131,
							"src": "135:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 35,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1130,
										"src": "234:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1130",
											"typeString": "contract IERC1155"
										}
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 37,
										"name": "ERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1021,
										"src": "244:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC165_$1021",
											"typeString": "contract ERC165"
										}
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "244:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 39,
										"name": "CommonConstants",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 27,
										"src": "252:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CommonConstants_$27",
											"typeString": "contract CommonConstants"
										}
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "252:15:2"
								}
							],
							"contractDependencies": [
								27,
								1021,
								1130
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 493,
							"linearizedBaseContracts": [
								493,
								27,
								1021,
								1130
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 43,
									"libraryName": {
										"contractScope": null,
										"id": 41,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1259,
										"src": "280:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1259",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "274:27:2",
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 46,
									"libraryName": {
										"contractScope": null,
										"id": 44,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 18,
										"src": "312:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$18",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "306:26:2",
									"typeName": {
										"id": 45,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 52,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "370:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 47,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "379:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "370:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 50,
											"keyType": {
												"id": 48,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "398:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "390:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 49,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 58,
									"name": "operatorApproval",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "482:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 57,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "491:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "482:45:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 56,
											"keyType": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "510:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "502:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 55,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "521:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 61,
									"name": "INTERFACE_SIGNATURE_ERC165",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "729:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 59,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "729:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031666663396137",
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "782:10:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"name": "INTERFACE_SIGNATURE_ERC1155",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "1248:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 62,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1248:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786439623637613236",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1302:10:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1406:186:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "_interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1421:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 72,
															"name": "INTERFACE_SIGNATURE_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1437:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1421:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 74,
															"name": "_interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1480:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 75,
															"name": "INTERFACE_SIGNATURE_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1496:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1480:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1421:102:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 81,
												"nodeType": "IfStatement",
												"src": "1417:145:2",
												"trueBody": {
													"id": 80,
													"nodeType": "Block",
													"src": "1525:37:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1546:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 70,
															"id": 79,
															"nodeType": "Return",
															"src": "1539:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1580:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 70,
												"id": 83,
												"nodeType": "Return",
												"src": "1573:12:2"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "_interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1346:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 65,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1346:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1345:21:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1399:6:2"
									},
									"scope": 493,
									"src": "1319:273:2",
									"stateMutability": "view",
									"superFunction": 1020,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2946:813:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2965:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2980:3:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2972:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2972:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2965:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5f746f206d757374206265206e6f6e2d7a65726f2e",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2986:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0ab27c7656312f7e42f97895baa9fbdc438c4b74c263007cccc2cd44408ee3f",
																"typeString": "literal_string \"_to must be non-zero.\""
															},
															"value": "_to must be non-zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0ab27c7656312f7e42f97895baa9fbdc438c4b74c263007cccc2cd44408ee3f",
																"typeString": "literal_string \"_to must be non-zero.\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "2957:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2957:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "3028:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 109,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "3037:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3037:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3028:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 112,
																			"name": "operatorApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "3051:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 114,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 113,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "3068:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3051:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 117,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 115,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "3075:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3075:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3051:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3090:4:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3051:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3028:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3096:49:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															},
															"value": "Need operator approval for 3rd party transfers."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "3020:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:126:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3020:126:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 124,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "3271:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 127,
															"indexExpression": {
																"argumentTypes": null,
																"id": 125,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3280:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3271:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 128,
														"indexExpression": {
															"argumentTypes": null,
															"id": 126,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "3285:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3271:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "3319:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 129,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "3294:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 131,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 130,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3303:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3294:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "3308:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3294:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1234,
															"src": "3294:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3294:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3271:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3271:55:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 139,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "3336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 142,
															"indexExpression": {
																"argumentTypes": null,
																"id": 140,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3345:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3336:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 143,
														"indexExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "3350:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3336:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 146,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "3370:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 148,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 147,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3379:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3370:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 150,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 149,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "3384:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3370:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 144,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "3359:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1258,
															"src": "3359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3359:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3336:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3336:53:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3447:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3447:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 157,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 158,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "3466:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 159,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "3471:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 160,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "3476:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 154,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3432:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3432:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "EmitStatement",
												"src": "3427:56:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "3636:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "3636:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 177,
												"nodeType": "IfStatement",
												"src": "3632:121:2",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "3654:99:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 167,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "3699:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3699:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 169,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "3711:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 170,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "3718:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3723:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 172,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "3728:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 173,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "3736:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 166,
																	"name": "_doSafeTransferAcceptanceCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "3668:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3668:74:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "3668:74:2"
														}
													]
												}
											}
										]
									},
									"documentation": "@notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if balance of holder for token `_id` is lower than the `_value` sent.\nMUST revert on any other error.\nMUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\nAfter the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param _from    Source address\n@param _to      Target address\n@param _id      ID of the token type\n@param _value   Transfer amount\n@param _data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2858:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2873:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2886:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2915:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2915:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2857:79:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2946:0:2"
									},
									"scope": 493,
									"src": "2832:927:2",
									"stateMutability": "nonpayable",
									"superFunction": 1077,
									"visibility": "external"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "5532:1625:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 195,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "5583:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:3:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5583:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64657374696e6174696f6e2061646472657373206d757374206265206e6f6e2d7a65726f2e",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5604:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62feaa226fe2bab79230d856b8132c73f9553fb9f97b507f32473583a3bdc412",
																"typeString": "literal_string \"destination address must be non-zero.\""
															},
															"value": "destination address must be non-zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62feaa226fe2bab79230d856b8132c73f9553fb9f97b507f32473583a3bdc412",
																"typeString": "literal_string \"destination address must be non-zero.\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "5575:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5575:69:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5575:69:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5662:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5662:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 206,
																	"name": "_values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5677:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5677:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5662:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5f69647320616e64205f76616c756573206172726179206c656e677468206d757374206d617463682e",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5693:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d06b0e7fc248df96a03d3f6210ab25cdbd58ba1e3989c7aed9df538ab45fc969",
																"typeString": "literal_string \"_ids and _values array length must match.\""
															},
															"value": "_ids and _values array length must match."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d06b0e7fc248df96a03d3f6210ab25cdbd58ba1e3989c7aed9df538ab45fc969",
																"typeString": "literal_string \"_ids and _values array length must match.\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "5654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5654:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5654:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "5755:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 214,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "5764:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "5755:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 217,
																			"name": "operatorApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "5778:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 219,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 218,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "5795:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5778:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 222,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 220,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "5802:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5802:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5778:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5817:4:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5778:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5755:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5823:49:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															},
															"value": "Need operator approval for 3rd party transfers."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "5747:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5747:126:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "5747:126:2"
											},
											{
												"body": {
													"id": 282,
													"nodeType": "Block",
													"src": "5926:338:2",
													"statements": [
														{
															"assignments": [
																241
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 241,
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 282,
																	"src": "5940:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 240,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5940:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 245,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5953:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 244,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "5958:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5953:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5940:20:2"
														},
														{
															"assignments": [
																247
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 247,
																	"name": "value",
																	"nodeType": "VariableDeclaration",
																	"scope": 282,
																	"src": "5974:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 246,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5974:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 251,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 248,
																	"name": "_values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5990:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 250,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 249,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "5998:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5990:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5974:26:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 252,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "6137:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 255,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 253,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "6146:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6137:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 256,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 254,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "6150:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6137:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 263,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "6183:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 257,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "6159:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 259,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 258,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 241,
																					"src": "6168:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6159:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 261,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 260,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "6172:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6159:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1234,
																		"src": "6159:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6159:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "6137:52:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "6203:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 270,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 268,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "6212:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6203:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 271,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 269,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "6216:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6203:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "6235:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 276,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 275,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 241,
																					"src": "6244:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6235:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 278,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 277,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 183,
																				"src": "6248:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6235:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 272,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "6225:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1258,
																		"src": "6225:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6225:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6203:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "6203:50:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5904:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 234,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5908:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5908:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5904:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 283,
												"initializationExpression": {
													"assignments": [
														230
													],
													"declarations": [
														{
															"constant": false,
															"id": 230,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 283,
															"src": "5889:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 229,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5889:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 232,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5901:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5889:13:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5921:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 237,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5923:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 239,
													"nodeType": "ExpressionStatement",
													"src": "5921:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5884:380:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 285,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "6828:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6828:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 287,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6840:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 288,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6847:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														{
															"argumentTypes": null,
															"id": 290,
															"name": "_values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 284,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "6814:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6814:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "EmitStatement",
												"src": "6809:57:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "7027:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "7027:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7027:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 307,
												"nodeType": "IfStatement",
												"src": "7023:128:2",
												"trueBody": {
													"id": 306,
													"nodeType": "Block",
													"src": "7045:106:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 297,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "7095:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7095:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 299,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "7107:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 300,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "7114:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 301,
																		"name": "_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "7119:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 302,
																		"name": "_values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "7125:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 303,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "7134:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 296,
																	"name": "_doSafeBatchTransferAcceptanceCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "7059:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7059:81:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 305,
															"nodeType": "ExpressionStatement",
															"src": "7059:81:2"
														}
													]
												}
											}
										]
									},
									"documentation": "@notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if length of `_ids` is not the same as length of `_values`.\nMUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\nMUST revert on any other error.\nMUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\nBalance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\nAfter the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param _from    Source address\n@param _to      Target address\n@param _ids     IDs of each token type (order and length must match _values array)\n@param _values  Transfer amounts per token type (order and length must match _ids array)\n@param _data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5420:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5435:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5448:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 184,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 185,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5448:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5473:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 187,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5473:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 188,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5473:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5501:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5501:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5419:103:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5532:0:2"
									},
									"scope": 493,
									"src": "5389:1768:2",
									"stateMutability": "nonpayable",
									"superFunction": 1092,
									"visibility": "external"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "7481:289:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 318,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "7742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 320,
														"indexExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "7751:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7742:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 322,
													"indexExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "7756:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7742:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 317,
												"id": 323,
												"nodeType": "Return",
												"src": "7735:28:2"
											}
										]
									},
									"documentation": "@notice Get the balance of an account's Tokens.\n@param _owner  The address of the token holder\n@param _id     ID of the Token\n@return        The _owner's balance of the Token type requested",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "7420:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "7436:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7419:29:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "7472:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7471:9:2"
									},
									"scope": 493,
									"src": "7401:369:2",
									"stateMutability": "view",
									"superFunction": 1101,
									"visibility": "external"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "8187:276:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 338,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8206:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8206:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 340,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "8224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8224:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8206:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1277,
														"src": "8198:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8198:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8198:38:2"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"name": "balances_",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "8247:26:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 346,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8247:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8247:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 352,
																"name": "_owners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "8290:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8290:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8276:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8280:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 350,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8280:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8276:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8247:58:2"
											},
											{
												"body": {
													"id": 381,
													"nodeType": "Block",
													"src": "8361:69:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 367,
																		"name": "balances_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "8375:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 369,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 368,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8385:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8375:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 370,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "8390:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 374,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 371,
																				"name": "_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "8399:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 373,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 372,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "8404:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8399:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8390:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 378,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 375,
																			"name": "_owners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "8408:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 377,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 376,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "8416:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8408:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8390:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8375:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"nodeType": "ExpressionStatement",
															"src": "8375:44:2"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 360,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "8336:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 361,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "8340:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8340:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8336:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 382,
												"initializationExpression": {
													"assignments": [
														357
													],
													"declarations": [
														{
															"constant": false,
															"id": 357,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 382,
															"src": "8321:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 356,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8321:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 359,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8333:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8321:13:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "8356:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 364,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8358:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 366,
													"nodeType": "ExpressionStatement",
													"src": "8356:3:2"
												},
												"nodeType": "ForStatement",
												"src": "8316:114:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"name": "balances_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "8447:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 336,
												"id": 384,
												"nodeType": "Return",
												"src": "8440:16:2"
											}
										]
									},
									"documentation": "@notice Get the balance of multiple account/token pairs\n@param _owners The addresses of the token holders\n@param _ids    ID of the Tokens\n@return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"name": "_owners",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8093:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 326,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8093:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 327,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8093:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8121:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 329,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 330,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8092:53:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "8169:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 334,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "8169:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8168:18:2"
									},
									"scope": 493,
									"src": "8069:394:2",
									"stateMutability": "view",
									"superFunction": 1113,
									"visibility": "external"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "8888:131:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 393,
																"name": "operatorApproval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "8898:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 397,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 394,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "8915:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8915:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8898:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 398,
														"indexExpression": {
															"argumentTypes": null,
															"id": 396,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "8927:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8898:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "_approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "8940:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8898:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "8898:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "8979:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8979:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 405,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "8991:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 406,
															"name": "_approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9002:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 402,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "8964:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "EmitStatement",
												"src": "8959:53:2"
											}
										]
									},
									"documentation": "@notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\n@dev MUST emit the ApprovalForAll event on success.\n@param _operator  Address to add to the set of authorized operators\n@param _approved  True if the operator is approved, false to revoke approval",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "8844:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "8863:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8843:35:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8888:0:2"
									},
									"scope": 493,
									"src": "8817:202:2",
									"stateMutability": "nonpayable",
									"superFunction": 1120,
									"visibility": "external"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "9388:59:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 419,
															"name": "operatorApproval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "9405:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 421,
														"indexExpression": {
															"argumentTypes": null,
															"id": 420,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9422:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9405:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 423,
													"indexExpression": {
														"argumentTypes": null,
														"id": 422,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "9430:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9405:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "9398:42:2"
											}
										]
									},
									"documentation": "@notice Queries the approval status of an operator for a given owner.\n@param _owner     The owner of the Tokens\n@param _operator  Address of authorized operator\n@return           True if the operator is approved, false if not",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "9324:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9324:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "9340:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9323:35:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "9382:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9382:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9381:6:2"
									},
									"scope": 493,
									"src": "9298:149:2",
									"stateMutability": "view",
									"superFunction": 1129,
									"visibility": "external"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "9699:983:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 446,
																		"name": "_operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "10556:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 447,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "10567:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 448,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "10574:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 449,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "10579:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 450,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "10587:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 443,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "10533:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 442,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "10512:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1165_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10512:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1165",
																			"typeString": "contract ERC1155TokenReceiver"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1147,
																	"src": "10512:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10512:81:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "ERC1155_ACCEPTED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "10597:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "10512:101:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10615:59:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42",
																"typeString": "literal_string \"contract returned an unknown value from onERC1155Received\""
															},
															"value": "contract returned an unknown value from onERC1155Received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef98af68c848abc187fba39b58082936b9de327b8b5fd25aacd07d63c4d89e42",
																"typeString": "literal_string \"contract returned an unknown value from onERC1155Received\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "10504:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10504:171:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "10504:171:2"
											}
										]
									},
									"documentation": "//////////////////////////////////////// Internal //////////////////////////////////////////////",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9594:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9594:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9613:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9628:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9641:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9654:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "9670:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9593:96:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9699:0:2"
									},
									"scope": 493,
									"src": "9554:1128:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "10858:1011:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 480,
																		"name": "_operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "11730:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 481,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "11741:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 482,
																		"name": "_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "11748:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 483,
																		"name": "_values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "11754:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 484,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "11763:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 477,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 464,
																				"src": "11702:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 476,
																			"name": "ERC1155TokenReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "11681:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC1155TokenReceiver_$1165_$",
																				"typeString": "type(contract ERC1155TokenReceiver)"
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11681:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155TokenReceiver_$1165",
																			"typeString": "contract ERC1155TokenReceiver"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1164,
																	"src": "11681:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11681:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "ERC1155_BATCH_ACCEPTED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "11773:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "11681:114:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "636f6e74726163742072657475726e656420616e20756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11797:64:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad",
																"typeString": "literal_string \"contract returned an unknown value from onERC1155BatchReceived\""
															},
															"value": "contract returned an unknown value from onERC1155BatchReceived"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_907b1bc15e21fe4233c673581af2cf868cd5fa614b6015b432ff41fbc0222bad",
																"typeString": "literal_string \"contract returned an unknown value from onERC1155BatchReceived\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "11673:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11673:189:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "11673:189:2"
											}
										]
									},
									"documentation": null,
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10733:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10752:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10767:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10780:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 465,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10780:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 466,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10780:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10803:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10803:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 469,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10803:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "10829:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10829:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10732:116:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10858:0:2"
									},
									"scope": 493,
									"src": "10688:1181:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 494,
							"src": "214:11657:2"
						}
					],
					"src": "0:11872:2"
				},
				"id": 2
			},
			"contracts/ERC1155MixedFungible.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155MixedFungible.sol",
					"exportedSymbols": {
						"ERC1155MixedFungible": [
							1011
						]
					},
					"id": 1012,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "contracts/ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 496,
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 494,
							"src": "25:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 497,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 493,
										"src": "280:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$493",
											"typeString": "contract ERC1155"
										}
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "280:7:3"
								}
							],
							"contractDependencies": [
								27,
								493,
								1021,
								1130
							],
							"contractKind": "contract",
							"documentation": "@dev Extension to ERC1155 for Mixed Fungible and Non-Fungible Items support\nThe main benefit is sharing of common type information, just like you do when\ncreating a fungible id.",
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								493,
								27,
								1021,
								1130
							],
							"name": "ERC1155MixedFungible",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 508,
									"name": "TYPE_MASK",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "380:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 499,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "~",
															"prefix": true,
															"src": "425:2:3",
															"subExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "426:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_rational_minus_1_by_1",
																"typeString": "int_const -1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_minus_1_by_1",
																"typeString": "int_const -1"
															}
														],
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "417:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": "uint128"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												],
												"id": 500,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "409:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": "uint256"
											},
											"id": 505,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "409:20:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313238",
											"id": 506,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "433:3:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_128_by_1",
												"typeString": "int_const 128"
											},
											"value": "128"
										},
										"src": "409:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 514,
									"name": "NF_INDEX_MASK",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "496:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 509,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 512,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "UnaryOperation",
												"operator": "~",
												"prefix": true,
												"src": "537:2:3",
												"subExpression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "538:1:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"typeDescriptions": {
													"typeIdentifier": "t_rational_minus_1_by_1",
													"typeString": "int_const -1"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_minus_1_by_1",
													"typeString": "int_const -1"
												}
											],
											"id": 510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "529:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint128_$",
												"typeString": "type(uint128)"
											},
											"typeName": "uint128"
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "529:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 519,
									"name": "TYPE_NF_BIT",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "602:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 515,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 516,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "633:1:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "323535",
											"id": 517,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "638:3:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "633:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 523,
									"name": "nfOwners",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "648:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 522,
										"keyType": {
											"id": 520,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "657:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "648:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 521,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "668:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "812:56:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 530,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "829:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"id": 531,
															"name": "TYPE_NF_BIT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "835:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "829:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 533,
														"name": "TYPE_NF_BIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "850:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "829:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 529,
												"id": 535,
												"nodeType": "Return",
												"src": "822:39:3"
											}
										]
									},
									"documentation": null,
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNonFungible",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "773:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:13:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "806:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:6:3"
									},
									"scope": 1011,
									"src": "750:118:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "932:46:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 544,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "949:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"id": 545,
															"name": "TYPE_NF_BIT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "955:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "949:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "970:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "949:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 543,
												"id": 549,
												"nodeType": "Return",
												"src": "942:29:3"
											}
										]
									},
									"documentation": null,
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFungible",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "893:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "892:13:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "925:6:3"
									},
									"scope": 1011,
									"src": "873:105:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1054:43:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 558,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1071:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 559,
														"name": "NF_INDEX_MASK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1077:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1071:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 561,
												"nodeType": "Return",
												"src": "1064:26:3"
											}
										]
									},
									"documentation": null,
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonFungibleIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1012:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1011:13:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1045:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:9:3"
									},
									"scope": 1011,
									"src": "983:114:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1176:39:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1193:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "TYPE_MASK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1199:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1193:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "1186:22:3"
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonFungibleBaseType",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1134:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1133:13:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1167:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1166:9:3"
									},
									"scope": 1011,
									"src": "1102:113:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "1290:154:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 582,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1374:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 583,
																		"name": "TYPE_NF_BIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1380:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1374:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 585,
																	"name": "TYPE_NF_BIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "1395:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1374:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1373:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 588,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1412:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 589,
																		"name": "NF_INDEX_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "1418:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1412:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1435:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1412:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 593,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1411:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 581,
												"id": 595,
												"nodeType": "Return",
												"src": "1366:71:3"
											}
										]
									},
									"documentation": null,
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNonFungibleBaseType",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1251:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1250:13:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1284:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1284:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1283:6:3"
									},
									"scope": 1011,
									"src": "1220:224:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1515:149:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 604,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "1594:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 605,
																		"name": "TYPE_NF_BIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1600:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1594:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 607,
																	"name": "TYPE_NF_BIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "1615:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1594:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 609,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1593:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 610,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "1632:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 611,
																		"name": "NF_INDEX_MASK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "1638:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1632:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1632:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 615,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1631:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1593:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 603,
												"id": 617,
												"nodeType": "Return",
												"src": "1586:71:3"
											}
										]
									},
									"documentation": null,
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNonFungibleItem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1476:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1475:13:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1509:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1509:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1508:6:3"
									},
									"scope": 1011,
									"src": "1449:215:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "1729:37:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 626,
														"name": "nfOwners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "1746:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 628,
													"indexExpression": {
														"argumentTypes": null,
														"id": 627,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1755:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1746:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 625,
												"id": 629,
												"nodeType": "Return",
												"src": "1739:20:3"
											}
										]
									},
									"documentation": null,
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1686:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1685:13:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1720:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1719:9:3"
									},
									"scope": 1011,
									"src": "1669:97:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "1902:986:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 645,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "1921:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1936:3:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1928:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1928:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1921:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f742073656e6420746f207a65726f2061646472657373",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1942:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															},
															"value": "cannot send to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "1913:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "1913:59:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 654,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "1990:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 655,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "1999:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1999:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1990:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 658,
																			"name": "operatorApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "2013:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 660,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 659,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "2030:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2013:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 663,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 661,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "2037:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2037:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2013:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2052:4:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2013:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1990:66:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2058:49:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															},
															"value": "Need operator approval for 3rd party transfers."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "1982:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:126:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1982:126:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 671,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "2137:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "isNonFungible",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "2123:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) pure returns (bool)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 718,
													"nodeType": "Block",
													"src": "2537:147:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 688,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "2551:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 691,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 689,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2560:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2551:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 692,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 690,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "2565:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2551:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 699,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "2599:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 693,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "2574:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 695,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 694,
																					"name": "_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "2583:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2574:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 696,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "2588:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2574:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1234,
																		"src": "2574:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2574:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2551:55:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "2551:55:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 703,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "2620:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 706,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 704,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2629:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2620:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 707,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 705,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2634:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2620:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 714,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "2666:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 708,
																					"name": "balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "2643:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 710,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 709,
																					"name": "_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "2652:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2643:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 711,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "2657:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2643:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1258,
																		"src": "2643:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2643:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2620:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"nodeType": "ExpressionStatement",
															"src": "2620:53:3"
														}
													]
												},
												"id": 719,
												"nodeType": "IfStatement",
												"src": "2119:565:3",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "2143:388:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 674,
																				"name": "nfOwners",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "2165:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 676,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 675,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "2174:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2165:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 677,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "2182:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2165:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 673,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1277,
																		1278
																	],
																	"referencedDeclaration": 1277,
																	"src": "2157:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2157:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "2157:31:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 681,
																		"name": "nfOwners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "2202:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 683,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 682,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2211:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2202:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 684,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2218:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2202:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "2202:19:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 721,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "2714:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2714:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 723,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2726:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 724,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "2733:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 725,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "2738:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 726,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2743:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 720,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2699:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2699:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "2694:56:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 729,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "2765:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "2765:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 743,
												"nodeType": "IfStatement",
												"src": "2761:121:3",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "2783:99:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 733,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "2828:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2828:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 735,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "2840:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 736,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2847:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 737,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2852:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 738,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "2857:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 739,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "2865:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 732,
																	"name": "_doSafeTransferAcceptanceCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "2797:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2797:74:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "2797:74:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1814:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1829:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1842:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1855:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1871:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1871:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1813:79:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:3"
									},
									"scope": 1011,
									"src": "1788:1100:3",
									"stateMutability": "nonpayable",
									"superFunction": 179,
									"visibility": "external"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3053:1124:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 761,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "3072:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3087:3:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3079:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3072:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f742073656e6420746f207a65726f2061646472657373",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3093:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															},
															"value": "cannot send to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c0a965774f95a07afab09715c1a5d3bfe033f6c24c8e2664c433567e65abdee",
																"typeString": "literal_string \"cannot send to zero address\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "3064:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3064:59:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 770,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "3141:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3141:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "_values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "3156:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3156:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3141:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4172726179206c656e677468206d757374206d61746368",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3172:25:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e944b311145582f9f18031cd6ba5a21f863f45d820bd0ff78ce2456c4c5961e6",
																"typeString": "literal_string \"Array length must match\""
															},
															"value": "Array length must match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e944b311145582f9f18031cd6ba5a21f863f45d820bd0ff78ce2456c4c5961e6",
																"typeString": "literal_string \"Array length must match\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "3133:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "3133:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 779,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "3347:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 780,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "3356:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3356:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3347:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 783,
																			"name": "operatorApproval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "3370:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 785,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 784,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "3387:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3370:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 788,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 786,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "3394:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3394:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3370:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3409:4:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3370:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3347:66:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e73666572732e",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3415:49:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															},
															"value": "Need operator approval for 3rd party transfers."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_849b4236b9cc0954dc0e729ab0ed3552779085d502d2b1dad4e899fd8211d4be",
																"typeString": "literal_string \"Need operator approval for 3rd party transfers.\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "3339:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:126:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "3339:126:3"
											},
											{
												"body": {
													"id": 868,
													"nodeType": "Block",
													"src": "3518:447:3",
													"statements": [
														{
															"assignments": [
																807
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 807,
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 868,
																	"src": "3599:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3599:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 811,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 808,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "3612:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 809,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "3617:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3612:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3599:20:3"
														},
														{
															"assignments": [
																813
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 813,
																	"name": "value",
																	"nodeType": "VariableDeclaration",
																	"scope": 868,
																	"src": "3633:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 812,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 817,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "_values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "3649:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 816,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "3657:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3649:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3633:26:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 819,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "3692:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 818,
																	"name": "isNonFungible",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "3678:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 866,
																"nodeType": "Block",
																"src": "3802:153:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 836,
																						"name": "balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 52,
																						"src": "3820:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 839,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 837,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 807,
																						"src": "3829:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3820:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 840,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 838,
																					"name": "_from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "3833:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3820:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 847,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 813,
																						"src": "3866:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 841,
																								"name": "balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 52,
																								"src": "3842:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 843,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 842,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 807,
																								"src": "3851:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3842:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 845,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 844,
																							"name": "_from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 747,
																							"src": "3855:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3842:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1234,
																					"src": "3842:23:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3842:30:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3820:52:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 850,
																		"nodeType": "ExpressionStatement",
																		"src": "3820:52:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 851,
																						"name": "balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 52,
																						"src": "3890:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 854,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 852,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 807,
																						"src": "3899:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3890:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 855,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 853,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "3903:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3890:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 858,
																								"name": "balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 52,
																								"src": "3922:8:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 860,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 859,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 807,
																								"src": "3931:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3922:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 862,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 861,
																							"name": "_to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 749,
																							"src": "3935:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3922:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 856,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 813,
																						"src": "3912:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 857,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1258,
																					"src": "3912:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3912:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3890:50:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 865,
																		"nodeType": "ExpressionStatement",
																		"src": "3890:50:3"
																	}
																]
															},
															"id": 867,
															"nodeType": "IfStatement",
															"src": "3674:281:3",
															"trueBody": {
																"id": 835,
																"nodeType": "Block",
																"src": "3697:99:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 826,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 822,
																							"name": "nfOwners",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 523,
																							"src": "3723:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 824,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 823,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 807,
																							"src": "3732:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3723:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 825,
																						"name": "_from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 747,
																						"src": "3739:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "3723:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 821,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1277,
																					1278
																				],
																				"referencedDeclaration": 1277,
																				"src": "3715:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3715:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 828,
																		"nodeType": "ExpressionStatement",
																		"src": "3715:30:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 829,
																					"name": "nfOwners",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "3763:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																						"typeString": "mapping(uint256 => address)"
																					}
																				},
																				"id": 831,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 830,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "3772:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3763:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 832,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "3778:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3763:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 834,
																		"nodeType": "ExpressionStatement",
																		"src": "3763:18:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 799,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3496:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 800,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3500:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3500:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3496:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"initializationExpression": {
													"assignments": [
														796
													],
													"declarations": [
														{
															"constant": false,
															"id": 796,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 869,
															"src": "3481:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 795,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3481:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 798,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3493:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3481:13:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3513:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 803,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "3515:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 805,
													"nodeType": "ExpressionStatement",
													"src": "3513:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3476:489:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 871,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3994:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3994:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 873,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4006:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 874,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4013:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 875,
															"name": "_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4018:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														{
															"argumentTypes": null,
															"id": 876,
															"name": "_values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4024:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 870,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "3980:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "3975:57:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 879,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4047:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "4047:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4047:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 893,
												"nodeType": "IfStatement",
												"src": "4043:128:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "4065:106:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 883,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "4115:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4115:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 885,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "4127:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 886,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "4134:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 887,
																		"name": "_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "4139:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 888,
																		"name": "_values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "4145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 889,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4154:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 882,
																	"name": "_doSafeBatchTransferAcceptanceCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4079:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4079:81:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "ExpressionStatement",
															"src": "4079:81:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2941:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2956:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2969:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2969:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2969:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2994:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2994:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2994:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3022:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2940:103:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3053:0:3"
									},
									"scope": 1011,
									"src": "2910:1267:3",
									"stateMutability": "nonpayable",
									"superFunction": 309,
									"visibility": "external"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "4263:133:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 905,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4295:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "isNonFungibleItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "4277:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) pure returns (bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 916,
												"nodeType": "IfStatement",
												"src": "4273:78:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 907,
																	"name": "nfOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4320:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 909,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 908,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "4329:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4320:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 910,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "4337:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4320:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4350:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4320:31:3",
														"trueExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4346:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 903,
													"id": 915,
													"nodeType": "Return",
													"src": "4313:38:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 917,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "4368:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 919,
														"indexExpression": {
															"argumentTypes": null,
															"id": 918,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4377:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4368:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 921,
													"indexExpression": {
														"argumentTypes": null,
														"id": 920,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "4382:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4368:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 903,
												"id": 922,
												"nodeType": "Return",
												"src": "4361:28:3"
											}
										]
									},
									"documentation": null,
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "4202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "4218:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4201:29:3"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "4254:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4253:9:3"
									},
									"scope": 1011,
									"src": "4183:213:3",
									"stateMutability": "view",
									"superFunction": 325,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "4520:449:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 937,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "4539:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4539:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 939,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4557:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4557:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4539:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1277,
															1278
														],
														"referencedDeclaration": 1277,
														"src": "4531:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "4531:38:3"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"name": "balances_",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "4580:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 945,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4580:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 946,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4580:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 951,
																"name": "_owners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "4623:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4623:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4609:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 948,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 949,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "4613:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4609:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4580:58:3"
											},
											{
												"body": {
													"id": 1005,
													"nodeType": "Block",
													"src": "4694:242:3",
													"statements": [
														{
															"assignments": [
																967
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 967,
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "4708:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4708:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 971,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 968,
																	"name": "_ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4721:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 970,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 969,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "4726:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4721:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4708:20:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 973,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "4764:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "isNonFungibleItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "4746:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4746:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "4857:69:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 991,
																					"name": "balances_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 947,
																					"src": "4872:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 993,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 992,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "4882:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4872:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 994,
																						"name": "balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 52,
																						"src": "4887:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 996,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 995,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "4896:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4887:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1000,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 997,
																						"name": "_owners",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 927,
																						"src": "4900:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 999,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 998,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "4908:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4900:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4887:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4872:39:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1002,
																		"nodeType": "ExpressionStatement",
																		"src": "4872:39:3"
																	}
																]
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "4742:184:3",
															"trueBody": {
																"id": 990,
																"nodeType": "Block",
																"src": "4769:82:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 975,
																					"name": "balances_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 947,
																					"src": "4787:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 977,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 976,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "4797:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4787:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 978,
																							"name": "nfOwners",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 523,
																							"src": "4802:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 980,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 979,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 967,
																							"src": "4811:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4802:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 981,
																							"name": "_owners",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 927,
																							"src": "4818:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																								"typeString": "address[] calldata"
																							}
																						},
																						"id": 983,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 982,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "4826:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4818:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "4802:26:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4835:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "4802:34:3",
																				"trueExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 985,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4831:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4787:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 989,
																		"nodeType": "ExpressionStatement",
																		"src": "4787:49:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 959,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4669:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 960,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "4673:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4673:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4669:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"initializationExpression": {
													"assignments": [
														956
													],
													"declarations": [
														{
															"constant": false,
															"id": 956,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1006,
															"src": "4654:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 955,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4654:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 958,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4666:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4654:13:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4689:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 963,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "4691:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 965,
													"nodeType": "ExpressionStatement",
													"src": "4689:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4649:287:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1007,
													"name": "balances_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "4953:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 935,
												"id": 1008,
												"nodeType": "Return",
												"src": "4946:16:3"
											}
										]
									},
									"documentation": null,
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"name": "_owners",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "4426:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 925,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4426:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 926,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4426:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "4454:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 928,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4454:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 929,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4454:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4425:53:3"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "4502:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 932,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4502:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 933,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4502:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4501:18:3"
									},
									"scope": 1011,
									"src": "4402:567:3",
									"stateMutability": "view",
									"superFunction": 386,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "247:4724:3"
						}
					],
					"src": "0:4972:3"
				},
				"id": 3
			},
			"contracts/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1021
						]
					},
					"id": 1022,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@title ERC165\n@dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md",
							"fullyImplemented": false,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@notice Query if a contract implements an interface\n@param _interfaceId The interface identifier, as specified in ERC-165\n@dev Interface identification is specified in ERC-165. This function\nuses less than 30,000 gas.",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"name": "_interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "433:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "433:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:21:4"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "489:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "488:6:4"
									},
									"scope": 1021,
									"src": "406:89:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1022,
							"src": "120:377:4"
						}
					],
					"src": "0:498:4"
				},
				"id": 4
			},
			"contracts/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1130
						]
					},
					"id": 1131,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"absolutePath": "contracts/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 1024,
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 1022,
							"src": "25:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@title ERC-1155 Multi Token Standard\n@dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1155.md\nNote: The ERC-165 identifier for this interface is 0xd9b67a26.",
							"fullyImplemented": false,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": "@dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\nThe `_operator` argument MUST be msg.sender.\nThe `_from` argument MUST be the address of the holder whose balance is decreased.\nThe `_to` argument MUST be the address of the recipient whose balance is increased.\nThe `_id` argument MUST be the token type being transferred.\nThe `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by.\nWhen minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\nWhen burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).",
									"id": 1036,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1181:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1208:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1231:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1252:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1265:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1180:100:5"
									},
									"src": "1160:121:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\nThe `_operator` argument MUST be msg.sender.\nThe `_from` argument MUST be the address of the holder whose balance is decreased.\nThe `_to` argument MUST be the address of the recipient whose balance is increased.\nThe `_ids` argument MUST be the list of tokens being transferred.\nThe `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by.\nWhen minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\nWhen burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).",
									"id": 1050,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2258:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2285:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2308:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": false,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2329:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1043,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2329:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1044,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2329:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2345:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1046,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2345:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1047,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2345:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2257:106:5"
									},
									"src": "2238:126:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absense of an event assumes disabled).",
									"id": 1058,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2584:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2608:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2635:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2635:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2583:67:5"
									},
									"src": "2563:88:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev MUST emit when the URI is updated for a token ID.\nURIs are defined in RFC 3986.\nThe URI MUST point a JSON file that conforms to the \"ERC-1155 Metadata URI JSON Schema\".",
									"id": 1064,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2880:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1059,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2880:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2895:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2879:36:5"
									},
									"src": "2870:46:5"
								},
								{
									"body": null,
									"documentation": "@notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if balance of holder for token `_id` is lower than the `_value` sent.\nMUST revert on any other error.\nMUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\nAfter the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param _from    Source address\n@param _to      Target address\n@param _id      ID of the token type\n@param _value   Transfer amount\n@param _data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "4082:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "4097:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "4110:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "4123:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "4139:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4139:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4081:79:5"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4169:0:5"
									},
									"scope": 1130,
									"src": "4056:114:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if length of `_ids` is not the same as length of `_values`.\nMUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\nMUST revert on any other error.\nMUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\nBalance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\nAfter the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param _from    Source address\n@param _to      Target address\n@param _ids     IDs of each token type (order and length must match _values array)\n@param _values  Transfer amounts per token type (order and length must match _ids array)\n@param _data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5831:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5846:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5859:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1082,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5859:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1083,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5859:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5884:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1085,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5884:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1086,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5884:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5912:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5912:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5830:103:5"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:5"
									},
									"scope": 1130,
									"src": "5800:143:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Get the balance of an account's Tokens.\n@param _owner  The address of the token holder\n@param _id     ID of the Token\n@return        The _owner's balance of the Token type requested",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6222:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6222:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6205:29:5"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6258:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6257:9:5"
									},
									"scope": 1130,
									"src": "6187:80:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Get the balance of multiple account/token pairs\n@param _owners The addresses of the token holders\n@param _ids    ID of the Tokens\n@return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"name": "_owners",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6589:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1102,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6589:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1103,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6589:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6617:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6617:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6617:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6588:53:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "6665:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6665:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1110,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6665:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6664:18:5"
									},
									"scope": 1130,
									"src": "6565:118:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\n@dev MUST emit the ApprovalForAll event on success.\n@param _operator  Address to add to the set of authorized operators\n@param _approved  True if the operator is approved, false to revoke approval",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "7064:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "7083:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7083:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7063:35:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7107:0:5"
									},
									"scope": 1130,
									"src": "7037:71:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Queries the approval status of an operator for a given owner.\n@param _owner     The owner of the Tokens\n@param _operator  Address of authorized operator\n@return           True if the operator is approved, false if not",
									"id": 1129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "7413:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "7429:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7412:35:5"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "7471:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7471:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7470:6:5"
									},
									"scope": 1130,
									"src": "7387:90:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1131,
							"src": "240:7239:5"
						}
					],
					"src": "0:7480:5"
				},
				"id": 5
			},
			"contracts/IERC1155TokenReceiver.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155TokenReceiver.sol",
					"exportedSymbols": {
						"ERC1155TokenReceiver": [
							1165
						]
					},
					"id": 1166,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "Note: The ERC-165 identifier for this interface is 0x4e2312e0.",
							"fullyImplemented": false,
							"id": 1165,
							"linearizedBaseContracts": [
								1165
							],
							"name": "ERC1155TokenReceiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@notice Handle the receipt of a single ERC1155 token type.\n@dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\nThis function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\nThis function MUST revert if it rejects the transfer.\nReturn of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n@param _operator  The address which initiated the transfer (i.e. msg.sender)\n@param _from      The address which previously owned the token\n@param _id        The ID of the token being transferred\n@param _value     The amount of tokens being transferred\n@param _data      Additional data with no specified format\n@return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1243:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1262:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1277:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1290:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1306:20:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1306:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1242:85:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1345:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1144,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1345:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:8:6"
									},
									"scope": 1165,
									"src": "1216:137:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@notice Handle the receipt of multiple ERC1155 token types.\n@dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\nThis function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\nThis function MUST revert if it rejects the transfer(s).\nReturn of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\n@param _operator  The address which initiated the batch transfer (i.e. msg.sender)\n@param _from      The address which previously owned the token\n@param _ids       An array containing ids of each token being transferred (order and length must match _values array)\n@param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\n@param _data      Additional data with no specified format\n@return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2633:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"name": "_ids",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2667:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2667:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1153,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2667:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"name": "_values",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2692:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1155,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2692:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1156,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2692:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2720:20:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2632:109:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2759:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2758:8:6"
									},
									"scope": 1165,
									"src": "2601:166:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1166,
							"src": "99:2670:6"
						}
					],
					"src": "0:2770:6"
				},
				"id": 6
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1259
						]
					},
					"id": 1260,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1167,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 1259,
							"linearizedBaseContracts": [
								1259
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "279:344:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1176,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "510:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "515:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "510:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "506:45:7",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "518:33:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "539:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1175,
															"id": 1180,
															"nodeType": "Return",
															"src": "532:8:7"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1183,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "561:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1184,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "565:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1185,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "569:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "565:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "561:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "561:9:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1190,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "587:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1191,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "591:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "587:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "596:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "587:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1189,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "580:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "580:18:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1197,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1174,
													"src": "615:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1198,
												"nodeType": "Return",
												"src": "608:8:7"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "223:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "234:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "222:22:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "268:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "267:11:7"
									},
									"scope": 1259,
									"src": "210:413:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "780:223:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "991:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "995:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "991:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1212,
												"nodeType": "Return",
												"src": "984:12:7"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "726:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "737:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:22:7"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "771:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:9:7"
									},
									"scope": 1259,
									"src": "713:290:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1190:53:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1224,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "1207:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "1212:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1207:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1223,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1200:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1200:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "1231:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "1235:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1231:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1232,
												"nodeType": "Return",
												"src": "1224:12:7"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1147:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1135:22:7"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1181:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1180:9:7"
									},
									"scope": 1259,
									"src": "1123:120:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "1382:68:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1243,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "1392:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1244,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "1396:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1245,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "1400:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1396:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1392:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1392:9:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1250,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "1418:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "1423:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1418:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1249,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1411:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1411:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "1411:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1241,
													"src": "1442:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1256,
												"nodeType": "Return",
												"src": "1435:8:7"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1326:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1337:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1325:22:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1371:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1370:11:7"
									},
									"scope": 1259,
									"src": "1313:137:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1260,
							"src": "116:1336:7"
						}
					],
					"src": "0:1453:7"
				},
				"id": 7
			}
		}
	}
}